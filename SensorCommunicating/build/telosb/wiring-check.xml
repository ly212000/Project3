<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:SensorAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f712858a560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f71284b61f0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f71284b61f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f71282ea590"/></to>
    </wire>
    <wire loc="12:SensorAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f71285708d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71282d9020"/></to>
    </wire>
    <wire loc="13:SensorAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128580770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7128070640"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128070640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SensorAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7f7128565b70"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f7127982310"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f7127982310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f71263a28d0"/></to>
    </wire>
    <wire loc="20:SensorAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7f7128564420"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f712797c750"/></to>
    </wire>
    <wire loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f712797c750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f71262b6bd0"/></to>
    </wire>
    <wire loc="21:SensorAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7f7128563d00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f7127980240"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f7127980240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f71263a0790"/></to>
    </wire>
    <wire loc="24:SensorAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f712856d500"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f7127574930"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f7127574930"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f712753e020"/></to>
    </wire>
    <wire loc="25:SensorAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f712856ad60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f7127571b80"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f7127571b80"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f712753d270"/></to>
    </wire>
    <wire loc="31:SensorAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71285055f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f71269e9c30"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71269e9c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7125e8a8b0"/></to>
    </wire>
    <wire loc="32:SensorAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f71284f64e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f71269e88b0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f71269e88b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7125e89590"/></to>
    </wire>
    <wire loc="33:SensorAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f71284eb5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f71269e9020"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f71269e9020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f7125e8bb60"/></to>
    </wire>
    <wire loc="34:SensorAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f71284e76f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f712752ec10"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f712752ec10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f71274fc2f0"/></to>
    </wire>
    <wire loc="35:SensorAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f71284e3df0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f71269e2910"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f71269e2910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7127528020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126b47dd0"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126bd1b70"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126bf3750"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126c10080"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126d61620"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126e50c60"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71273897e0"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7125ff4020"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f712721b020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71274303c0"/></to>
    </wire>
    <wire loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7127640150"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126281060"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71278c6c60"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71263091b0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7127bfb3a0"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71263e5020"/></to>
    </wire>
    <wire loc="45:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7127eb6020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f712805e400"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f71282eac00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f7128a303a0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7128a303a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f71285db140"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f71282e96c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71284b55b0"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f71284b55b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71284b19c0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f71282e9dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f71284ae150"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f7128490020"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f7128490020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f712848c020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f71284ae830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71284b0c80"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f71284ad020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71282b1c40"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f712848c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7128476cb0"/></to>
    </wire>
    <wire loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f71284856c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f71284753d0"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f71286124c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7128474680"/></to>
    </wire>
    <wire loc="113:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f71284315a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f712836e6d0"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f712841f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f7128367b30"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f7128428700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f7128374160"/></to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f712840ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f712834dcb0"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f712842faa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7128375480"/></to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f7128412020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f712834d020"/></to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f7128409a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f7128336cb0"/></to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f712841a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f7128347220"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f7128432b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f71283c49d0"/></to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f712840ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f712835c2f0"/></to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f71284143e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f712835d610"/></to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f712841e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f712835e220"/></to>
    </wire>
    <wire loc="115:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f7128427700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f712836c7a0"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f712840ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f71283452f0"/></to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f712841dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f71283576d0"/></to>
    </wire>
    <wire loc="114:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f712842e890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f712836dac0"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f7128442060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283d3c80"/></to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f7128412da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7128346610"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f71284380c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f7128376020"/></to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f7128419a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f71283406d0"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f71284226d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f712837ca90"/></to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f712840da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f71283557a0"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f712842acf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f712837dde0"/></to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f71284131f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7128356ac0"/></to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f712840aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f712833d7a0"/></to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f712841b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f7128350b30"/></to>
    </wire>
    <wire loc="120:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f7128411b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f712833eac0"/></to>
    </wire>
    <wire loc="128:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f712840fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f7128365cb0"/></to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f7128410a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7128336020"/></to>
    </wire>
    <wire loc="127:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f7128415570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7128365020"/></to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f7128416020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f7128338b30"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f71283d1c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283d15b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f71283d02f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f7128331aa0"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f71283d0940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f712832e260"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f712837b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283d3c80"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f7128379020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283d15b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128373020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283d3c80"/></to>
    </wire>
    <wire loc="110:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f71283727a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283d15b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f712836b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283d3c80"/></to>
    </wire>
    <wire loc="117:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f712836ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283d15b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f71283c9c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f71283c82f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f712832e9f0"/></to>
    </wire>
    <wire loc="123:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f71283c8940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f712832c240"/></to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128364b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f71283622f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f712835b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f712835a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128354610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="144:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f7128353c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f712834cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f712834a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128344160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f71283437a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f712833c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f712833bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7128335b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f71283332f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f71285d9040"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f71285d5490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f71289c73b0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f71282b1c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71282dc8e0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f71282d17b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f71282b5360"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f71282b5360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7128099440"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f71282d7980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f71282b46a0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f71282b46a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7128084020"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f71282d6ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f71282b39c0"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f71282b39c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f712807fb90"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7128088610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f7128259200"/></to>
    </wire>
    <wire loc="486:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f7128259200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128135740"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f71280832f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f7128257200"/></to>
    </wire>
    <wire loc="487:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f7128257200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128130100"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712807ede0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f7128255200"/></to>
    </wire>
    <wire loc="488:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f7128255200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712812cd10"/></to>
    </wire>
    <wire loc="442:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f712829a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281cf100"/></to>
    </wire>
    <wire loc="455:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f7128286020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712819fd10"/></to>
    </wire>
    <wire loc="531:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f712823c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128191d10"/></to>
    </wire>
    <wire loc="551:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f7128217570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128105100"/></to>
    </wire>
    <wire loc="532:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f712823a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712818c740"/></to>
    </wire>
    <wire loc="460:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f7128282020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128195100"/></to>
    </wire>
    <wire loc="473:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f712826d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128166e00"/></to>
    </wire>
    <wire loc="497:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f7128248200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712810fd10"/></to>
    </wire>
    <wire loc="535:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f7128234580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128182d10"/></to>
    </wire>
    <wire loc="545:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f7128224570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128122100"/></to>
    </wire>
    <wire loc="557:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f712820f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128101d10"/></to>
    </wire>
    <wire loc="445:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f7128294020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281c0100"/></to>
    </wire>
    <wire loc="536:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f7128232580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712817d740"/></to>
    </wire>
    <wire loc="450:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f7128290020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281b7740"/></to>
    </wire>
    <wire loc="463:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f712827c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128187100"/></to>
    </wire>
    <wire loc="476:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f7128267200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128157d10"/></to>
    </wire>
    <wire loc="489:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f7128253200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128127740"/></to>
    </wire>
    <wire loc="500:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f7128242200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128101d10"/></to>
    </wire>
    <wire loc="440:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f712829e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281d9d10"/></to>
    </wire>
    <wire loc="453:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f712828a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281a9860"/></to>
    </wire>
    <wire loc="466:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f7128275020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128178100"/></to>
    </wire>
    <wire loc="530:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f712823e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128191d10"/></to>
    </wire>
    <wire loc="548:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f712821e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128113100"/></to>
    </wire>
    <wire loc="555:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f7128211570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128101d10"/></to>
    </wire>
    <wire loc="541:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f712822a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712813bd10"/></to>
    </wire>
    <wire loc="471:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f7128271020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712816fa60"/></to>
    </wire>
    <wire loc="484:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f712825d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712813f100"/></to>
    </wire>
    <wire loc="495:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f712824d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128119740"/></to>
    </wire>
    <wire loc="549:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f712821c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712810fd10"/></to>
    </wire>
    <wire loc="538:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f7128230570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128149d10"/></to>
    </wire>
    <wire loc="443:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f7128298020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281cad10"/></to>
    </wire>
    <wire loc="456:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f7128284020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712819a740"/></to>
    </wire>
    <wire loc="493:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f7128251200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128122100"/></to>
    </wire>
    <wire loc="461:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f7128280020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128191d10"/></to>
    </wire>
    <wire loc="474:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f712826b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128161740"/></to>
    </wire>
    <wire loc="498:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f7128246200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712810a740"/></to>
    </wire>
    <wire loc="540:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f712822c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712813f100"/></to>
    </wire>
    <wire loc="438:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f71282ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281e26d0"/></to>
    </wire>
    <wire loc="451:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f712828e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281b2100"/></to>
    </wire>
    <wire loc="464:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f712827a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128182d10"/></to>
    </wire>
    <wire loc="477:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f7128265200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128152740"/></to>
    </wire>
    <wire loc="542:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f7128228580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128178100"/></to>
    </wire>
    <wire loc="546:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f7128222570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712811ed10"/></to>
    </wire>
    <wire loc="552:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f7128215570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128101d10"/></to>
    </wire>
    <wire loc="482:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f7128261200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128149d10"/></to>
    </wire>
    <wire loc="543:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f7128226580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128174d10"/></to>
    </wire>
    <wire loc="441:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f712829c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281d4740"/></to>
    </wire>
    <wire loc="454:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f7128288020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281a3270"/></to>
    </wire>
    <wire loc="467:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f7128273020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128174d10"/></to>
    </wire>
    <wire loc="539:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f712822e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128144740"/></to>
    </wire>
    <wire loc="550:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f712821a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712810a740"/></to>
    </wire>
    <wire loc="472:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f712826f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712816a460"/></to>
    </wire>
    <wire loc="485:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f712825b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712813bd10"/></to>
    </wire>
    <wire loc="496:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f712824b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128113100"/></to>
    </wire>
    <wire loc="444:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f7128296020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281c5740"/></to>
    </wire>
    <wire loc="494:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f712824f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712811ed10"/></to>
    </wire>
    <wire loc="449:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f7128292020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281bcd10"/></to>
    </wire>
    <wire loc="462:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f712827e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712818c740"/></to>
    </wire>
    <wire loc="475:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f7128269200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712815b100"/></to>
    </wire>
    <wire loc="499:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f7128244200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128105100"/></to>
    </wire>
    <wire loc="439:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f71282a0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281dd100"/></to>
    </wire>
    <wire loc="452:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f712828c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f71281aed10"/></to>
    </wire>
    <wire loc="465:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f7128277020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712817d740"/></to>
    </wire>
    <wire loc="478:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f7128263200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f712814d100"/></to>
    </wire>
    <wire loc="534:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f7128236560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128187100"/></to>
    </wire>
    <wire loc="547:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f7128220570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128119740"/></to>
    </wire>
    <wire loc="533:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f7128238580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128187100"/></to>
    </wire>
    <wire loc="483:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f712825f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128144740"/></to>
    </wire>
    <wire loc="554:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f7128213570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128105100"/></to>
    </wire>
    <wire loc="558:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f712820d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128127740"/></to>
    </wire>
    <wire loc="529:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f71282401f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7128195100"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f712805d1d0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f712805d1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7127ee7690"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f712805e400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7127f64760"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7128055a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7127ed9cf0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7127f64760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126508380"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f7127ee2c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7127f37cf0"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7127f311d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7127f63020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7127f63020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7126501020"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7127ece020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127fe1020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7127fe1020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127fa50f0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7126508380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71264eca30"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f71264fb780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7126508bd0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7126508bd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f71264eb340"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f71264fd3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127fe1020"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71264e84c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f71264f17b0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71264f17b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71264e6a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71264f0da0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71264f0da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f71264e5da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f71264ee0c0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f71264ee0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f712841f020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f7128415570"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f712841dbe0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f71284131f0"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f712841b0c0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f7128412020"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f712841a5a0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f7128412da0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f7128419a50"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f7128411b80"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f7128416020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f7128410a20"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f7127fa2540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f7127fd8060"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f7127fd8060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127fd30a0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f7127fc42c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f7127f2d490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f7127edce80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f7127ebac50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7127eb7810"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7f7127ebddd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7127eb9870"/></to>
    </wire>
    <wire loc="17:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f7127eb9870"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7127c0c0c0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f7127eb2c40"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f7127ea40c0"/></to>
    </wire>
    <wire loc="14:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f7127ea40c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f7127c11440"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f7127bfe080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f7127eaf6e0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f7127c11440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f7127e33210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f7127e990d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f7127c12440"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f7127c12440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f7127e37b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127c10020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127c0c920"/></to>
    </wire>
    <wire loc="19:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127c0b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127c13020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127c13020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127e39320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127c13c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126454c70"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126454c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127cdbd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127e30600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127c10020"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712644dd70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127e35dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f7127e32370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126454020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126454020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127cdca60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127e2cbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f712644d5d0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f712644d5d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f7127ce1ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127e35dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127da7e70"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f7127e33210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f7127da5890"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f7127e37b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f7127da6790"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127e39320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127da70d0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127da33e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127e30600"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f7127da45b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f7127e32370"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127d9d5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127e2cbe0"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f7127da3a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7127d8dd30"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7127d8dd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f7127d85550"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7127d9c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127cf9110"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7127cf9110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f7127fd8060"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7127d9a120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127d8a860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f7127d80130"/></to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127d8d500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127d88bc0"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f7127d80a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f712822e580"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f7127d7e990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f712822c580"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f7127d7c990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f712822a580"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f7127d7a990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f7128226580"/></to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f7127d78990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f7128228580"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7126452be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7127d8dd30"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7126452440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127cd9590"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127cd9590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c47400"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127cd8370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712644dd70"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127cdbd50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127c48020"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127c48020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f71263e26c0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f7127ce1ce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f7127cd55c0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127cdca60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127c49210"/></to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127c49210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71263e3850"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c47400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71263e1a70"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f7127cc3690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127d8a860"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127c47cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127cd8370"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127cc24b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c47400"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c2c9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c487a0"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c487a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71263e2e40"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127c42b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127d8d500"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71263e0400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127c47cd0"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f71263e0bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f71263e5630"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f71263ddde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f71263ad470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127c42b20"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71263adbd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f7127c2c400"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71263ac270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c2c9d0"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71263ace80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c2b720"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f7127bfba00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f7127bfe080"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f712797f900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f71263a0020"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f7127981aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f71263a2160"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f712639fe30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127ba5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f712639c7b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127ba42c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f712639daf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127ba5020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f712639bc50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127ba42c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127ba42c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127b28c90"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127ba5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127b151d0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127b151d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71279d6b60"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f7127b262f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f7127b14020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f7127b14020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b10330"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f7127b25480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f7127b13370"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f7127b13370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b0bd60"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f7127b23610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f7127b12730"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f7127b12730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f71279e6a30"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7127b22240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71279951e0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f71279951e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7127b1d450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f7127b1b2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f7127b1cac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71279d6b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126306970"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b0e490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f7128298020"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b09020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f7128296020"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b05de0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f7128294020"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7f7127af8510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b06b60"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f7127af7830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b10330"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f7127af6b40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b0bd60"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7127afd080"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7127ae95a0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7127ae95a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f71279e5610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f7127ad7710"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f7127ad7710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f7127ac3710"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f71279ce280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f7127afe3e0"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279a1020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279d3e80"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279d3e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7126304c30"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279a22f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279d3270"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279d3270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7126304020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f7127af4700"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f7127ad8710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f7127ac4710"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f7127acd8a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f7127ab98a0"/></to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f7127ad5710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f7127ac1710"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f7127ad2710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f7127abf710"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f7127ade710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f7127ac6710"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f7127acf710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f7127abc710"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f7127acc8a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f7127ab88a0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f7127ada660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f7127ac86b0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f7127ad1710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f7127abe710"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f7127ad9710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f7127ac5710"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f7127ace8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f7127abb8a0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f7127ad6710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f7127ac2710"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f7127ad3710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f7127ac0710"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f7127adf710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f7127ac7710"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f7127ad0710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f7127abd710"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f71279d49e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126305850"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7126303590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71279d2770"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7126303d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f71263097c0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f7126300020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f71262cf0f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f71279ce280"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71262cfb70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71279ced00"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71262ce270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279a22f0"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71262cee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279a1020"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f71262cd680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f71262cde60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f71262b6bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7127949410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f7127578020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f71262b1840"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f71262b1840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f712764c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f712797c020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f71275848b0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262b44a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f7127581300"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262ae5c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f7127581300"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f712793d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262b44a0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f712793b450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f71262a8730"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f71262a8730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f71278cb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f7127941640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71262a9af0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71262a9af0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f7127732d30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262a59a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262b44a0"/></to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f7127906e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f71262a6720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f71278ca960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f71262a5060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f71278c8920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f712772e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71278d8cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f7126295300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262a59a0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f712772d740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f7126296060"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f71278ca960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f71278c01d0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f71278c7760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f71278be020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f71278c8920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f71278bf1d0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f71278cb1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f71278c3980"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71278d8cd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f712774d520"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f712774d520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f712627e6c0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f71278be940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712774cb20"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712774cb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712627dcb0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f71278af6b0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f71277dd020"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f71278a9140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f7128251200"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f71278a7200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f712824f200"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f71278a5200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f712824d200"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f71278a3200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f712824b200"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f71278a1200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f7128248200"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f712789f200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f7128246200"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f712789d200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f7128244200"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f712789b200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f7128242200"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f71278bb5f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f7128442060"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f71278aed30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f7128432b10"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f71278ac160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f71284380c0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f71278ab530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f712842acf0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f71278aa3a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f712842faa0"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f712774c3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f712627d530"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712627c610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712774b570"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f712627cdd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f7126281670"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f712627b900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f7127732d30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f71276cacb0"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f71276c5030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f712772e1d0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f71276c1020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f712772d740"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f71276c5d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f7127728280"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f71276c49c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f7127728e40"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f7127725a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f71276904e0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f71276904e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f712771f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7127689020"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7127689020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f712771a6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7127683b40"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7127683b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f71277279c0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f71277dd020"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f71276bf7f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f712623f280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262ae5c0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f71276485e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262ae5c0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127644280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126242360"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126242360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f7127732d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7127647c90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7126241020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7126241020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f71278cb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f712764c1d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f71275cacb0"/></to>
    </wire>
    <wire loc="32:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f712763ab10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f71276485e0"/></to>
    </wire>
    <wire loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f712759a8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127644280"/></to>
    </wire>
    <wire loc="35:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f712759fbf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f7127640e70"/></to>
    </wire>
    <wire loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f712763b1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7127647c90"/></to>
    </wire>
    <wire loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7127637020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f71275d2970"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f71275d2970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f712622c020"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f712760e380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f712761caa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f7127616100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f71275d2120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126232450"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7126232450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126217ca0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f7126226780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7126232ca0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7126232ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f71262165b0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f71262283d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127fe1020"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126212710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f712621c880"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f712621c880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7126211da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712621a020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712621a020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f712620f0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f7126219440"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f7126219440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f7126240020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f71278ca960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f7126240910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f71278c8920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f712772e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71278d8cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f71261cc120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f712623f280"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f712772d740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f71261cfdc0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f71275448f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f712756a340"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f712756a340"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f7127563680"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f7127545720"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f712756b020"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f712756b020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127568370"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f712753ce20"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f7127549b80"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f7127539130"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f7127548ce0"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127567610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f7128284020"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f71275612f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f7127acc8a0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f7127543480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f71274fc2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f71274d3020"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f712752bca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f71274fb320"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f71274fb320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f7126b09020"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f7127528c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f71274f81d0"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f71274f81d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f7126b08df0"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71275272b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f71274f6020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71274f6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7126b06a80"/></to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7127524430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126cdc550"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126cdc550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126ccea80"/></to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f71275085b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274e2170"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274e2170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274c2080"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7127528020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f71274f9510"/></to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f71274f9510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126b08210"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f712751d350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274f4020"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274f4020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274c3020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f71274f8800"/></to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f71274f8800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7126b07470"/></to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7127514660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7126cd8660"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7126cd8660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7126ccaaf0"/></to>
    </wire>
    <wire loc="97:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f71274d3020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f7126b3ab80"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274ec2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126b038b0"/></to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f71274e01d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f7126b05ce0"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274ed0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274c4020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274c4020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274c2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f7126b3a080"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274c3020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f7126cde6e0"/></to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f71274d7430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f71274c2b70"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f71274c2b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f7126b26020"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f71274e8170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f71274c39d0"/></to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f71274c39d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7126cdda70"/></to>
    </wire>
    <wire loc="97:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f7126afb0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71274d11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126b02860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f71274ce990"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f71274ce990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f7126ba4ca0"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126b01690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f71274c7840"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f71274c7840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f7126ba3a50"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f7126afd4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f7126f07b30"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126b01ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126cd3d20"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126b00b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126ccf640"/></to>
    </wire>
    <wire loc="104:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f7126aff610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f7127437b80"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f7127437b80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f712742f7e0"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f7126afc1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274bc330"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274bc330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274b67e0"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7126afbd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7126b3ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f7126b37d90"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7126cdda70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7126cce020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f7126b26020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f7126b24410"/></to>
    </wire>
    <wire loc="97:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f7126ba4ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f7126b99a20"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f7126b3a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f7126b332d0"/></to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f71274cf500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126ba45f0"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7126ba45f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f7126b99370"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f7126cde6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f7126cd0c50"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71274d11d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126ba7cb0"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126ba7cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126b9b7b0"/></to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f71274c56f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126ba6960"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7126ba6960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f7126b9a4d0"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f71274cfbc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f7126ba2170"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f7126ba2170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f7126b96020"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f7126ba3a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f7126b97840"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f7126b37d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f71274be390"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f71274be390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f71274bbe80"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126ba16b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126bf9220"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7126bf9220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126bf6a20"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126bf8020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126b29350"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7126b29350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7126b26d70"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126b26d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126b3fcf0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7126b3fcf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7126b38860"/></to>
    </wire>
    <wire loc="104:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126b38860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f71274bee80"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f71274bee80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f71274b8990"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126ba1020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126b3c980"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7126b3c980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7126b37690"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126b37690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126bd8aa0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7126bd8aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126bd4e30"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126bd5950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f71274bdb40"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f71274bdb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126d657c0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7126d657c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7126d5f020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71274b5640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127448720"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127448720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127430a30"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f71274aeb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f7127442a60"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f7127442a60"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f712742d5b0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f71274b2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7126e606d0"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f71274b2020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7126d685c0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f7126d685c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7126d61ca0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f7126e606d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7126e4f320"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f71274a5d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f7126e5d020"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f7126e5d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126e4fbc0"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f71274acae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126e5dcb0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126e5dcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126e4e970"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274a0020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f712749a660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f71274a4020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f7126c16a20"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f7126c16a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f7126c0fa20"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f7127495e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f7126c18aa0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f7126c18aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f712721f280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f71274a47f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f71274909e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f7127491a10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f7127492a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f7127436e60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f712742c9b0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f7127429830"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127386220"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127386220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127380af0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f7127425a40"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f7127342e60"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f7127342e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127334b60"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f7127424ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f712733d6a0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f712733d6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127325d70"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f7127421020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f712733bce0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f712733bce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f712731b710"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f7127420400"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f7127305d60"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f7127305d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f71272e48a0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f712740d1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126f92e20"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126f92e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f712740c2e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f7126f8f7b0"/></to>
    </wire>
    <wire loc="132:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f7126f8f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f712740c9f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f8eae0"/></to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f8eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f712740ea80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f90ad0"/></to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f90ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f712740e160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f8d160"/></to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f8d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7127413be0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f84870"/></to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f84870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7127415550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f82880"/></to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f82880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7127415e00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f810a0"/></to>
    </wire>
    <wire loc="159:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f810a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7127414710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f89e50"/></to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7127411020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f88670"/></to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f712741d5a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f7126f74500"/></to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f7126f74500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7127416c00"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f75ce0"/></to>
    </wire>
    <wire loc="183:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f75ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f71274118e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f85e50"/></to>
    </wire>
    <wire loc="153:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f85e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f71274101c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f7126f88e50"/></to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f7126f88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7127410a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f87e50"/></to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f87e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f712740bd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126f62a80"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126f62a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f712740b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126f339e0"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126f339e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f712741baf0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f7126f07b30"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f712742adf0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f7126f06d30"/></to>
    </wire>
    <wire loc="23:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f7126f06d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f7126eec310"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f71273ff820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f7127401940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f71273897e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7127380260"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7127380260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f712618b450"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127380af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f712618bca0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f712618b450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f71261833d0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f712618bca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f712617c020"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f71261833d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126168ca0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f7126176780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7126183c20"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7126183c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f71261665b0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f71261793d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f712736a080"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f712736a080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7127365cd0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126163710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f712616d9d0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f712616d9d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7126162da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712616b120"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712616b120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f71261600c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f712616a440"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f712616a440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f71273610f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f7127fd8060"/></to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f712733f090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f712732f710"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f712733e390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f712732a1d0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f7127387b20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127338020"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f712733c9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7127320b60"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f71273372f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f712829a020"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127333de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f712826d200"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712732e930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f712829c020"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127328480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f71282ab020"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127323020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f7128265200"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712731fde0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f712826f200"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712731a930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f7128267200"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f7127305150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f71272fda20"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f7127304a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f71272df8b0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71272ec5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f712841e5a0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f71272ea8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f712840ea20"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f71272e97a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f712826f200"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f71272e3480"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f7127ad8710"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f71272de480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f7127ada660"/></to>
    </wire>
    <wire loc="131:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f7126f8f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f83880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f7126f7b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f7126f820a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f6f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126f72500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f8e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f7126f77880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f73500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f7d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f7126f7f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f91a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7127297930"/></to>
    </wire>
    <wire loc="138:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f8de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126f8b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f76c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f8bbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f73ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f7126f770a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f87670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f790a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f7126f7b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f79880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f70ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126f72ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f7126f7f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f7126f7a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f74ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f81880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f6fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126f90480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f7126f89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f85670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f7c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f7c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f830a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f8a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f7126f89020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f8d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f75500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f7126f70500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f7d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f7126f7a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126f8fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f800a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126f8a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f7126f80880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f7126f760a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f6e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f7127293bb0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f7127291020"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f7127291db0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127294810"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127290ba0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f712728b020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f7127223770"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f7127223770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f712721f280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f712728e400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127200c40"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127200c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126073770"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f712728c080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f71271ff8f0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f71271ff8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f7126072be0"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f7127283680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f7126fb8020"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f7126fb8020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f7126071d70"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f712728bdf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f712727e120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f712721f280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f712721bb70"/></to>
    </wire>
    <wire loc="110:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f7126071d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f71271ea850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f7126072be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f71271eb020"/></to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126073770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71271ee430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126072440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126068d90"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126068d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f71270982c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f71271eb020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f712718ea10"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f71260712b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f71271eb6a0"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f71271eb6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f712718d060"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f71271e8a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f71260705a0"/></to>
    </wire>
    <wire loc="115:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712605a5d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71271ec6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f71271e9690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126068140"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126068140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127099020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f71271e62a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7126062760"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7126062760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f712709b4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71271ec6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712718e250"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f71271ea850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f712718dc50"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f71271ee430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127190470"/></to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f712718b3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f71271e8a40"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f712718c5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f71271e9690"/></to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127186480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f71271e62a0"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f712718ba50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f712717c020"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f712717c020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f7127175c70"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7127186c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f71271842f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f71271775e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f712716d150"/></to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127178d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f712716e780"/></to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f7127140bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f712823e580"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f712713eb20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f712823a580"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f712713cb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f7128238580"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f712713ab20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f7128232580"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f7127138b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f7128234580"/></to>
    </wire>
    <wire loc="14:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f7127145d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f7127076430"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f7126061020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f712709a3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f7126061630"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f7127083540"/></to>
    </wire>
    <wire loc="11:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f7127083540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f7127076430"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7126067d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f712717c020"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71260675a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127098ad0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127098ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712708ec30"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71270978a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712605a5d0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f71270982c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f712708f850"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f712708f850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7125ff16c0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f712709b4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f7127094060"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127099020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7127090a80"/></to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7127090a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7125ff2850"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f712709a3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f7127094990"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712708ec30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7125ff0a70"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712708c570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71270978a0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127093e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712708ec30"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f7127093060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127178d10"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f7127093840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f71271775e0"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f712708e020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7125ff1e40"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7125fef400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712708c570"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7125fefbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f7125ff4630"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f7125fecde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f712706f250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f7127175c70"/></to>
    </wire>
    <wire loc="18:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f712706bd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f712823e580"/></to>
    </wire>
    <wire loc="19:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f7127069cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f7128238580"/></to>
    </wire>
    <wire loc="153:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f53c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f7126f60da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f56b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f51670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f7126f4ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f7126f51e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f3d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126f3f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f5d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f7126f45670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f7126f55c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f54c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f4b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f7126f4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f4f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f61760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></to>
    </wire>
    <wire loc="138:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f5aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126f59120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f44a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f59870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f40ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f5ddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f7126f46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f54480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f55480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f60750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f7126f48670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f3ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126f3fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f7126f4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f7126f48e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f41ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f3dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126f60100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f7126f56370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f53480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f4be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f4fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f4a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f52670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f7126f5f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f52e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f58020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f7126f58cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f7126f412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f43ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f5a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f432f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f7126f3e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f7126f47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126f5faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f5d770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126f58670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f7126f4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f7126f45e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f3c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f26c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f7126f31da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f2ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f24670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f7126f1de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f7126f24e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126f132f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f2f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f7126f18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f142f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f7126f29c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f28c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f1e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f7126f21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f32760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></to>
    </wire>
    <wire loc="138:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f2eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126f2c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f17a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f2c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f14ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f2fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f7126f1ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f28480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f29480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f31750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f7126f1c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f1a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f11ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126f13ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f7126f1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f7126f1ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f15ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f10ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126f31100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f7126f2a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f26480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f1ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f1d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f7126f30450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f2b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f7126f2bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f7126f152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f16ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f2e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f162f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f7126f112f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f7126f1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126f30aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f2f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126f2b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f7126f21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f7126f18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f0f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f7126ee88c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f7126ede020"/></to>
    </wire>
    <wire loc="20:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f7126ede020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f7126ed8210"/></to>
    </wire>
    <wire loc="16:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f7126ed4cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f7126ec3020"/></to>
    </wire>
    <wire loc="21:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f7126ec3020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f7126ec1490"/></to>
    </wire>
    <wire loc="17:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f7126ed75b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f7126e76a20"/></to>
    </wire>
    <wire loc="18:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f7126ec38c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f7126ec45a0"/></to>
    </wire>
    <wire loc="11:/home/ly/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f7126ec45a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f7126e749e0"/></to>
    </wire>
    <wire loc="18:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f7126ebab40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f7126e9a020"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f7126e9a020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f7126e97d20"/></to>
    </wire>
    <wire loc="19:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f7126ec1d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f7126ec38c0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7126e87260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f7126e84890"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f7126e84890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7126e7d060"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126e7a190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f7128442060"/></to>
    </wire>
    <wire loc="9:/home/ly/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7126e73c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f712828a020"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f7126e599f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f7126e4d900"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f7126e5b190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f7126e4c0f0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f7126e4cae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127386220"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f7126e3f500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f7127387b20"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f7126e39820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f7127342e60"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f7126e38b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f712733c9b0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f7126e40880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f7127305150"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f7126e36020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126d98c30"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126d98c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126e36d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126d978f0"/></to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126d978f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126e336d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f7126d962f0"/></to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126d962f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126e33de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f7126d95cc0"/></to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126d95cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126e31530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f7126d94370"/></to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126d94370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126e31c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126d93d00"/></to>
    </wire>
    <wire loc="138:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126d93d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126e34e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f7126d8dc60"/></to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126d8dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126e35780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f7126d747a0"/></to>
    </wire>
    <wire loc="196:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126d747a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126e34550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126d792f0"/></to>
    </wire>
    <wire loc="186:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126d792f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126e303e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126d8e480"/></to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126d8e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126e2f5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126d8ae50"/></to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126d8ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126e2e020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126d89670"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126d89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126e30e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f7126d907b0"/></to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126d907b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126e2d9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f7126d76ad0"/></to>
    </wire>
    <wire loc="191:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126d76ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126e2e890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f7126d782f0"/></to>
    </wire>
    <wire loc="188:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126d782f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126e2d130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f7126d78ad0"/></to>
    </wire>
    <wire loc="189:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126d78ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126e26d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126d68df0"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126d68df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126d60550"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126e48d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126e47bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7126e46950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126cdc550"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126e3abe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126cd4480"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126cd4480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126cc68b0"/></to>
    </wire>
    <wire loc="104:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7126e296c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="153:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126d8bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f7126d95020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126d8fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f7126d82e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f7126d89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126d752f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f7126d7d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f7126d8ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f7126d83670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f7126d86e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7126d88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126d91370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126d7ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f7126d91ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126d79ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126d93060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f7126d7fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126d8d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f7126d96940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126d80e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f7126d81670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126d7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f7126d84670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f7126d81e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f7126d7aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f7126d87670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126d75ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f7126d8f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126d8b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f7126d83e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7126d88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f7126d82670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7126d8a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f7126d95670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126d90160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f7126d90e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f7126d7a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7126d7bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126d936b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126d7b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f7126d762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126d84e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f7126d80670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f7126d949c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f7126d87e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f7126d86670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f7126d7de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f7126d64020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f7126d5f7c0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7126d4a150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f7126d5d020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f7127342e60"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f7126d5c380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f712733f090"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f7126d5b6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f712733e390"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f7126d5aa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f7127304a20"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f7126d596e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7126c64520"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7126c64520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126d58530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f7126c40480"/></to>
    </wire>
    <wire loc="195:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f7126c40480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126d57ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126c5e060"/></to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126c5e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126d573a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f7126c5ed00"/></to>
    </wire>
    <wire loc="139:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f7126c5ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126d56330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126d551e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7126d53d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126cdc550"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f7126d55b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f7127437b80"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126d4e3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126c56840"/></to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126c56840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126d4ecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126c54060"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126c54060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126d4fb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f7126c5dae0"/></to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f7126c5dae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126d4c6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f7126c42c60"/></to>
    </wire>
    <wire loc="192:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f7126c42c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126d4d590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f7126c44c60"/></to>
    </wire>
    <wire loc="188:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f7126c44c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126d4de00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f7126c43480"/></to>
    </wire>
    <wire loc="189:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f7126c43480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126d4b020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126c44480"/></to>
    </wire>
    <wire loc="187:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126c44480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126d4b8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f7126c63c20"/></to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f7126c63c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f7126d3e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7126c71020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f712736a080"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f7126cc43b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7126c73cf0"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f7126cc36e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7128055a80"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7126c6c0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126c57620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f7126c62940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126c5a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f7126c4d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f7126c54840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f7126c60cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f7126c49060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126c45c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f7126c59620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f7126c58620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f7126c4f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f7126c51840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f7126c53060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126c632b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></to>
    </wire>
    <wire loc="138:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126c5e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126c48480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f7126c5d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126c5f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f7126c4a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126c59e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126c5ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f7126c622f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126c4b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f7126c4c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126c4a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f7126c42480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f7126c50060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f7126c4c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f7126c45480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f7126c52060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f7126c5be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126c58e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f7126c4f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f7126c53840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f7126c4d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f7126c56060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f7126c60020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f7126c5b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f7126c46c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f7126c46480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126c48c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f7126c43c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126c50840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f7126c4b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f7126c60670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f7126c5f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f7126c52840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f7126c5b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f7126c51060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f7126c49840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f7126c3f160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f7126c14920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f7126c10940"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7126c1a9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7126c10080"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126bf3e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7126bf8020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f7126bf2ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f7126bf4690"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f7126bf4690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f712721f280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f7126bf18f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f7126c16a20"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126bf0170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f7126bd5200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f7126bd1570"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126bd03f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7126bd5950"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126bd0a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7126b96d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7126ba16b0"/></to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7126b95b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7126ba1020"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126b942f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126b93170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7126b93b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f7126b46410"/></to>
    </wire>
    <wire loc="184:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f7126b67db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f7126b39800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f7126b35580"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f7126b35580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f712721f280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7126b211c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274c3020"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f7125e8bb60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f7125e7e640"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f7125e8a8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f71275272b0"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f7125e89590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f71269e6020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f7125e88c10"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f7125e88c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f712751d350"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7125e7d2e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7126a4b940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f7125e7c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7126a4b940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f71269fe4b0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f71269fd400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f712752bca0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f71269fc060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71269fb720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f71275272b0"/></to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f71269fa480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f71269fac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f71269dc020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f71275272b0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f71269dcc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SensorC" loc="8:SensorC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/ly/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/ly/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/ly/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/ly/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/ly/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/ly/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.TimerMilliC" loc="44(SensorAppC.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.TempSensor" loc="45(SensorAppC.TempSensor):/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.TempSensor.SensirionSht11ReaderP" loc="45(SensorAppC.TempSensor.SensirionSht11ReaderP):/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor" loc="40(SensorAppC.LightSensor):/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC" loc="47(SensorAppC.LightSensor.AdcReadClientC):/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC" loc="47(SensorAppC.LightSensor.AdcReadStreamClientC):/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/ly/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/ly/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/ly/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/ly/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/ly/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/ly/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/ly/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/ly/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/ly/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/ly/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SensorAppC.AMSenderC" loc="47(SensorAppC.AMSenderC):/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC" loc="47(SensorAppC.AMSenderC.SenderC):/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SensorAppC.AMSenderC.SenderC.AMQueueEntryP):/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SensorAppC.AMReceiverC" loc="43(SensorAppC.AMReceiverC):/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f7128404230" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f71284045d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f7128404980" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f7128404d00" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f71284030d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f7128403440" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f71284037d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f7128403b60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f7128401020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f71283c6960" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f71283c6d30" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f7128208a10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f7128208dc0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f71282071a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f7128207550" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f71282078c0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/ly/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f71280169d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f71280169d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f7127fd2160" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f7127fd2160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f7127fc1a60" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f7127fc1a60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f7127fbe290" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f7127fbe290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f7127fbe680" loc="57:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f7127fbe680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f7127fbee60" loc="58:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f7127fbee60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f7127fbc260" loc="59:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f7127fbca60" loc="60:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f7127fbca60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f7127fe2ad0" loc="52:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f7127fe2ad0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f7127f9b2d0" loc="53:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f7127f9b2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f7127f9b6c0" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f7127f9b6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f7127f9a020" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f7127f9a020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f7127f9a3f0" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7127f5c4f0" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7127f5c4f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7127f2bd80" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7127f2bd80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f7127f27110" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7127ed71f0" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7127ed71f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f7127cbd020" loc="89:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f7127cb00d0" loc="42:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/ly/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f7127c94020" loc="52:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f71277a6850" loc="83:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f712779e3d0" loc="42:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f71275cc670" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f71275cc9c0" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f71275cc9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/ly/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7126e95400" loc="52:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7126e95400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7126e95b90" loc="52:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7126e95b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/ly/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f7126a71660" loc="47:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f7126a68360" loc="47:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f7126a610d0" loc="43:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f7126a46c80" loc="45:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/ly/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f71269e1330" loc="43:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7f71284e76f0" loc="31:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f71284e76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71284e7a70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71284e7c00"/>
        <function-ref name="start" scoped="" ref="0x7f71284e7d90"/>
        <function-ref name="stop" scoped="" ref="0x7f71284f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f712858a560" loc="12:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f712858a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f712858a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f71285055f0" loc="28:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71285055f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128505970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7128505b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7128505c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7128505e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f712855f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f71284eb5a0" loc="30:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f71284eb5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71284eb920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71284ebab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71284ebc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f71284ebdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7128512020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7f7128563d00" loc="24:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7f7128563d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7128562940"/>
        <function-ref name="readDone" scoped="" ref="0x7f7128562dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f71284e3df0" loc="32:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f71284e3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71284ec310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f712856ad60" loc="19:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f712856ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f712856ee00"/>
        <function-ref name="enable" scoped="" ref="0x7f712856e980"/>
        <function-ref name="notify" scoped="" ref="0x7f712856c300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f712856d500" loc="18:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f712856d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f712856f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f71285708d0" loc="14:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f71285708d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7128570c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7128570de0"/>
        <function-ref name="led1On" scoped="" ref="0x7f712857c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f712857c1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f712857c340"/>
        <function-ref name="get" scoped="" ref="0x7f712857c4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f712857c660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f712857cca0"/>
        <function-ref name="set" scoped="" ref="0x7f712857c7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f712857c980"/>
        <function-ref name="led2On" scoped="" ref="0x7f712857cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7f7128565b70" loc="22:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7f7128565b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7128567790"/>
        <function-ref name="readDone" scoped="" ref="0x7f7128567c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f71284f64e0" loc="29:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f71284f64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71284f6860"/>
        <function-ref name="source" scoped="" ref="0x7f71284f69f0"/>
        <function-ref name="address" scoped="" ref="0x7f71284f6b80"/>
        <function-ref name="destination" scoped="" ref="0x7f71284f6d10"/>
        <function-ref name="setSource" scoped="" ref="0x7f712855e020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f712855e1b0"/>
        <function-ref name="type" scoped="" ref="0x7f712855e340"/>
        <function-ref name="setType" scoped="" ref="0x7f712855e4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f712855e660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f712855e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f712855e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x7f7128564420" loc="23:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7f7128564420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7128563090"/>
        <function-ref name="readDone" scoped="" ref="0x7f7128563510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128580770" loc="13:SensorC.nc">
      <component-ref qname="SensorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128580770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712857ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f712858b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f712857e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f712858bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f712857d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f712857d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712858b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f712858c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f712857e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f712858c860"/>
        <function-ref name="stop" scoped="" ref="0x7f712858cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f71284b36a0" loc="58:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f71284b36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284b3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f71284b61f0" loc="57:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f71284b61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f71284b6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71284b55b0" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71284b55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284b5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f71284ae830" loc="6:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f71284ae830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284aebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71284b19c0" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71284b19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284b1d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f71284ae150" loc="5:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f71284ae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f71284ad020" loc="7:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f71284ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71284b0c80" loc="2:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71284b0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284a70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f7128490020" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f7128490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f71284856c0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f71284856c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f712848b660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f7128485bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f7128485d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f712848b020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f7128485a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f712848b1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f712848b340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f712848b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f712848c020" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f712848c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f712848c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f71284753d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f71284753d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f7128474340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f71284758e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f7128475a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f7128475c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f7128475750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f7128475d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f7128474020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f71284741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f7128474680" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7128474680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7128474a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7128476cb0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7128476cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71284750a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f71284315a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f71284315a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128431920"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128431ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128431c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128431dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128430020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71284301b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128430340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71284304d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128430660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f712841f020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f712841f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712841f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f712841f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712841f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712841f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712841f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712841fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712841fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712841e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f712841e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f7128428700" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f7128428700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128428a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128428c10"/>
        <function-ref name="captured" scoped="" ref="0x7f7128428da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128427020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71284271b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128427340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f712840ca20" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f712840ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712840b020"/>
        <function-ref name="captured" scoped="" ref="0x7f712840b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712840b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712840b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712840b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f712842faa0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f712842faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712842fe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712842e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712842e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712842e340"/>
        <function-ref name="fired" scoped="" ref="0x7f712842e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f7128412020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f7128412020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71284123a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128412530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71284126c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128412850"/>
        <function-ref name="fired" scoped="" ref="0x7f71284129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f7128409a20" loc="71:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f7128409a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128409da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128408020"/>
        <function-ref name="captured" scoped="" ref="0x7f71284081b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128408340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71284084d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f712841a5a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f712841a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712841a920"/>
        <function-ref name="getControl" scoped="" ref="0x7f712841aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712841ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712841add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128419020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71284191b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128419340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71284194d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128419660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f7128432b10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f7128432b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128439020"/>
        <function-ref name="getControl" scoped="" ref="0x7f71284391b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128439340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71284394d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128439660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71284397f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128439980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128439b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128439ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f712840ea20" loc="66:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f712840ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712840d020"/>
        <function-ref name="captured" scoped="" ref="0x7f712840d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712840d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712840d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712840d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f71284143e0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f71284143e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128414760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71284148f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128414a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128414c10"/>
        <function-ref name="fired" scoped="" ref="0x7f7128414da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f712841e5a0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f712841e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712841ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7f712841ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712841ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712841d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712841d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712841d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712841d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712841d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f712841d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f7128427700" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f7128427700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128427a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128427c10"/>
        <function-ref name="captured" scoped="" ref="0x7f7128427da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128421020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71284211b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128421340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f712840ba20" loc="69:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f712840ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712840a020"/>
        <function-ref name="captured" scoped="" ref="0x7f712840a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712840a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712840a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712840a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f712841dbe0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f712841dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712841c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f712841c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712841c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712841c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712841c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712841c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712841c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712841cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f712841cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f712842e890" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f712842e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712842ec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712842eda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128429020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71284291b0"/>
        <function-ref name="fired" scoped="" ref="0x7f7128429340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f7128442060" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f7128442060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71284423e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7128442570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128442700"/>
        <function-ref name="get" scoped="" ref="0x7f7128442890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128442a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128442bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128442d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128441020"/>
        <function-ref name="overflow" scoped="" ref="0x7f71284411b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128441340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71284414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f7128412da0" loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f7128412da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128411180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128411310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71284114a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128411630"/>
        <function-ref name="fired" scoped="" ref="0x7f71284117c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f71284380c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f71284380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128438440"/>
        <function-ref name="getControl" scoped="" ref="0x7f71284385d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128438760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71284388f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128438a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128438c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128438da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128431020"/>
        <function-ref name="setControl" scoped="" ref="0x7f71284311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f7128419a50" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f7128419a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128419dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128417020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71284171b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128417340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71284174d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128417660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71284177f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128417980"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128417b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f71284226d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f71284226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128422a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128422be0"/>
        <function-ref name="captured" scoped="" ref="0x7f7128422d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128428020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71284281b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128428340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f712840da20" loc="67:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f712840da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712840c020"/>
        <function-ref name="captured" scoped="" ref="0x7f712840c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712840c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712840c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712840c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f712842acf0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f712842acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712842f0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712842f230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712842f3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712842f550"/>
        <function-ref name="fired" scoped="" ref="0x7f712842f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f71284131f0" loc="60:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f71284131f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128413570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128413700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128413890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128413a20"/>
        <function-ref name="fired" scoped="" ref="0x7f7128413bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f712840aa20" loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f712840aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128409020"/>
        <function-ref name="captured" scoped="" ref="0x7f71284091b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128409340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71284094d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128409660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f712841b0c0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f712841b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712841b440"/>
        <function-ref name="getControl" scoped="" ref="0x7f712841b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712841b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712841b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712841ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712841bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712841bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712841a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f712841a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f71284216c0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f71284216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128421a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7128421bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128421d60"/>
        <function-ref name="get" scoped="" ref="0x7f7128420020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71284201b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128420340"/>
        <function-ref name="getMode" scoped="" ref="0x7f71284204d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128420660"/>
        <function-ref name="overflow" scoped="" ref="0x7f71284207f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128420980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7128420b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f7128411b80" loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f7128411b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128410020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71284101b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128410340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71284104d0"/>
        <function-ref name="fired" scoped="" ref="0x7f7128410660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f712840fa20" loc="65:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f712840fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712840e020"/>
        <function-ref name="captured" scoped="" ref="0x7f712840e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712840e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712840e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712840e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f7128410a20" loc="64:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f7128410a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712840f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712840f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712840f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712840f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f712840f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f7128415570" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f7128415570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71284158f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128415a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128415c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128415da0"/>
        <function-ref name="fired" scoped="" ref="0x7f7128414020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f7128416020" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f7128416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71284163a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128416530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71284166c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128416850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71284169e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128416b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128416d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128415020"/>
        <function-ref name="setControl" scoped="" ref="0x7f71284151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f71283d02f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f71283d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283d0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f71283d1c20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f71283d1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f71283d0940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f71283d0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283d0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f71283d15b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283d15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283d1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f71283d3c80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f71283d3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71283d20a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71283d2230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71283d23c0"/>
        <function-ref name="get" scoped="" ref="0x7f71283d2550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71283d26e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71283d2870"/>
        <function-ref name="getMode" scoped="" ref="0x7f71283d2a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283d2b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f71283d2d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f71283d1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71283d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f71283c82f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f71283c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283c8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f71283c9c20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f71283c9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f71283c8940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f71283c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283c8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f71283c95b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283c95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283c9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f71283cbc80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f71283cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71283ca0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71283ca230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71283ca3c0"/>
        <function-ref name="get" scoped="" ref="0x7f71283ca550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71283ca6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71283ca870"/>
        <function-ref name="getMode" scoped="" ref="0x7f71283caa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283cab90"/>
        <function-ref name="overflow" scoped="" ref="0x7f71283cad20"/>
        <function-ref name="setMode" scoped="" ref="0x7f71283c9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71283c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f712837ca90" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f712837ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712837ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712837b020"/>
        <function-ref name="captured" scoped="" ref="0x7f712837b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712837b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712837b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712837b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f71283c49d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f71283c49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71283c4d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f712837d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712837d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712837d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712837d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712837d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712837d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712837d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f712837db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f7128379020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f7128379020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71283793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f712837dde0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f712837dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712837c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712837c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712837c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712837c630"/>
        <function-ref name="fired" scoped="" ref="0x7f712837c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f712837b930" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f712837b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712837bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712837be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712837a020"/>
        <function-ref name="get" scoped="" ref="0x7f712837a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712837a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712837a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712837a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712837a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f712837a980"/>
        <function-ref name="setMode" scoped="" ref="0x7f712837ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712837aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f7128374160" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f7128374160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71283744e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128374670"/>
        <function-ref name="captured" scoped="" ref="0x7f7128374800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128374990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128374b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128374cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f7128376020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f7128376020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71283763a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128376530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71283766c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128376850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71283769e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128376b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128376d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128375020"/>
        <function-ref name="setControl" scoped="" ref="0x7f71283751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f71283727a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128372b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7128375480" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f7128375480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128375800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128375990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128375b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128375cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f7128375e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128373020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128373020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71283733a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7128373530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71283736c0"/>
        <function-ref name="get" scoped="" ref="0x7f7128373850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71283739e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128373b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128373d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128372020"/>
        <function-ref name="overflow" scoped="" ref="0x7f71283721b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128372340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71283724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f712836c7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f712836c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712836cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712836ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f712836ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712836b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712836b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712836b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f712836e6d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f712836e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712836ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f712836ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712836ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712836d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712836d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712836d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712836d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712836d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f712836d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f712836ac50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f712836ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128369020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f712836dac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f712836dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712836de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712836c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712836c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712836c340"/>
        <function-ref name="fired" scoped="" ref="0x7f712836c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f712836b610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f712836b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712836b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712836bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712836bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f712836be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712836a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712836a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712836a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712836a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f712836a660"/>
        <function-ref name="setMode" scoped="" ref="0x7f712836a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712836a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f7128365cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f7128365cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71283640a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128364230"/>
        <function-ref name="captured" scoped="" ref="0x7f71283643c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128364550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283646e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128364870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f7128367b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f7128367b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128366020"/>
        <function-ref name="getControl" scoped="" ref="0x7f71283661b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128366340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71283664d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128366660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71283667f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128366980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128366b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128366ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f71283622f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128362670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7128365020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f7128365020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71283653a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128365530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71283656c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128365850"/>
        <function-ref name="fired" scoped="" ref="0x7f71283659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128364b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128364b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128363020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71283631b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128363340"/>
        <function-ref name="get" scoped="" ref="0x7f71283634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128363660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71283637f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128363980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128363b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f7128363ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128363e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7128362020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f712835c2f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f712835c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712835c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712835c800"/>
        <function-ref name="captured" scoped="" ref="0x7f712835c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712835cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712835ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712835ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f712835e220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f712835e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712835e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f712835e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712835e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712835ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712835ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712835ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712835d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712835d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f712835d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f712835a7a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f712835a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712835ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f712835d610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f712835d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712835d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712835db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712835dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712835de40"/>
        <function-ref name="fired" scoped="" ref="0x7f712835c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f712835b160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f712835b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712835b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712835b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712835b800"/>
        <function-ref name="get" scoped="" ref="0x7f712835b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712835bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712835bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712835be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712835a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f712835a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f712835a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712835a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f71283557a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f71283557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128355b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128355cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f7128355e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128354020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283541b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128354340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f71283576d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f71283576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128357a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128357be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128357d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128356020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71283561b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128356340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71283564d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128356660"/>
        <function-ref name="setControl" scoped="" ref="0x7f71283567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f7128353c50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f7128353c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128352020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7128356ac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f7128356ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128356e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128355020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71283551b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128355340"/>
        <function-ref name="fired" scoped="" ref="0x7f71283554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128354610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128354610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128354990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7128354b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128354cb0"/>
        <function-ref name="get" scoped="" ref="0x7f7128354e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128353020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71283531b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128353340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283534d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7128353660"/>
        <function-ref name="setMode" scoped="" ref="0x7f71283537f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7128353980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f712834dcb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f712834dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712834c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712834c230"/>
        <function-ref name="captured" scoped="" ref="0x7f712834c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712834c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712834c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712834c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f7128350b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f7128350b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712834e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f712834e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712834e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712834e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712834e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712834e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712834e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712834eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f712834eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f712834a2f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f712834a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712834a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f712834d020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f712834d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712834d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712834d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712834d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712834d850"/>
        <function-ref name="fired" scoped="" ref="0x7f712834d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f712834cb40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f712834cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712834b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712834b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712834b340"/>
        <function-ref name="get" scoped="" ref="0x7f712834b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712834b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712834b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712834b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712834bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f712834bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f712834be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712834a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f71283452f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f71283452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128345670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128345800"/>
        <function-ref name="captured" scoped="" ref="0x7f7128345990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128345b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128345cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128345e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f7128347220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f7128347220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71283475a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128347730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71283478c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128347a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128347be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128347d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128346020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71283461b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128346340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f71283437a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128343b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7128346610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f7128346610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128346990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128346b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128346cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128346e40"/>
        <function-ref name="fired" scoped="" ref="0x7f7128345020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128344160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128344160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71283444e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7128344670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128344800"/>
        <function-ref name="get" scoped="" ref="0x7f7128344990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128344b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128344cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128344e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128343020"/>
        <function-ref name="overflow" scoped="" ref="0x7f71283431b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128343340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71283434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f712833d7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f712833d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712833db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f712833dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f712833de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712833c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712833c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f712833c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f71283406d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f71283406d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128340a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128340be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128340d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712833e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712833e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712833e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712833e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712833e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f712833e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f712833bc50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f712833bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712833a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f712833eac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f712833eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712833ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712833d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712833d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712833d340"/>
        <function-ref name="fired" scoped="" ref="0x7f712833d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f712833c610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f712833c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712833c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712833cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712833ccb0"/>
        <function-ref name="get" scoped="" ref="0x7f712833ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712833b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712833b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712833b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712833b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f712833b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f712833b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712833b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f7128336cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f7128336cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71283350a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f7128335230"/>
        <function-ref name="captured" scoped="" ref="0x7f71283353c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7128335550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71283356e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f7128335870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f7128338b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f7128338b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128337020"/>
        <function-ref name="getControl" scoped="" ref="0x7f71283371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128337340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71283374d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128337660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71283377f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128337980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7128337b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128337ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f71283332f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f71283332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128333670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7128336020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f7128336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71283363a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7128336530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71283366c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7128336850"/>
        <function-ref name="fired" scoped="" ref="0x7f71283369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7128335b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128335b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128334020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71283341b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128334340"/>
        <function-ref name="get" scoped="" ref="0x7f71283344d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128334660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71283347f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128334980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7128334b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f7128334ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7128334e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7128333020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f712832c240" loc="7:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f712832c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712832c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f7128331aa0" loc="4:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f7128331aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7128331e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f712832e260" loc="5:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f712832e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712832e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f712832e9f0" loc="6:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f712832e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712832ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f71286124c0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f71286124c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7128612840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f71289c73b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f71289c73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f71289c7730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f71289c78c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f71289c7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f71287efbe0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f71287efbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f712892b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f712848db50" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f712848db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f71282f5b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f71282f51b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f71282f5340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f71282f54d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f71282f5020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f71282f5660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f71282f57f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f71282f5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f71282e9dc0" loc="60:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f71282e9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71282e8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f71282ea590" loc="57:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f71282ea590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f71282ea910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f71282e96c0" loc="59:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f71282e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71282e9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f71282eac00" loc="58:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f71282eac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71282e9020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f71282e91b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f71282e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f7128a9f4f0" loc="48:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f7128a9f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7128a9f870"/>
        <function-ref name="runTask" scoped="" ref="0x7f7128a9fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f7128a303a0" loc="47:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f7128a303a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7128a30720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7128a308b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7128a30a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f71285d9040" loc="56:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f71285d9040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71285d93c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f71285d9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f71285d5490" loc="57:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f71285d5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f71285d5810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f71285d59a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f71285d5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f71285db140" loc="55:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f71285db140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71285db4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f71285db650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f71285db7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f71284915a0" loc="46:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f71284915a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7128491920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7128491ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f7128491c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7128491dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f71282dd020"/>
        <function-ref name="get" scoped="" ref="0x7f71282dd1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f71282dd340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f71282dd980"/>
        <function-ref name="set" scoped="" ref="0x7f71282dd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f71282dd660"/>
        <function-ref name="led2On" scoped="" ref="0x7f71282dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f71282d17b0" loc="50:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f71282d17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282d1b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282d1cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282d1e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282d7020"/>
        <function-ref name="get" scoped="" ref="0x7f71282d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282d7340"/>
        <function-ref name="set" scoped="" ref="0x7f71282d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f71282d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71282dc8e0" loc="46:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71282dc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71282dcc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f71282d7980" loc="51:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f71282d7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282d7d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282d6340"/>
        <function-ref name="get" scoped="" ref="0x7f71282d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282d6660"/>
        <function-ref name="set" scoped="" ref="0x7f71282d67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f71282d6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f71282d9020" loc="47:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f71282d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f71282d93a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f71282d9530"/>
        <function-ref name="led1On" scoped="" ref="0x7f71282d96c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f71282d9850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f71282d99e0"/>
        <function-ref name="get" scoped="" ref="0x7f71282d9b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f71282d9d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f71282d84d0"/>
        <function-ref name="set" scoped="" ref="0x7f71282d8020"/>
        <function-ref name="led0On" scoped="" ref="0x7f71282d81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f71282d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f71282d6ca0" loc="52:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f71282d6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282d0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282d03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282d0550"/>
        <function-ref name="get" scoped="" ref="0x7f71282d06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282d0870"/>
        <function-ref name="set" scoped="" ref="0x7f71282d0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f71282d0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f71282b5360" loc="41:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f71282b5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282b56e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282b5870"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282b5a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282b5b90"/>
        <function-ref name="get" scoped="" ref="0x7f71282b5d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282b4020"/>
        <function-ref name="set" scoped="" ref="0x7f71282b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f71282b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f71282b46a0" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f71282b46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282b4a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282b4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282b4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282b3020"/>
        <function-ref name="get" scoped="" ref="0x7f71282b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282b3340"/>
        <function-ref name="set" scoped="" ref="0x7f71282b34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f71282b3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f71282b1c40" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71282b1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71282b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f71282b39c0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f71282b39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282b3d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282b1340"/>
        <function-ref name="get" scoped="" ref="0x7f71282b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282b1660"/>
        <function-ref name="set" scoped="" ref="0x7f71282b17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f71282b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f712829a020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f712829a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712829a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712829a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712829a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712829a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712829a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712829ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712829ad00"/>
        <function-ref name="get" scoped="" ref="0x7f7128299020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128299340"/>
        <function-ref name="set" scoped="" ref="0x7f71282994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128299660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128299a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128299c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f7128286020" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f7128286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128286530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282866c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128286850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282869e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128286b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128286d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128285020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128285340"/>
        <function-ref name="set" scoped="" ref="0x7f71282854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128285660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128285a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128285c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f712823c560" loc="145:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f712823c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712823c8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712823ca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712823cc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f712823cd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712823b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712823b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712823b340"/>
        <function-ref name="get" scoped="" ref="0x7f712823b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712823b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712823b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712823b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712823bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712823bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712823a020"/>
        <function-ref name="clr" scoped="" ref="0x7f712823a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f7128217570" loc="165:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f7128217570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282178f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128217a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128217c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128217da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128216020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128216340"/>
        <function-ref name="get" scoped="" ref="0x7f71282164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128216660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282167f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128216980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128216b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128216ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128215020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f712823a580" loc="146:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f712823a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712823a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712823aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712823ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712823adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128239020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128239340"/>
        <function-ref name="get" scoped="" ref="0x7f71282394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128239660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282397f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128239980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128239b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128239ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128238020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f7128282020" loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f7128282020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128282530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282826c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128282850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128282b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128282d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128281020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128281340"/>
        <function-ref name="set" scoped="" ref="0x7f71282814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128281660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128281a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128281c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f712826d200" loc="84:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f712826d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712826d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712826d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712826d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712826da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712826dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712826dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712826c020"/>
        <function-ref name="get" scoped="" ref="0x7f712826c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712826c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712826c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712826c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712826c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712826c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712826cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f712826cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f7128259200" loc="97:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f7128259200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128259580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128259710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282598a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128259a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128259bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128259d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128258020"/>
        <function-ref name="get" scoped="" ref="0x7f71282581b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128258340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282584d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128258660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128258980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128258c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128258da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f7128248200" loc="108:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f7128248200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128248580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128248710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282488a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128248a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128248bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128248d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128247020"/>
        <function-ref name="get" scoped="" ref="0x7f71282471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128247340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282474d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128247660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282477f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128247980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128247c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128247da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f7128234580" loc="149:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f7128234580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128234900"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128234a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128234c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128234db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128233020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128233340"/>
        <function-ref name="get" scoped="" ref="0x7f71282334d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128233660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282337f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128233980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128233b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128233ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128232020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f7128224570" loc="159:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f7128224570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282248f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128224a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128224c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128224da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128223020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128223340"/>
        <function-ref name="get" scoped="" ref="0x7f71282234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128223660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282237f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128223980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128223b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128223ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128222020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f712820f580" loc="171:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f712820f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712820f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712820fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712820fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712820fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712820e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712820e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712820e340"/>
        <function-ref name="get" scoped="" ref="0x7f712820e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712820e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712820e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712820e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712820eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712820eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712820d020"/>
        <function-ref name="clr" scoped="" ref="0x7f712820d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f7128294020" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f7128294020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128294530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282946c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128294850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282949e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128294b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128294d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128293020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128293340"/>
        <function-ref name="set" scoped="" ref="0x7f71282934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128293660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128293a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128293c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f7128232580" loc="150:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f7128232580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128232900"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128232a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128232c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128232db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128231020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128231340"/>
        <function-ref name="get" scoped="" ref="0x7f71282314d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128231660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282317f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128231980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128231b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128231ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128230020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f7128290020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f7128290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128290530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282906c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128290850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128290b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128290d00"/>
        <function-ref name="get" scoped="" ref="0x7f712828f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712828f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712828f340"/>
        <function-ref name="set" scoped="" ref="0x7f712828f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712828f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712828f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712828fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f712828fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f712827c020" loc="74:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f712827c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712827c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712827c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712827c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712827c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712827c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712827cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712827cd00"/>
        <function-ref name="get" scoped="" ref="0x7f712827b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712827b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712827b340"/>
        <function-ref name="set" scoped="" ref="0x7f712827b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712827b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712827b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712827ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f712827bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f7128267200" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f7128267200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128267580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128267710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282678a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128267a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128267bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128267d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128266020"/>
        <function-ref name="get" scoped="" ref="0x7f71282661b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128266340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282664d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128266660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282667f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128266980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128266c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128266da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f7128253200" loc="100:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f7128253200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128253580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128253710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282538a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128253a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128253bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128253d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128252020"/>
        <function-ref name="get" scoped="" ref="0x7f71282521b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128252340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282524d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128252660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282527f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128252980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128252c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128252da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f7128242200" loc="111:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f7128242200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128242580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128242710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282428a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128242a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128242bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128242d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128241020"/>
        <function-ref name="get" scoped="" ref="0x7f71282411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128241340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282414d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128241660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282417f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128241980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128241c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128241da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f712829e020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f712829e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712829e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712829e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712829e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712829e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712829e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712829eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712829ed00"/>
        <function-ref name="get" scoped="" ref="0x7f712829d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712829d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712829d340"/>
        <function-ref name="set" scoped="" ref="0x7f712829d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712829d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712829d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712829da80"/>
        <function-ref name="clr" scoped="" ref="0x7f712829dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f712828a020" loc="64:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f712828a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712828a4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712828a630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712828a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712828a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712828aae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712828ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712828ae00"/>
        <function-ref name="get" scoped="" ref="0x7f7128289020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128289340"/>
        <function-ref name="set" scoped="" ref="0x7f71282894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128289660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128289a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128289c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f7128275020" loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f7128275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128275530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282756c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128275850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128275b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128275d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128274020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128274340"/>
        <function-ref name="set" scoped="" ref="0x7f71282744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128274660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128274a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128274c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f712823e580" loc="144:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f712823e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712823e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712823ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712823ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712823edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712823d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712823d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712823d340"/>
        <function-ref name="get" scoped="" ref="0x7f712823d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712823d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712823d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712823d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712823db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712823dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712823c020"/>
        <function-ref name="clr" scoped="" ref="0x7f712823c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f712821e570" loc="162:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f712821e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712821e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712821ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712821ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f712821eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712821d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712821d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712821d340"/>
        <function-ref name="get" scoped="" ref="0x7f712821d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712821d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712821d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712821d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712821db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712821dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712821c020"/>
        <function-ref name="clr" scoped="" ref="0x7f712821c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f7128211570" loc="169:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f7128211570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282118f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128211a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128211c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128211da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128210020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128210340"/>
        <function-ref name="get" scoped="" ref="0x7f71282104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128210660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282107f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128210980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128210b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128210ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712820f020"/>
        <function-ref name="clr" scoped="" ref="0x7f712820f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f712822a580" loc="155:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f712822a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712822a900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712822aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712822ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712822adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128229020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128229340"/>
        <function-ref name="get" scoped="" ref="0x7f71282294d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128229660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282297f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128229980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128229b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128229ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128228020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f7128271020" loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f7128271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282715a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128271730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282718c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128271a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128271be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128271d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128270020"/>
        <function-ref name="get" scoped="" ref="0x7f71282701b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128270340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282704d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128270660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282707f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128270980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128270c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128270da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f712825d200" loc="95:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f712825d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712825d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712825d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712825d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712825da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712825dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712825dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712825c020"/>
        <function-ref name="get" scoped="" ref="0x7f712825c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712825c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712825c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712825c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712825c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712825c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712825cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f712825cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f712824d200" loc="106:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f712824d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712824d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712824d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712824d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712824da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712824dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712824dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712824c020"/>
        <function-ref name="get" scoped="" ref="0x7f712824c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712824c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712824c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712824c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712824c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712824c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712824cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f712824cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f712821c570" loc="163:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f712821c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712821c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712821ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712821cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f712821cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712821b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712821b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712821b340"/>
        <function-ref name="get" scoped="" ref="0x7f712821b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712821b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712821b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712821b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712821bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712821bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712821a020"/>
        <function-ref name="clr" scoped="" ref="0x7f712821a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f7128230570" loc="152:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f7128230570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282308f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128230a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128230c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128230da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712822f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712822f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712822f340"/>
        <function-ref name="get" scoped="" ref="0x7f712822f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712822f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712822f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712822f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712822fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712822fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712822e020"/>
        <function-ref name="clr" scoped="" ref="0x7f712822e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f7128298020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f7128298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128298530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282986c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128298850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282989e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128298b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128298d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128297020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128297340"/>
        <function-ref name="set" scoped="" ref="0x7f71282974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128297660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128297a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128297c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f7128284020" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f7128284020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128284530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282846c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128284850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282849e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128284b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128284d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128283020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128283340"/>
        <function-ref name="set" scoped="" ref="0x7f71282834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128283660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128283a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128283c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f7128251200" loc="104:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f7128251200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128251580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128251710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282518a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128251a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128251bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128251d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128250020"/>
        <function-ref name="get" scoped="" ref="0x7f71282501b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128250340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282504d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128250660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282507f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128250980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128250c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128250da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f7128280020" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f7128280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128280530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282806c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128280850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282809e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128280b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128280d00"/>
        <function-ref name="get" scoped="" ref="0x7f712827f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712827f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712827f340"/>
        <function-ref name="set" scoped="" ref="0x7f712827f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712827f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712827f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712827fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f712827fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f712826b200" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f712826b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712826b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712826b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712826b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712826ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712826bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712826bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712826a020"/>
        <function-ref name="get" scoped="" ref="0x7f712826a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712826a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712826a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712826a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712826a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712826a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712826ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f712826ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f7128257200" loc="98:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f7128257200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128257580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128257710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282578a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128257a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128257bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128257d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128256020"/>
        <function-ref name="get" scoped="" ref="0x7f71282561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128256340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282564d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128256660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282567f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128256980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128256c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128256da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f7128246200" loc="109:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f7128246200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128246580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128246710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282468a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128246a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128246bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128246d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128245020"/>
        <function-ref name="get" scoped="" ref="0x7f71282451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128245340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282454d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128245660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128245980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128245c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128245da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f712822c580" loc="154:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f712822c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712822c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712822ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712822cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712822cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712822b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712822b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712822b340"/>
        <function-ref name="get" scoped="" ref="0x7f712822b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712822b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712822b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712822b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712822bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712822bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712822a020"/>
        <function-ref name="clr" scoped="" ref="0x7f712822a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f71282ab020" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f71282ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282ab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282ab530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282ab9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282abd00"/>
        <function-ref name="get" scoped="" ref="0x7f71282aa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282aa1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282aa340"/>
        <function-ref name="set" scoped="" ref="0x7f71282aa4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282aa660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282aa7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71282aaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f71282aac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f712828e020" loc="62:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f712828e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712828e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712828e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712828e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712828e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712828e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712828eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712828ed00"/>
        <function-ref name="get" scoped="" ref="0x7f712828d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712828d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712828d340"/>
        <function-ref name="set" scoped="" ref="0x7f712828d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712828d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712828d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712828da80"/>
        <function-ref name="clr" scoped="" ref="0x7f712828dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f712827a020" loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f712827a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712827a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712827a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712827a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712827a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712827a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712827ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712827ad00"/>
        <function-ref name="get" scoped="" ref="0x7f7128279020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128279340"/>
        <function-ref name="set" scoped="" ref="0x7f71282794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128279660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128279a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128279c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f7128265200" loc="88:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f7128265200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128265580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128265710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282658a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128265a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128265bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128265d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128264020"/>
        <function-ref name="get" scoped="" ref="0x7f71282641b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128264340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282644d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128264660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282647f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128264980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128264c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128264da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f7128228580" loc="156:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f7128228580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128228900"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128228a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128228c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128228db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128227020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128227340"/>
        <function-ref name="get" scoped="" ref="0x7f71282274d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128227660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282277f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128227980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128227b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128227ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128226020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f7128222570" loc="160:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f7128222570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282228f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128222a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128222c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128222da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128221020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128221340"/>
        <function-ref name="get" scoped="" ref="0x7f71282214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128221660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282217f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128221980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128221b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128221ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128220020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f7128215570" loc="166:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f7128215570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282158f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128215a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128215c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128215da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128214020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128214340"/>
        <function-ref name="get" scoped="" ref="0x7f71282144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128214660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282147f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128214980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128214b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128214ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128213020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f7128261200" loc="93:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f7128261200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128261580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128261710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282618a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128261a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128261bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128261d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128260020"/>
        <function-ref name="get" scoped="" ref="0x7f71282601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128260340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282604d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128260660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282607f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128260980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128260c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128260da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f7128226580" loc="157:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f7128226580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128226900"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128226a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128226c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128226db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128225020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128225340"/>
        <function-ref name="get" scoped="" ref="0x7f71282254d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128225660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282257f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128225980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128225b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128225ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128224020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f712829c020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f712829c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712829c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712829c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712829c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712829c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712829c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712829cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712829cd00"/>
        <function-ref name="get" scoped="" ref="0x7f712829b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712829b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712829b340"/>
        <function-ref name="set" scoped="" ref="0x7f712829b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712829b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712829b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712829ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f712829bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f7128288020" loc="65:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f7128288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128288530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282886c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128288850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282889e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128288b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128288d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128287020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128287340"/>
        <function-ref name="set" scoped="" ref="0x7f71282874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128287660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128287a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128287c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f7128273020" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f7128273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128273530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282736c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128273850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128273b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128273d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128272020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128272340"/>
        <function-ref name="set" scoped="" ref="0x7f71282724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128272660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128272a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128272c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f712822e580" loc="153:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f712822e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712822e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712822ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712822ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712822edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712822d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712822d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712822d340"/>
        <function-ref name="get" scoped="" ref="0x7f712822d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712822d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712822d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712822d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712822db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712822dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712822c020"/>
        <function-ref name="clr" scoped="" ref="0x7f712822c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f712821a570" loc="164:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f712821a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712821a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712821aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712821ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f712821ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128218020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128218340"/>
        <function-ref name="get" scoped="" ref="0x7f71282184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128218660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282187f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128218980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128218b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128218ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128217020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f712826f200" loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f712826f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712826f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712826f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712826f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712826fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712826fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712826fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712826e020"/>
        <function-ref name="get" scoped="" ref="0x7f712826e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712826e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712826e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712826e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712826e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712826e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712826ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f712826eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f712825b200" loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f712825b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712825b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712825b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712825b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712825ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712825bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712825bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712825a020"/>
        <function-ref name="get" scoped="" ref="0x7f712825a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712825a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712825a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712825a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712825a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712825a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712825ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f712825ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f712824b200" loc="107:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f712824b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712824b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712824b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712824b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712824ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712824bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712824bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712824a020"/>
        <function-ref name="get" scoped="" ref="0x7f712824a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712824a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712824a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712824a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712824a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712824a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712824ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f712824ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f7128296020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f7128296020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128296530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282966c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128296850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282969e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128296b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128296d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128295020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128295340"/>
        <function-ref name="set" scoped="" ref="0x7f71282954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128295660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128295a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128295c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f712824f200" loc="105:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f712824f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712824f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712824f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712824f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712824fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712824fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712824fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712824e020"/>
        <function-ref name="get" scoped="" ref="0x7f712824e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712824e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712824e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712824e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712824e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712824e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712824ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f712824eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f7128292020" loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f7128292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128292530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282926c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128292850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282929e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128292b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128292d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128291020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128291340"/>
        <function-ref name="set" scoped="" ref="0x7f71282914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128291660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128291a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128291c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f712827e020" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f712827e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712827e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712827e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712827e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712827e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712827e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712827eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712827ed00"/>
        <function-ref name="get" scoped="" ref="0x7f712827d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712827d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712827d340"/>
        <function-ref name="set" scoped="" ref="0x7f712827d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712827d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712827d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712827da80"/>
        <function-ref name="clr" scoped="" ref="0x7f712827dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f7128269200" loc="86:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f7128269200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128269580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128269710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282698a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128269a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128269bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128269d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128268020"/>
        <function-ref name="get" scoped="" ref="0x7f71282681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128268340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282684d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128268660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128268980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128268c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128268da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f7128255200" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f7128255200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128255580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128255710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282558a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128255a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128255bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128255d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128254020"/>
        <function-ref name="get" scoped="" ref="0x7f71282541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128254340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282544d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128254660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282547f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128254980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128254c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128254da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f7128244200" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f7128244200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128244580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128244710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282448a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128244a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128244bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128244d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128243020"/>
        <function-ref name="get" scoped="" ref="0x7f71282431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128243340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282434d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128243660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282437f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128243980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128243c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128243da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f71282a0020" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f71282a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282a03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71282a0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282a06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71282a0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282a09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282a0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71282a0d00"/>
        <function-ref name="get" scoped="" ref="0x7f712829f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712829f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712829f340"/>
        <function-ref name="set" scoped="" ref="0x7f712829f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712829f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712829f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712829fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f712829fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f712828c020" loc="63:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f712828c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712828c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712828c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712828c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712828c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712828c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712828cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712828cd00"/>
        <function-ref name="get" scoped="" ref="0x7f712828b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712828b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712828b340"/>
        <function-ref name="set" scoped="" ref="0x7f712828b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712828b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712828b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712828ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f712828bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f7128277020" loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f7128277020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128277530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282776c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128277850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71282779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128277b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128277d00"/>
        <function-ref name="get" scoped="" ref="0x7f7128276020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71282761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128276340"/>
        <function-ref name="set" scoped="" ref="0x7f71282764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128276660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71282767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128276a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128276c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f7128263200" loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f7128263200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128263580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128263710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71282638a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128263a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128263bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128263d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128262020"/>
        <function-ref name="get" scoped="" ref="0x7f71282621b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128262340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282624d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128262660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71282627f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128262980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128262c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128262da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f7128236560" loc="148:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f7128236560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282368e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128236a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128236c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128236d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128235020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128235340"/>
        <function-ref name="get" scoped="" ref="0x7f71282354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128235660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282357f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128235980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128235b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128235ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128234020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f7128220570" loc="161:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f7128220570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282208f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128220a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128220c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128220da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712821f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712821f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712821f340"/>
        <function-ref name="get" scoped="" ref="0x7f712821f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712821f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712821f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712821f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712821fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712821fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712821e020"/>
        <function-ref name="clr" scoped="" ref="0x7f712821e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f7128238580" loc="147:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f7128238580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128238900"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128238a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128238c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128238db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128237020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128237340"/>
        <function-ref name="get" scoped="" ref="0x7f71282374d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128237660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282377f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128237980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128237b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128237ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128236020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f712825f200" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f712825f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712825f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712825f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712825f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712825fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712825fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712825fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712825e020"/>
        <function-ref name="get" scoped="" ref="0x7f712825e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712825e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712825e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712825e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712825e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712825e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712825ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f712825eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f7128213570" loc="168:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f7128213570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71282138f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128213a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128213c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128213da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128212020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71282121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128212340"/>
        <function-ref name="get" scoped="" ref="0x7f71282124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128212660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71282127f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128212980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128212b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128212ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128211020"/>
        <function-ref name="clr" scoped="" ref="0x7f71282111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f712820d580" loc="172:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f712820d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712820d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f712820da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712820dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712820ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712820c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712820c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712820c340"/>
        <function-ref name="get" scoped="" ref="0x7f712820c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712820c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712820c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712820c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712820cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712820cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712820b020"/>
        <function-ref name="clr" scoped="" ref="0x7f712820b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f71282401f0" loc="143:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f71282401f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128240970"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128240b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128240c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128240e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712823f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712823f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712823f340"/>
        <function-ref name="get" scoped="" ref="0x7f712823f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712823f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712823f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712823f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712823fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712823fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712823e020"/>
        <function-ref name="clr" scoped="" ref="0x7f712823e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281e26d0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281e26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281e2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281e2be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281e2d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281e14d0"/>
        <function-ref name="get" scoped="" ref="0x7f71281e1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281e17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281e1980"/>
        <function-ref name="set" scoped="" ref="0x7f71281e1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281e1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281e1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281e0120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281dd100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281dd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281dd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281dd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281ddac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281ddc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281ddde0"/>
        <function-ref name="get" scoped="" ref="0x7f71281dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281dc340"/>
        <function-ref name="set" scoped="" ref="0x7f71281dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281dca80"/>
        <function-ref name="clr" scoped="" ref="0x7f71281dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281d9d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281d8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281d8a40"/>
        <function-ref name="get" scoped="" ref="0x7f71281d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281d7020"/>
        <function-ref name="set" scoped="" ref="0x7f71281d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281d7760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281d4740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281d34d0"/>
        <function-ref name="get" scoped="" ref="0x7f71281d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281d3980"/>
        <function-ref name="set" scoped="" ref="0x7f71281d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281d2120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281cf100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281cf480"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281cf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281cf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281cfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281cfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281cfde0"/>
        <function-ref name="get" scoped="" ref="0x7f71281cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281cd340"/>
        <function-ref name="set" scoped="" ref="0x7f71281cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281cda80"/>
        <function-ref name="clr" scoped="" ref="0x7f71281cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281cad10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281cad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281c90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281c9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281c9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281c9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281c9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281c98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281c9a40"/>
        <function-ref name="get" scoped="" ref="0x7f71281c9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281c9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281c8020"/>
        <function-ref name="set" scoped="" ref="0x7f71281c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281c8760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281c5740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281c44d0"/>
        <function-ref name="get" scoped="" ref="0x7f71281c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281c4980"/>
        <function-ref name="set" scoped="" ref="0x7f71281c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281c3120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281c0100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281c0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281c0de0"/>
        <function-ref name="get" scoped="" ref="0x7f71281bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281bf340"/>
        <function-ref name="set" scoped="" ref="0x7f71281bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f71281bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281bcd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281bb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281bba40"/>
        <function-ref name="get" scoped="" ref="0x7f71281bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281ba020"/>
        <function-ref name="set" scoped="" ref="0x7f71281ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281ba760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281b7740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281b64d0"/>
        <function-ref name="get" scoped="" ref="0x7f71281b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281b6980"/>
        <function-ref name="set" scoped="" ref="0x7f71281b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281b5120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281b2100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281b2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281b2de0"/>
        <function-ref name="get" scoped="" ref="0x7f71281b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281b1340"/>
        <function-ref name="set" scoped="" ref="0x7f71281b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f71281b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281aed10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281ad400"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281ada40"/>
        <function-ref name="get" scoped="" ref="0x7f71281adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281add60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281ac020"/>
        <function-ref name="set" scoped="" ref="0x7f71281ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281ac760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281a9860" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281a9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281a9be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281a9d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281a7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281a71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281a7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281a74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281a7660"/>
        <function-ref name="get" scoped="" ref="0x7f71281a77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281a7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281a7b10"/>
        <function-ref name="set" scoped="" ref="0x7f71281a7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281a7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281a6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281a62b0"/>
        <function-ref name="clr" scoped="" ref="0x7f71281a6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f71281a3270" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f71281a3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281a35f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71281a3780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281a3910"/>
        <function-ref name="toggle" scoped="" ref="0x7f71281a3aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281a3c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281a3dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281a2020"/>
        <function-ref name="get" scoped="" ref="0x7f71281a21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71281a24d0"/>
        <function-ref name="set" scoped="" ref="0x7f71281a2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71281a27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281a2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71281a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71281a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712819fd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712819fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712819e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712819e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712819e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f712819e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712819e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712819e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712819ea40"/>
        <function-ref name="get" scoped="" ref="0x7f712819ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712819ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712819d020"/>
        <function-ref name="set" scoped="" ref="0x7f712819d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712819d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712819d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712819d760"/>
        <function-ref name="clr" scoped="" ref="0x7f712819d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712819a740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712819a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712819aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712819ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712819ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128199020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128199340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281994d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128199660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128199980"/>
        <function-ref name="set" scoped="" ref="0x7f7128199b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128199ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128199e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128198120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128195100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128195100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128195480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128195610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281957a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128195930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128195ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128195c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128195de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128194020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128194340"/>
        <function-ref name="set" scoped="" ref="0x7f71281944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128194660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128194a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128194c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128191d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128191d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128190270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128190400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128190590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128190720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128190a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128190bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128190d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712818f020"/>
        <function-ref name="set" scoped="" ref="0x7f712818f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712818f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712818f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712818f760"/>
        <function-ref name="clr" scoped="" ref="0x7f712818f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712818c740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712818c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712818cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712818cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712818cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712818b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712818b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712818b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712818b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f712818b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712818b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712818b980"/>
        <function-ref name="set" scoped="" ref="0x7f712818bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712818bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712818be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712818a120"/>
        <function-ref name="clr" scoped="" ref="0x7f712818a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128187100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128187100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128187480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128187610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281877a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128187930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128187ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128187c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128187de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128186020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128186340"/>
        <function-ref name="set" scoped="" ref="0x7f71281864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128186660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128186a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128186c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128182d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128182d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281810e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128181270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128181400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128181590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128181720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281818b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128181a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128181bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128181d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128180020"/>
        <function-ref name="set" scoped="" ref="0x7f71281801b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128180340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281804d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128180760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712817d740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712817d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712817dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712817dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712817dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712817c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712817c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712817c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712817c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f712817c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712817c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712817c980"/>
        <function-ref name="set" scoped="" ref="0x7f712817cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712817cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712817ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712817b120"/>
        <function-ref name="clr" scoped="" ref="0x7f712817b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128178100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128178100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128178480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128178610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281787a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128178930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128178ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128178c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128178de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128177020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128177340"/>
        <function-ref name="set" scoped="" ref="0x7f71281774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128177660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128177a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128177c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128174d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128174d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281730e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128173270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128173400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128173590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128173720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281738b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128173a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128173bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128173d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128172020"/>
        <function-ref name="set" scoped="" ref="0x7f71281721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128172340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128172760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712816fa60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712816fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712816fde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712816e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712816e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712816e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712816e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712816e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712816e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f712816e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712816eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712816eca0"/>
        <function-ref name="set" scoped="" ref="0x7f712816ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712816d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712816d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712816d440"/>
        <function-ref name="clr" scoped="" ref="0x7f712816d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712816a460" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712816a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712816a7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712816a970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712816ab00"/>
        <function-ref name="toggle" scoped="" ref="0x7f712816ac90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712816ae20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128169020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281691b0"/>
        <function-ref name="get" scoped="" ref="0x7f7128169340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281694d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128169660"/>
        <function-ref name="set" scoped="" ref="0x7f71281697f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128169980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128169b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128169da0"/>
        <function-ref name="clr" scoped="" ref="0x7f7128168020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128166e00" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128166e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281651c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128165350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281654e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128165670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128165800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128165990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128165b20"/>
        <function-ref name="get" scoped="" ref="0x7f7128165cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128165e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128164020"/>
        <function-ref name="set" scoped="" ref="0x7f71281641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128164340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128164760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128161740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128161740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128161ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128161c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128161de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712815f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712815f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712815f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712815f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f712815f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712815f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712815f980"/>
        <function-ref name="set" scoped="" ref="0x7f712815fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712815fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712815fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712815e120"/>
        <function-ref name="clr" scoped="" ref="0x7f712815e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712815b100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712815b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712815b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f712815b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712815b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712815b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712815bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712815bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712815bde0"/>
        <function-ref name="get" scoped="" ref="0x7f712815a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712815a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712815a340"/>
        <function-ref name="set" scoped="" ref="0x7f712815a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712815a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712815a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712815aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f712815ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128157d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128157d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281560e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128156270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128156400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128156590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128156720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281568b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128156a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128156bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128156d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128155020"/>
        <function-ref name="set" scoped="" ref="0x7f71281551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128155340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128155760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128152740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128152740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128152ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128152c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128152de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128151020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128151340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281514d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128151660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128151980"/>
        <function-ref name="set" scoped="" ref="0x7f7128151b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128151ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128151e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128150120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712814d100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712814d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712814d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f712814d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712814d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712814d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712814dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712814dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712814dde0"/>
        <function-ref name="get" scoped="" ref="0x7f712814c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712814c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712814c340"/>
        <function-ref name="set" scoped="" ref="0x7f712814c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712814c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712814c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712814ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f712814cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128149d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128149d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128148270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128148400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128148590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128148720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281488b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128148a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128148bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128148d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128147020"/>
        <function-ref name="set" scoped="" ref="0x7f71281471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128147340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128147760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128144740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128144740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128144ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128144c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128144de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128143020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281431b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128143340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281434d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128143660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128143980"/>
        <function-ref name="set" scoped="" ref="0x7f7128143b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128143ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128143e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128142120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712813f100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712813f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712813f480"/>
        <function-ref name="isInput" scoped="" ref="0x7f712813f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712813f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712813f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712813fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712813fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712813fde0"/>
        <function-ref name="get" scoped="" ref="0x7f712813e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712813e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712813e340"/>
        <function-ref name="set" scoped="" ref="0x7f712813e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712813e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712813e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712813ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f712813ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712813bd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712813bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128139270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128139400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128139590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128139720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281398b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128139a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128139bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128139d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128138020"/>
        <function-ref name="set" scoped="" ref="0x7f71281381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128138340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128138760"/>
        <function-ref name="clr" scoped="" ref="0x7f71281388f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128135740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128135740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128135ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128135c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128135de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128134020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281341b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128134340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281344d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128134660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281347f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128134980"/>
        <function-ref name="set" scoped="" ref="0x7f7128134b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128134ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128134e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128133120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128130100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128130100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128130480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128130610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281307a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128130930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128130ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128130c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128130de0"/>
        <function-ref name="get" scoped="" ref="0x7f712812f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712812f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712812f340"/>
        <function-ref name="set" scoped="" ref="0x7f712812f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712812f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712812f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712812fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f712812fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712812cd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712812cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712812b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712812b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712812b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f712812b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712812b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712812b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712812ba40"/>
        <function-ref name="get" scoped="" ref="0x7f712812bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712812bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712812a020"/>
        <function-ref name="set" scoped="" ref="0x7f712812a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712812a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712812a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712812a760"/>
        <function-ref name="clr" scoped="" ref="0x7f712812a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128127740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128127740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128127ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128127c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128127de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128126020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128126340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281264d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128126660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128126980"/>
        <function-ref name="set" scoped="" ref="0x7f7128126b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128126ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128126e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128125120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128122100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128122100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128122480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128122610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128122930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128122ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128122c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128122de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128121020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128121340"/>
        <function-ref name="set" scoped="" ref="0x7f71281214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128121660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128121a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128121c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712811ed10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712811ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712811d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712811d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712811d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f712811d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712811d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712811d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712811da40"/>
        <function-ref name="get" scoped="" ref="0x7f712811dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712811dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712811c020"/>
        <function-ref name="set" scoped="" ref="0x7f712811c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712811c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712811c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712811c760"/>
        <function-ref name="clr" scoped="" ref="0x7f712811c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128119740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128119740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128119ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128119c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128119de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128118020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128118340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281184d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128118660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128118980"/>
        <function-ref name="set" scoped="" ref="0x7f7128118b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128118ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128118e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128117120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128113100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128113100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128113480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128113610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281137a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128113930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128113ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128113c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128113de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128112020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281121b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128112340"/>
        <function-ref name="set" scoped="" ref="0x7f71281124d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128112660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281127f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128112a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128112c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712810fd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712810fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712810e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712810e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712810e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f712810e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712810e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712810e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712810ea40"/>
        <function-ref name="get" scoped="" ref="0x7f712810ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712810ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712810d020"/>
        <function-ref name="set" scoped="" ref="0x7f712810d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712810d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712810d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712810d760"/>
        <function-ref name="clr" scoped="" ref="0x7f712810d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f712810a740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f712810a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712810aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712810ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712810ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128109020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71281091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128109340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71281094d0"/>
        <function-ref name="get" scoped="" ref="0x7f7128109660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128109980"/>
        <function-ref name="set" scoped="" ref="0x7f7128109b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128109ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128109e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128108120"/>
        <function-ref name="clr" scoped="" ref="0x7f71281082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128105100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128105100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128105480"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128105610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71281057a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128105930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128105ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128105c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128105de0"/>
        <function-ref name="get" scoped="" ref="0x7f7128104020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71281041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7128104340"/>
        <function-ref name="set" scoped="" ref="0x7f71281044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128104660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71281047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128104a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7128104c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7128101d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f7128101d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71281000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128100270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128100400"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128100590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128100720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71281008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128100a40"/>
        <function-ref name="get" scoped="" ref="0x7f7128100bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128100d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71280ff020"/>
        <function-ref name="set" scoped="" ref="0x7f71280ff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71280ff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71280ff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71280ff760"/>
        <function-ref name="clr" scoped="" ref="0x7f71280ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7128088610" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7128088610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128088990"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128088b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128088cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128088e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128087020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71280871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128087340"/>
        <function-ref name="get" scoped="" ref="0x7f71280874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128087660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71280877f0"/>
        <function-ref name="set" scoped="" ref="0x7f7128087980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7128087b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128087ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128086020"/>
        <function-ref name="clr" scoped="" ref="0x7f71280861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7128099440" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7128099440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71280997c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128099950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128099ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128099c70"/>
        <function-ref name="get" scoped="" ref="0x7f7128099e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128088020"/>
        <function-ref name="set" scoped="" ref="0x7f71280881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7128088340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f71280832f0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f71280832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7128083670"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128083800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7128083990"/>
        <function-ref name="toggle" scoped="" ref="0x7f7128083b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128083cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7128083e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128081020"/>
        <function-ref name="get" scoped="" ref="0x7f71280811b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7128081340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71280814d0"/>
        <function-ref name="set" scoped="" ref="0x7f7128081660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71280817f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7128081980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7128081c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7128081da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7128084020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7128084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71280843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7128084530"/>
        <function-ref name="toggle" scoped="" ref="0x7f71280846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7128084850"/>
        <function-ref name="get" scoped="" ref="0x7f71280849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7128084b70"/>
        <function-ref name="set" scoped="" ref="0x7f7128084d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7128083020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f712807ede0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712807ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712807d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f712807d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712807d4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712807d630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712807d7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712807d950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712807dae0"/>
        <function-ref name="get" scoped="" ref="0x7f712807dc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712807de00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712807c020"/>
        <function-ref name="set" scoped="" ref="0x7f712807c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712807c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712807c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712807c760"/>
        <function-ref name="clr" scoped="" ref="0x7f712807c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f712807fb90" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f712807fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712807e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f712807e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712807e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712807e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f712807e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712807e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712807e980"/>
        <function-ref name="clr" scoped="" ref="0x7f712807eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7128070640" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SensorAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7128070640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127ec3c40"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ec41e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127ec3020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127ec4ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127ec2590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127ec2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127ec4660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127ec6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127ec3630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127ec6860"/>
        <function-ref name="stop" scoped="" ref="0x7f7127ec6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7128067610" loc="49:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f7128067610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7128063c40"/>
        <function-ref name="fired" scoped="" ref="0x7f71280651e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7128063020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7128065ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7128062590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7128062110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7128065660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7128066390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7128063630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7128066860"/>
        <function-ref name="stop" scoped="" ref="0x7f7128066d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f712805d1d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f712805d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712805a630"/>
        <function-ref name="fired" scoped="" ref="0x7f712805cc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f712805b9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f712805b550"/>
        <function-ref name="getdt" scoped="" ref="0x7f7128058020"/>
        <function-ref name="gett0" scoped="" ref="0x7f712805aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712805b0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f712805ddc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f712805a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f712805c2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f712805c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7128055a80" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f7128055a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f71280566f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f712805e400" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f712805e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f712805e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7127f63020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7127f63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127f60870"/>
        <function-ref name="fired" scoped="" ref="0x7f7127f61840"/>
        <function-ref name="startAt" scoped="" ref="0x7f7127f60220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127f61d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127f60d30"/>
        <function-ref name="start" scoped="" ref="0x7f7127f63e30"/>
        <function-ref name="stop" scoped="" ref="0x7f7127f61380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7127f64760" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7127f64760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7127f64ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7126508bd0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7126508bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71265044e0"/>
        <function-ref name="fired" scoped="" ref="0x7f71265064e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126506e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71265069a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71265049a0"/>
        <function-ref name="start" scoped="" ref="0x7f7126507a80"/>
        <function-ref name="stop" scoped="" ref="0x7f7126506020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126508380" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126508380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126508700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f71264ee0c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f71264ee0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71264ee440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71264ee5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71264ee760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71264ee8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f71264eea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f71264f17b0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f71264f17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71264f1b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71264f1cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71264f1e50"/>
        <function-ref name="get" scoped="" ref="0x7f71264f0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71264f01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71264f0340"/>
        <function-ref name="getMode" scoped="" ref="0x7f71264f04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71264f0660"/>
        <function-ref name="overflow" scoped="" ref="0x7f71264f07f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f71264f0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71264f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f71264f0da0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71264f0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71264ef180"/>
        <function-ref name="getControl" scoped="" ref="0x7f71264ef310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71264ef4a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71264ef630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71264ef7c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71264ef950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71264efae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71264efc70"/>
        <function-ref name="setControl" scoped="" ref="0x7f71264efe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f7128032ba0" loc="52:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f7128032ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7128031020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71280311b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7128031340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71280314d0"/>
        <function-ref name="fired" scoped="" ref="0x7f7128031660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f71280364d0" loc="50:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f71280364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7128036850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71280369e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128036b70"/>
        <function-ref name="get" scoped="" ref="0x7f7128036d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128035020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71280351b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7128035340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71280354d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7128035660"/>
        <function-ref name="setMode" scoped="" ref="0x7f71280357f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7128035980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f7128033280" loc="51:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7128033280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7128033600"/>
        <function-ref name="getControl" scoped="" ref="0x7f7128033790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7128033920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7128033ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f7128033c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7128033dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7128032020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71280321b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f7128032340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f71264e5da0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f71264e5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71264e4180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71264e4310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71264e44a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71264e4630"/>
        <function-ref name="fired" scoped="" ref="0x7f71264e47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f71264e84c0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f71264e84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71264e8840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71264e89d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71264e8b60"/>
        <function-ref name="get" scoped="" ref="0x7f71264e8cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71264e8e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71264e6030"/>
        <function-ref name="getMode" scoped="" ref="0x7f71264e61c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71264e6350"/>
        <function-ref name="overflow" scoped="" ref="0x7f71264e64e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f71264e6670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71264e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f71264eb340" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f71264eb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71264e9ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f71264eab80"/>
        <function-ref name="startAt" scoped="" ref="0x7f71264e9550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71264e9090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71264e8090"/>
        <function-ref name="start" scoped="" ref="0x7f71264ea1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f71264ea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71264eca30" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71264eca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71264ecdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f71264e6a90" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71264e6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71264e6e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f71264e5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71264e51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71264e5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71264e54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71264e5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71264e57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71264e5980"/>
        <function-ref name="setControl" scoped="" ref="0x7f71264e5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7127fe1020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127fe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127fe1e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fe0800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fe0340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127fe0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f7127fd8060" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f7127fd8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127fd8e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fd6820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fd6360"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127fd6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f7127fc42c0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f7127fc42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127fc4640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7127fc47d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7127fc4960"/>
        <function-ref name="get" scoped="" ref="0x7f7127fc4af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7127fc4c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fc4e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f7127fc3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fc31b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127fc3340"/>
        <function-ref name="setMode" scoped="" ref="0x7f7127fc34d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7127fc3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7127fd30a0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127fd30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127fc5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fc59a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fc54e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127fc5e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f7127fa2540" loc="63:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f7127fa2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127fa13d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fa1d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fa1890"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127f9f260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7127fa50f0" loc="62:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127fa50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127fa3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127fa39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127fa34e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127fa3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7126501020" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7126501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71264ff870"/>
        <function-ref name="fired" scoped="" ref="0x7f7126500840"/>
        <function-ref name="startAt" scoped="" ref="0x7f71264ff220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7126500d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71264ffd30"/>
        <function-ref name="start" scoped="" ref="0x7f7126501e30"/>
        <function-ref name="stop" scoped="" ref="0x7f7126500380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f71264fb780" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f71264fb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71264f7020"/>
        <function-ref name="fired" scoped="" ref="0x7f71264f9020"/>
        <function-ref name="startAt" scoped="" ref="0x7f71264f99a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71264f94e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71264f74e0"/>
        <function-ref name="start" scoped="" ref="0x7f71264fa5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f71264faae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f71264fd3d0" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f71264fd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f71264fc240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71264fcbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71264fc700"/>
        <function-ref name="overflow" scoped="" ref="0x7f71264fb0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f7127f2d490" loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f7127f2d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127f2d810"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127f2d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7127f311d0" loc="49:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7127f311d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127f2fb30"/>
        <function-ref name="fired" scoped="" ref="0x7f7127f309f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7127f2f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127f2f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127f2d020"/>
        <function-ref name="start" scoped="" ref="0x7f7127f30020"/>
        <function-ref name="stop" scoped="" ref="0x7f7127f30530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7127f37cf0" loc="48:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127f37cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127f32220"/>
        <function-ref name="fired" scoped="" ref="0x7f7127f357c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127f34590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127f34110"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127f32b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127f326a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127f35c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127f36940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127f34ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127f36e10"/>
        <function-ref name="stop" scoped="" ref="0x7f7127f35340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f7127edce80" loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f7127edce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127edb220"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127edb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f7127ee2c30" loc="49:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f7127ee2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127edc110"/>
        <function-ref name="fired" scoped="" ref="0x7f7127edf6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127ede4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127ede020"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127edca10"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127edc590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127edfb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127ee0860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127edeab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127ee0d30"/>
        <function-ref name="stop" scoped="" ref="0x7f7127edf220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7127ee7690" loc="48:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127ee7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127ee3cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ee5260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127ee3090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127ee5ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127ee2680"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127ee21e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127ee5700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127ee6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127ee36c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127ee6880"/>
        <function-ref name="stop" scoped="" ref="0x7f7127ee6d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7127ed9cf0" loc="48:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f7127ed9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127ed8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7127ece020" loc="49:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127ece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127ecee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127ecd800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127ecd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127ecdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7127ebac50" loc="38:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7127ebac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127ebd020"/>
        <function-ref name="stop" scoped="" ref="0x7f7127ebd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f7127eaf6e0" loc="44:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f7127eaf6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f7127eafa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7f7127eb2c40" loc="39:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f7127eb2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127eb7020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f7127eb71b0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127eb7340"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f7127eb74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7127eb6020" loc="43:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7127eb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7127eb63a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7f7127ebddd0" loc="38:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7f7127ebddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127eb8180"/>
        <function-ref name="stop" scoped="" ref="0x7f7127eb8310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7127eb7810" loc="42:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7127eb7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127eb7b90"/>
        <function-ref name="stop" scoped="" ref="0x7f7127eb7d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f7127ea40c0" loc="6:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f7127ea40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127ea4440"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f7127ea45d0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127ea4760"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f7127ea48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f7127e990d0" loc="5:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f7127e990d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127e99450"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f7127e995e0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127e99770"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f7127e99900"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f7127e99a90"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f7127e99c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7127e99db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7127eb9870" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7127eb9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127eb9bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f7127eb9d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7127c13c70" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127c13c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7127c12020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7127c121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f7127c11440" loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f7127c11440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127c117c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f7127c11950"/>
        <function-ref name="receive" scoped="" ref="0x7f7127c11ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f7127c11c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f7127c10020" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f7127c103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f7127c12440" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f7127c12440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127c127c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f7127c12950"/>
        <function-ref name="receive" scoped="" ref="0x7f7127c12ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f7127c12c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f7127c12e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f7127c11020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7127c111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127c13020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127c13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127c133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127c13530"/>
        <function-ref name="request" scoped="" ref="0x7f7127c136c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127c13850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127c139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f7127e35dd0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127e35dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7127e37180"/>
        <function-ref name="configure" scoped="" ref="0x7f7127e37310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f7127e33210" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f7127e33210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127e33590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f7127e33720"/>
        <function-ref name="receive" scoped="" ref="0x7f7127e338b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f7127e33a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f7127e30600" loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127e30600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f7127e30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f7127e37b50" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f7127e37b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127e36020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f7127e361b0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127e36340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f7127e364d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f7127e36660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f7127e367f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7127e36980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f7127e32370" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f7127e32370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127e326f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127e32880"/>
        <function-ref name="request" scoped="" ref="0x7f7127e32a10"/>
        <function-ref name="granted" scoped="" ref="0x7f7127e32ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127e32d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127e39320" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127e39320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127e396a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127e39830"/>
        <function-ref name="request" scoped="" ref="0x7f7127e399c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127e39b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127e39ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f7127e2cbe0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127e2cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127e2f020"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127e2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f7127da7e70" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127da7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7127da6240"/>
        <function-ref name="configure" scoped="" ref="0x7f7127da63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f7127da5890" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f7127da5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127da5c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f7127da5dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127da4020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f7127da41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f7127da33e0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127da33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f7127da3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f7127da3a50" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f7127da3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f7127da3dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f7127da1020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7127da11b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f7127da1340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7127da14d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f7127da1660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7127da17f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7127da1980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7127da1b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7127da1ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f7127da1e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f7127da0020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f7127da01b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f7127da0440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f7127da05d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f7127da0760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7127da08f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f7127da0a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7127da0c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f7127da0da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f7127d9f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f7127d9f1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f7127d9f340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f7127d9f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7127d9f660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7127d9f9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7127d9fb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f7127d9fd10"/>
        <function-ref name="tx" scoped="" ref="0x7f7127d9e020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f7127d9e1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f7127d9e340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7127d9e4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7127d9e660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f7127d9e7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f7127d9e980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7127d9eb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f7127d9eca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f7127d9ee30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f7127d9d020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f7127d9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f7127da6790" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f7127da6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127da6b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f7127da6cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f7127da6e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f7127da5020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f7127da51b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f7127da5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7127da54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7127d9c020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127d9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127d9ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127d9b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127d9b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127d9bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f7127da45b0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f7127da45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127da4950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127da4ae0"/>
        <function-ref name="request" scoped="" ref="0x7f7127da4c70"/>
        <function-ref name="granted" scoped="" ref="0x7f7127da4e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127da3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127da70d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127da70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127da7470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127da7600"/>
        <function-ref name="request" scoped="" ref="0x7f7127da7790"/>
        <function-ref name="granted" scoped="" ref="0x7f7127da7920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127da7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f7127d9d5b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127d9d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127d9d950"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127d9dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7127d9a120" loc="53:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7127d9a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7127d9a4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7127d9a630"/>
        <function-ref name="led1On" scoped="" ref="0x7f7127d9a7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7127d9a950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7127d9aae0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d9ac70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7127d9ae00"/>
        <function-ref name="led2On" scoped="" ref="0x7f7127d994d0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d991b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7127d99020"/>
        <function-ref name="led0On" scoped="" ref="0x7f7127d99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f7127d8a860" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127d8a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127d8abe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127d8ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f7127d8d500" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127d8d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127d8d880"/>
        <function-ref name="stop" scoped="" ref="0x7f7127d8da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f7127d8dd30" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7127d8dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f7127d900e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f7127d90270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7127d90400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f7127d90590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7127d90720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f7127d908b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7127d90a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7127d90bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7127d90d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7127d8f020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f7127d8f1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f7127d8f340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f7127d8f4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f7127d8f760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f7127d8f8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f7127d8fa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7127d8fc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f7127d8fda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7127d8c020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f7127d8c1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f7127d8c340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f7127d8c4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f7127d8c660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f7127d8c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7127d8c980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7127d8cd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7127d8b020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f7127d8b1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f7127d8b340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f7127d8b4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f7127d8b660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7127d8b7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7127d8b980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f7127d8bb10"/>
        <function-ref name="rx" scoped="" ref="0x7f7127d8bca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7127d8be30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f7127d8a020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f7127d8a1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f7127d8a340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f7127d8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f7127d7c990" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f7127d7c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127d7cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127d7b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127d7b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127d7b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127d7b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127d7b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127d7b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d7b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127d7bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127d7bca0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d7be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127d7a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127d7a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127d7a440"/>
        <function-ref name="clr" scoped="" ref="0x7f7127d7a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f7127d80130" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f7127d80130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127d804b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127d80640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f7127d7a990" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f7127d7a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127d7ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127d79020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127d791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127d79340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127d794d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127d79660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127d797f0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d79980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127d79b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127d79ca0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d79e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127d78020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127d781b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127d78440"/>
        <function-ref name="clr" scoped="" ref="0x7f7127d785d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f7127d78990" loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f7127d78990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127d78d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127d77020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127d771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127d77340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127d774d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127d77660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127d777f0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d77980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127d77b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127d77ca0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d77e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127d76020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127d761b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127d76440"/>
        <function-ref name="clr" scoped="" ref="0x7f7127d765d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f7127d85550" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f7127d85550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f7127d858d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f7127d85a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7127d85bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f7127d85d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7127d84020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f7127d841b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7127d84340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7127d844d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7127d84660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7127d847f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f7127d84980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f7127d84b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f7127d84ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f7127d83020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f7127d831b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f7127d83340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7127d834d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f7127d83660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7127d837f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f7127d83980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f7127d83b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f7127d83ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f7127d83e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f7127d82020"/>
        <function-ref name="getMode" scoped="" ref="0x7f7127d821b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7127d82540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7127d826d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f7127d82860"/>
        <function-ref name="tx" scoped="" ref="0x7f7127d829f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f7127d82b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f7127d82d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7127d81020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7127d811b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f7127d81340"/>
        <function-ref name="rx" scoped="" ref="0x7f7127d814d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7127d81660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f7127d817f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f7127d81980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f7127d81b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f7127d81ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f7127d88bc0" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127d88bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127d85020"/>
        <function-ref name="stop" scoped="" ref="0x7f7127d851b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f7127d7e990" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f7127d7e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127d7ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127d7d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127d7d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127d7d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127d7d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127d7d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127d7d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d7d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127d7db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127d7dca0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d7de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127d7c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127d7c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127d7c440"/>
        <function-ref name="clr" scoped="" ref="0x7f7127d7c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f7127d80a00" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f7127d80a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127d80d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127d7f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127d7f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127d7f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127d7f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127d7f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127d7f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f7127d7f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127d7fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127d7fca0"/>
        <function-ref name="set" scoped="" ref="0x7f7127d7fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127d7e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127d7e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127d7e440"/>
        <function-ref name="clr" scoped="" ref="0x7f7127d7e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7127cf9110" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127cf9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127cf8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127cf89a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127cf84e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127cf8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7126454c70" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126454c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7126452020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71264521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f712644dd70" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712644dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712644c180"/>
        <function-ref name="configure" scoped="" ref="0x7f712644c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f712644d5d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f712644d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f712644d950"/>
        <function-ref name="txDone" scoped="" ref="0x7f712644dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126454020" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71264543a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126454530"/>
        <function-ref name="request" scoped="" ref="0x7f71264546c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126454850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71264549e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f7126452be0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7126452be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f7126451020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f71264511b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7126451340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f71264514d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7126451660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f71264517f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7126451980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7126451b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7126451ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7126451e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f7126450020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f71264501b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f7126450340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f71264505d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f7126450760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f71264508f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7126450a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f7126450c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7126450da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f712644f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f712644f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f712644f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f712644f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f712644f660"/>
        <function-ref name="getMode" scoped="" ref="0x7f712644f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f712644fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f712644fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f712644e020"/>
        <function-ref name="tx" scoped="" ref="0x7f712644e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f712644e340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f712644e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f712644e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f712644e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f712644e980"/>
        <function-ref name="rx" scoped="" ref="0x7f712644eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f712644eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f712644ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f712644d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f712644d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f712644d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7126452440" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7126452440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71264527c0"/>
        <function-ref name="userId" scoped="" ref="0x7f7126452950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7127cdbd50" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127cdbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7127cd9100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7127cd9290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7127cd8370" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127cd8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7127cd86f0"/>
        <function-ref name="configure" scoped="" ref="0x7f7127cd8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f7127ce1ce0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f7127ce1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127cdc0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127cdc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127cdca60" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127cdca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127cdcde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127cdb020"/>
        <function-ref name="request" scoped="" ref="0x7f7127cdb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127cdb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127cdb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7127cd9590" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127cd9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127cd9910"/>
        <function-ref name="userId" scoped="" ref="0x7f7127cd9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7127cc24b0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127cc24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127cc2830"/>
        <function-ref name="userId" scoped="" ref="0x7f7127cc29c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f7127cd55c0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f7127cd55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127cd5960"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127cd5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f7127cc3e70" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f7127cc3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127cc2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f7127cc3020" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f7127cc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127cc33c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f7127cc3690" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f7127cc3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127cc3a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127cc3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7127c48020" loc="92:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7127c48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7127c483c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7127c48550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7127c47cd0" loc="96:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7127c47cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7127c460a0"/>
        <function-ref name="configure" scoped="" ref="0x7f7127c46230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7127c487a0" loc="93:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c487a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127c48b20"/>
        <function-ref name="requested" scoped="" ref="0x7f7127c48cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127c48e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127c47020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7127c471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127c49210" loc="91:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127c49210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127c495b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127c49740"/>
        <function-ref name="request" scoped="" ref="0x7f7127c498d0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127c49a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127c49bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7127c47400" loc="94:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c47400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127c47780"/>
        <function-ref name="userId" scoped="" ref="0x7f7127c47910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71263e5020" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71263e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71263e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f71263e5630" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f71263e5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f71263e59b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f71263e5b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f71263e5cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f71263e5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f71263e26c0" loc="55:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f71263e26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f71263e2a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71263e2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f71263e0400" loc="60:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71263e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f71263e07a0"/>
        <function-ref name="configure" scoped="" ref="0x7f71263e0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f71263e0bc0" loc="61:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f71263e0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f71263df020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f71263df1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f71263df340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f71263df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f71263e2e40" loc="56:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71263e2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71263e11e0"/>
        <function-ref name="requested" scoped="" ref="0x7f71263e1370"/>
        <function-ref name="granted" scoped="" ref="0x7f71263e1500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71263e1690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71263e1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f71263df720" loc="62:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f71263df720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f71263dfaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f71263dfc30"/>
        <function-ref name="led1On" scoped="" ref="0x7f71263dfdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f71263dd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f71263dd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f71263dd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f71263dd4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f71263ddb10"/>
        <function-ref name="set" scoped="" ref="0x7f71263dd7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f71263dd660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f71263dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71263e3850" loc="54:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71263e3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71263e3bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71263e3d80"/>
        <function-ref name="request" scoped="" ref="0x7f71263e2020"/>
        <function-ref name="granted" scoped="" ref="0x7f71263e21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71263e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f71263e1a70" loc="57:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71263e1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71263e1df0"/>
        <function-ref name="userId" scoped="" ref="0x7f71263e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f71263ddde0" loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f71263ddde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71263dc180"/>
        <function-ref name="runTask" scoped="" ref="0x7f71263dc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f7127c2c400" loc="72:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f7127c2c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f7127c2c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f7127c2c9d0" loc="73:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7127c2c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127c2cd50"/>
        <function-ref name="requested" scoped="" ref="0x7f7127c2b020"/>
        <function-ref name="granted" scoped="" ref="0x7f7127c2b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127c2b340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7127c2b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f7127c42b20" loc="70:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7127c42b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127c2c020"/>
        <function-ref name="stop" scoped="" ref="0x7f7127c2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7127c2b720" loc="74:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127c2b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127c2baa0"/>
        <function-ref name="userId" scoped="" ref="0x7f7127c2bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f71263adbd0" loc="62:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71263adbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f71263ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f71263ac270" loc="63:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71263ac270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71263ac5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f71263ac780"/>
        <function-ref name="granted" scoped="" ref="0x7f71263ac910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71263acaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71263acc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f71263ad470" loc="60:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f71263ad470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f71263ad7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f71263ad980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f71263ace80" loc="64:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71263ace80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71263ab220"/>
        <function-ref name="userId" scoped="" ref="0x7f71263ab3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f7127c0c920" loc="3:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f7127c0c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f7127c0cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f7127c0b020" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127c0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127c0b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127c0b530"/>
        <function-ref name="request" scoped="" ref="0x7f7127c0b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127c0b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127c0b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7127c0c0c0" loc="2:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7127c0c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7127c0c440"/>
        <function-ref name="stop" scoped="" ref="0x7f7127c0c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f7127bfe080" loc="43:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f7127bfe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f7127bfe400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7127bfb3a0" loc="94:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7127bfb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7127bfb720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f7127bfba00" loc="95:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f7127bfba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f7127bfbd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f712797f900" loc="49:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f712797f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f712797fc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f7127980240" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f7127980240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127980e30"/>
        <function-ref name="readDone" scoped="" ref="0x7f712797f300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f7127981aa0" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f7127981aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f7127981e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f7127982310" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SensorAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f7127982310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127981020"/>
        <function-ref name="readDone" scoped="" ref="0x7f71279814a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f712639bc50" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7f712639bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f712639a020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f712639a1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f712639a340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f712639a4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f712639a660"/>
        <function-ref name="reset" scoped="" ref="0x7f712639a7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f712639a980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f712639ab10"/>
        <function-ref name="resetDone" scoped="" ref="0x7f712639aca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f712639ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f71263a0020" loc="48:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f71263a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f71263a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f71263a0790" loc="49:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f71263a0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712639f3b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f712639f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f71263a2160" loc="46:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f71263a2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f71263a24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f712639fe30" loc="51:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7f712639fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712639d1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712639d370"/>
        <function-ref name="request" scoped="" ref="0x7f712639d500"/>
        <function-ref name="granted" scoped="" ref="0x7f712639d690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712639d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f712639c7b0" loc="53:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7f712639c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f712639cb30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f712639ccc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f712639ce50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f712639b020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f712639b1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f712639b340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f712639b4d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f712639b660"/>
        <function-ref name="resetDone" scoped="" ref="0x7f712639b7f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f712639b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f712639daf0" loc="52:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7f712639daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712639de70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712639c030"/>
        <function-ref name="request" scoped="" ref="0x7f712639c1c0"/>
        <function-ref name="granted" scoped="" ref="0x7f712639c350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712639c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f71263a28d0" loc="47:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SensorAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f71263a28d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71263a1560"/>
        <function-ref name="readDone" scoped="" ref="0x7f71263a19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f7127ba42c0" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127ba42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f7127ba4640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f7127ba47d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f7127ba4960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f7127ba4af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f7127ba4c80"/>
        <function-ref name="reset" scoped="" ref="0x7f7127ba4e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f7127ba3020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f7127ba31b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f7127ba3340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f7127ba34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127ba5020" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127ba5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127ba53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127ba5530"/>
        <function-ref name="request" scoped="" ref="0x7f7127ba56c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127ba5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127ba59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f7127b23610" loc="58:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f7127b23610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127b23990"/>
        <function-ref name="disable" scoped="" ref="0x7f7127b23b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7127b23cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127b23e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f7127b1b2f0" loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7f7127b1b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127b1b670"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127b1b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f7127b1cac0" loc="103:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7f7127b1cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127b1ce40"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127b1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f7127b25480" loc="57:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7f7127b25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b25800"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b25990"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b25b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b25cb0"/>
        <function-ref name="get" scoped="" ref="0x7f7127b25e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b23020"/>
        <function-ref name="set" scoped="" ref="0x7f7127b231b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b23340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f7127b28c90" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f7127b28c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f7127b270a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f7127b27230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f7127b273c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f7127b27550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f7127b276e0"/>
        <function-ref name="reset" scoped="" ref="0x7f7127b27870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f7127b27a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f7127b27b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7f7127b27d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f7127b26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f7127b262f0" loc="56:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f7127b262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b26670"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b26800"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b26990"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b26b20"/>
        <function-ref name="get" scoped="" ref="0x7f7127b26cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b26e40"/>
        <function-ref name="set" scoped="" ref="0x7f7127b25020"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7127b1d450" loc="62:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7127b1d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7127b1d7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7127b1d960"/>
        <function-ref name="led1On" scoped="" ref="0x7f7127b1daf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7127b1dc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7127b1de10"/>
        <function-ref name="get" scoped="" ref="0x7f7127b1c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7127b1c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7127b1c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127b1c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7127b1c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f7127b1c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7127b22240" loc="60:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127b22240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127b1f6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f7127b21c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127b20a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127b205f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127b1d020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127b1fb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127b20170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127b22e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127b1f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127b21340"/>
        <function-ref name="stop" scoped="" ref="0x7f7127b21810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f7127b12730" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f7127b12730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127b12ab0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127b12c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7127b12dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127b11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f7127b13370" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f7127b13370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b136f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b13880"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b13a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b13ba0"/>
        <function-ref name="get" scoped="" ref="0x7f7127b13d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b12020"/>
        <function-ref name="set" scoped="" ref="0x7f7127b121b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f7127b14020" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f7127b14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b14530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b146c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b14850"/>
        <function-ref name="get" scoped="" ref="0x7f7127b149e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b14b70"/>
        <function-ref name="set" scoped="" ref="0x7f7127b14d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127b151d0" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127b151d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127b15550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127b156e0"/>
        <function-ref name="request" scoped="" ref="0x7f7127b15870"/>
        <function-ref name="granted" scoped="" ref="0x7f7127b15a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127b15b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127b0e490" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b0e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b0e810"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b0e9a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127b0eb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b0ecc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b0ee50"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127b0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7127b0d340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127b0d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127b0d660"/>
        <function-ref name="set" scoped="" ref="0x7f7127b0d7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127b0d980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127b0db10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127b0dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127b10330" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b10330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b106b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b10840"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b109d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b10b60"/>
        <function-ref name="get" scoped="" ref="0x7f7127b10cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b10e80"/>
        <function-ref name="set" scoped="" ref="0x7f7127b0e030"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b0e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127b09020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b093a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b09530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127b096c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b09850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b099e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127b09b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b09d00"/>
        <function-ref name="get" scoped="" ref="0x7f7127b08020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127b081b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127b08340"/>
        <function-ref name="set" scoped="" ref="0x7f7127b084d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127b08660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127b087f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127b08a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b08c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127b0bd60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b0bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b0a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b0a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b0a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b0a630"/>
        <function-ref name="get" scoped="" ref="0x7f7127b0a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b0a950"/>
        <function-ref name="set" scoped="" ref="0x7f7127b0aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b0ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127b05de0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127b05de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b04180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b04310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127b044a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b04630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b047c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127b04950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b04ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7127b04c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127b04e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127b03020"/>
        <function-ref name="set" scoped="" ref="0x7f7127b031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127b03340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127b034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127b03760"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127b06b60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127b06b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127b05020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127b051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127b05340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127b054d0"/>
        <function-ref name="get" scoped="" ref="0x7f7127b05660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127b057f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127b05980"/>
        <function-ref name="clr" scoped="" ref="0x7f7127b05b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7127afe3e0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f7127afe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7127afe760"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7127afe8f0"/>
        <function-ref name="start" scoped="" ref="0x7f7127afea80"/>
        <function-ref name="stop" scoped="" ref="0x7f7127afec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f7127af4700" loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f7127af4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127af4a80"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127af4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f7127af6b40" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f7127af6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127af5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127af51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127af5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127af54d0"/>
        <function-ref name="get" scoped="" ref="0x7f7127af5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127af57f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127af5980"/>
        <function-ref name="clr" scoped="" ref="0x7f7127af5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7f7127af8510" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7f7127af8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127af8890"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127af8a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127af8bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127af8d40"/>
        <function-ref name="get" scoped="" ref="0x7f7127af7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127af71b0"/>
        <function-ref name="set" scoped="" ref="0x7f7127af7340"/>
        <function-ref name="clr" scoped="" ref="0x7f7127af74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f7127af7830" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f7127af7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127af7bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127af7d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127af6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127af61b0"/>
        <function-ref name="get" scoped="" ref="0x7f7127af6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127af64d0"/>
        <function-ref name="set" scoped="" ref="0x7f7127af6660"/>
        <function-ref name="clr" scoped="" ref="0x7f7127af67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7127afd080" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127afd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127af9630"/>
        <function-ref name="fired" scoped="" ref="0x7f7127afcac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127afa920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127afa4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127af8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127af9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127afa020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127afdc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127af9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127afc170"/>
        <function-ref name="stop" scoped="" ref="0x7f7127afc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7127ae95a0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127ae95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127ae5a80"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ae6090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127ae6e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127ae6990"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127ae44a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127ae4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127ae6510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127ae8200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127ae5470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127ae86d0"/>
        <function-ref name="stop" scoped="" ref="0x7f7127ae8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f7127ad8710" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f7127ad8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad8a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad8c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad8db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad7020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f7127acd8a0" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f7127acd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127acdc20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127acddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127acc020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127acc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127acc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127acc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f7127ad5710" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f7127ad5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad3020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f7127ad2710" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f7127ad2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad2a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad2db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad1020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f7127ade710" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f7127ade710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127adea90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127adec20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127adedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad9020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f7127acf710" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f7127acf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127acfb90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127acfd20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ace020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ace1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ace340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ace4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f7127ad7710" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f7127ad7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad7a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad7c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad7db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad6020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f7127acc8a0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f7127acc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127accc20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127accdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127acb020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127acb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127acb340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127acb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f7127ada660" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f7127ada660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ada9e0"/>
        <function-ref name="fired" scoped="" ref="0x7f7127adab70"/>
        <function-ref name="disable" scoped="" ref="0x7f7127adad00"/>
        <function-ref name="edge" scoped="" ref="0x7f7127adf020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127adf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127adf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f7127ad1710" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f7127ad1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad0020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f7127ad9710" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f7127ad9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad9a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad9c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad9db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad8020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f7127ace8a0" loc="57:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f7127ace8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127acec20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127acedb0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127acd020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127acd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127acd340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127acd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f7127ad6710" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f7127ad6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad6a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad6c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad6db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad5020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f7127ad3710" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f7127ad3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad3a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad3c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad3db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ad2020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ad21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ad2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f7127adf710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f7127adf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127adfa90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127adfc20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127adfdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ade020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ade1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ade340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f7127ad0710" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f7127ad0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ad0a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ad0c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ad0db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127acf020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127acf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127acf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f7127ac4710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f7127ac4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac4a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac4c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac4db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac3020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f7127ab98a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f7127ab98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ab9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ab9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ab8020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ab81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ab8340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ab84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f7127ac1710" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f7127ac1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac0020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f7127abf710" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f7127abf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127abfa90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127abfc20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127abfdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127abe020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127abe1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127abe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f7127ac6710" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f7127ac6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac6a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac6c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac6db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac5020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f7127abc710" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f7127abc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127abcb90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127abcd20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127abb020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127abb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127abb340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127abb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f7127ac3710" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f7127ac3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac3a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac3c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac3db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac2020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f7127ab88a0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f7127ab88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ab8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ab8db0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ab7020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ab71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ab7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ab74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f7127ac86b0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f7127ac86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac8a30"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac8bc0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac8d50"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac7020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f7127abe710" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f7127abe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127abea90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127abec20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127abedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127abd020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127abd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127abd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f7127ac5710" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f7127ac5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac4020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f7127abb8a0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f7127abb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127abbc20"/>
        <function-ref name="fired" scoped="" ref="0x7f7127abbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ab9020"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ab91b0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ab9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ab94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f7127ac2710" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f7127ac2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac2a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac2db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac1020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f7127ac0710" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f7127ac0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac0a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac0c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac0db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127abf020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127abf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127abf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f7127ac7710" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f7127ac7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127ac7a90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127ac7c20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127ac7db0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127ac6020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127ac61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127ac6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f7127abd710" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f7127abd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127abda90"/>
        <function-ref name="fired" scoped="" ref="0x7f7127abdc20"/>
        <function-ref name="disable" scoped="" ref="0x7f7127abddb0"/>
        <function-ref name="edge" scoped="" ref="0x7f7127abc020"/>
        <function-ref name="enable" scoped="" ref="0x7f7127abc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127abc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f71279e5610" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f71279e5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71279e5990"/>
        <function-ref name="fired" scoped="" ref="0x7f71279e5b20"/>
        <function-ref name="disable" scoped="" ref="0x7f71279e5cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f71279e5e40"/>
        <function-ref name="enable" scoped="" ref="0x7f71279d8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f71279d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f71279e6a30" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f71279e6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71279e6db0"/>
        <function-ref name="disable" scoped="" ref="0x7f71279e5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f71279e51b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f71279e5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f71279d49e0" loc="92:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f71279d49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f71279d4d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71279d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f71279d2770" loc="96:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71279d2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f71279d2b10"/>
        <function-ref name="configure" scoped="" ref="0x7f71279d2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f71279d3270" loc="93:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279d3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71279d35f0"/>
        <function-ref name="requested" scoped="" ref="0x7f71279d3780"/>
        <function-ref name="granted" scoped="" ref="0x7f71279d3910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71279d3aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71279d3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71279d6b60" loc="91:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71279d6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71279d4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71279d41b0"/>
        <function-ref name="request" scoped="" ref="0x7f71279d4340"/>
        <function-ref name="granted" scoped="" ref="0x7f71279d44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71279d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f71279d3e80" loc="94:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279d3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71279d2220"/>
        <function-ref name="userId" scoped="" ref="0x7f71279d23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71263091b0" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71263091b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126309530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f71263097c0" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f71263097c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7126309b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7126309cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7126309e60"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7126308020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7126305850" loc="55:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126305850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7126305bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7126305d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7126303590" loc="60:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7126303590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7126303930"/>
        <function-ref name="configure" scoped="" ref="0x7f7126303ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7126303d50" loc="61:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f7126303d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7126302100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7126302290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7126302420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f71263025b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7126304020" loc="56:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7126304020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71263043a0"/>
        <function-ref name="requested" scoped="" ref="0x7f7126304530"/>
        <function-ref name="granted" scoped="" ref="0x7f71263046c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126304850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71263049e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7126302800" loc="62:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7126302800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7126302b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7126302d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f7126301020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f71263011b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7126301340"/>
        <function-ref name="get" scoped="" ref="0x7f71263014d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7126301660"/>
        <function-ref name="led0On" scoped="" ref="0x7f7126301ca0"/>
        <function-ref name="set" scoped="" ref="0x7f7126301980"/>
        <function-ref name="led2On" scoped="" ref="0x7f71263017f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7126301b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126306970" loc="54:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126306970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126306d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126305020"/>
        <function-ref name="request" scoped="" ref="0x7f71263051b0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126305340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71263054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7126304c30" loc="57:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7126304c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7126303020"/>
        <function-ref name="userId" scoped="" ref="0x7f71263031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f7126300020" loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f7126300020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71263003a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7126300530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f71279ce280" loc="69:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71279ce280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71279ce600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71279ce790"/>
        <function-ref name="start" scoped="" ref="0x7f71279ce920"/>
        <function-ref name="stop" scoped="" ref="0x7f71279ceab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f71279ced00" loc="71:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71279ced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f71279a20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f71279a22f0" loc="72:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71279a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71279a2670"/>
        <function-ref name="requested" scoped="" ref="0x7f71279a2800"/>
        <function-ref name="granted" scoped="" ref="0x7f71279a2990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71279a2b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71279a2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f71279a1020" loc="73:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71279a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71279a13a0"/>
        <function-ref name="userId" scoped="" ref="0x7f71279a1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f71262cf0f0" loc="61:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71262cf0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71262cf470"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71262cf600"/>
        <function-ref name="start" scoped="" ref="0x7f71262cf790"/>
        <function-ref name="stop" scoped="" ref="0x7f71262cf920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f71262cfb70" loc="63:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f71262cfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f71262ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f71262cd680" loc="78:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f71262cd680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71262cda00"/>
        <function-ref name="runTask" scoped="" ref="0x7f71262cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f71262ce270" loc="64:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f71262ce270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71262ce5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f71262ce780"/>
        <function-ref name="granted" scoped="" ref="0x7f71262ce910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71262ceaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71262cec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f71262cde60" loc="73:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7f71262cde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71262cc210"/>
        <function-ref name="runTask" scoped="" ref="0x7f71262cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f71262d0970" loc="60:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f71262d0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f71262d0cf0"/>
        <function-ref name="stop" scoped="" ref="0x7f71262d0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f71262cee80" loc="65:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71262cee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71262cd220"/>
        <function-ref name="userId" scoped="" ref="0x7f71262cd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f71279951e0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f71279951e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127991630"/>
        <function-ref name="fired" scoped="" ref="0x7f7127994c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f71279929d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127992550"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127990020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127991ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71279920d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127995dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127991020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f71279942e0"/>
        <function-ref name="stop" scoped="" ref="0x7f71279947b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f712797c750" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f712797c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127579390"/>
        <function-ref name="readDone" scoped="" ref="0x7f7127579810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f7127578020" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f7127578020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f7127577ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f7127578c10"/>
        <function-ref name="read" scoped="" ref="0x7f71275775e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f71275765a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f712797c020" loc="41:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SensorAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f712797c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f712797c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f71262b6bd0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f71262b6bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71262b5860"/>
        <function-ref name="readDone" scoped="" ref="0x7f71262b5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f71262b44a0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262b44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71262b2110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f7127940960" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f7127940960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127940ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127940e70"/>
        <function-ref name="request" scoped="" ref="0x7f712793e030"/>
        <function-ref name="granted" scoped="" ref="0x7f712793e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712793e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7127949410" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f7127949410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127948020"/>
        <function-ref name="readDone" scoped="" ref="0x7f71279484a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f7127947530" loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f7127947530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71279461b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f7127946670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f71279422c0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f71279422c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127942640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71279427d0"/>
        <function-ref name="request" scoped="" ref="0x7f7127942960"/>
        <function-ref name="granted" scoped="" ref="0x7f7127942af0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127942c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f712793d020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f712793d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f712793dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f712793b450" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f712793b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f712793b7d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f712793b960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f712793baf0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f712793bc80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f712793be10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f712793a020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f712793a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f7127941640" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f7127941640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71279419c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127941b50"/>
        <function-ref name="request" scoped="" ref="0x7f7127941ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127941e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127940030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f7127906e40" loc="136:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f7127906e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71279051e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127905370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f71262a6720" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f71262a6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71262a6aa0"/>
        <function-ref name="configure" scoped="" ref="0x7f71262a6c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7f71262a6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f71262a8730" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f71262a8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71262a8ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f71262a8c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f71262a8dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f71262a6020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f71262a61b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f71262a6340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f71262a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f71262a5060" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f71262a5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f71262a53e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f71262a5570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f71262a59a0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262a59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71262a4600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71262a9af0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71262a9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71262a9e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71262a8030"/>
        <function-ref name="request" scoped="" ref="0x7f71262a81c0"/>
        <function-ref name="granted" scoped="" ref="0x7f71262a8350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71262a84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f71278ca960" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f71278ca960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71278cace0"/>
        <function-ref name="configure" scoped="" ref="0x7f71278cae70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f71278c8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f71278c7760" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f71278c7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f71278c7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f71278c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f71278c8920" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f71278c8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f71278c8ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f71278c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f71278cb1d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f71278cb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71278cb550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f71278cb6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f71278cb870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f71278cba00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f71278cbb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f71278cbd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f71278ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71278d8cd0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71278d8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71278cc0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71278cc230"/>
        <function-ref name="request" scoped="" ref="0x7f71278cc3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f71278cc550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71278cc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f71278c01d0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f71278c01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71278c0550"/>
        <function-ref name="configure" scoped="" ref="0x7f71278c06e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f71278c0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f71278af6b0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f71278af6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f71278afa30"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f71278afbc0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f71278afd50"/>
        <function-ref name="isBusy" scoped="" ref="0x7f71278bc020"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f71278bc1b0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f71278bc340"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f71278bc4d0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f71278bc660"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f71278bc7f0"/>
        <function-ref name="getMem" scoped="" ref="0x7f71278bc980"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f71278bcb10"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f71278bcca0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f71278bce30"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f71278bb120"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f71278bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f71278a1200" loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f71278a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71278a1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f71278a1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71278a18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71278a1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71278a1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71278a1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71278a0020"/>
        <function-ref name="get" scoped="" ref="0x7f71278a01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71278a0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71278a04d0"/>
        <function-ref name="set" scoped="" ref="0x7f71278a0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71278a07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71278a0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71278a0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71278a0da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f71278aa3a0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f71278aa3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71278aa720"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71278aa8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71278aaa40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71278aabd0"/>
        <function-ref name="fired" scoped="" ref="0x7f71278aad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f71278aed30" loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f71278aed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71278ad0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f71278ad270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71278ad400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71278ad590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71278ad720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71278ad8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71278ada40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71278adbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f71278add60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f71278be020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f71278be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f71278be3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f71278be530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f71278a5200" loc="56:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f71278a5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71278a5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f71278a5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71278a58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71278a5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71278a5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71278a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71278a4020"/>
        <function-ref name="get" scoped="" ref="0x7f71278a41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71278a4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71278a44d0"/>
        <function-ref name="set" scoped="" ref="0x7f71278a4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71278a47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71278a4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71278a4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71278a4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f71278bf1d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f71278bf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f71278bf550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f71278bf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f712789b200" loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f712789b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712789b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712789b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712789b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712789ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712789bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712789bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712789a020"/>
        <function-ref name="get" scoped="" ref="0x7f712789a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712789a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712789a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712789a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712789a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712789a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712789ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f712789ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f71278a9140" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f71278a9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71278a95c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f71278a9750"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71278a98e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71278a9a70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71278a9c00"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71278a9d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71278a8020"/>
        <function-ref name="get" scoped="" ref="0x7f71278a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71278a8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71278a84d0"/>
        <function-ref name="set" scoped="" ref="0x7f71278a8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71278a87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71278a8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71278a8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71278a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71278c6c60" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71278c6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71278c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f712789f200" loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f712789f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712789f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712789f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712789f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712789fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712789fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712789fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712789e020"/>
        <function-ref name="get" scoped="" ref="0x7f712789e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712789e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712789e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712789e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712789e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712789e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712789ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f712789eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f71278bb5f0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f71278bb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71278bb970"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71278bbb00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71278bbc90"/>
        <function-ref name="get" scoped="" ref="0x7f71278bbe20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71278ae020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71278ae1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f71278ae340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71278ae4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f71278ae660"/>
        <function-ref name="setMode" scoped="" ref="0x7f71278ae7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f71278ae980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f71278be940" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f71278be940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f71278becc0"/>
        <function-ref name="userId" scoped="" ref="0x7f71278bee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f71278ac160" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f71278ac160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71278ac4e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f71278ac670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71278ac800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71278ac990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71278acb20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71278accb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71278ace40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71278ab020"/>
        <function-ref name="setControl" scoped="" ref="0x7f71278ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f71278c3980" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f71278c3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71278c3d00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f71278c2020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f71278c21b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f71278c2340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f71278c24d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f71278c2660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f71278c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f71278a3200" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f71278a3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71278a3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f71278a3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71278a38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71278a3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71278a3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71278a3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71278a2020"/>
        <function-ref name="get" scoped="" ref="0x7f71278a21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71278a2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71278a24d0"/>
        <function-ref name="set" scoped="" ref="0x7f71278a2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71278a27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71278a2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71278a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71278a2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f71278ab530" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f71278ab530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71278ab8b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71278aba40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f71278abbd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71278abd60"/>
        <function-ref name="fired" scoped="" ref="0x7f71278aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f71278a7200" loc="55:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f71278a7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71278a7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f71278a7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71278a78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f71278a7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71278a7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71278a7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71278a6020"/>
        <function-ref name="get" scoped="" ref="0x7f71278a61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71278a6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71278a64d0"/>
        <function-ref name="set" scoped="" ref="0x7f71278a6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71278a67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71278a6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71278a6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f71278a6da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f712789d200" loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f712789d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712789d580"/>
        <function-ref name="isInput" scoped="" ref="0x7f712789d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712789d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712789da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712789dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712789dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712789c020"/>
        <function-ref name="get" scoped="" ref="0x7f712789c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712789c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712789c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f712789c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712789c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712789c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712789cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f712789cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f71277dd020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f71277dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f71277dd3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f71277dd530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f71277dd6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f71277dd850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f71277dd9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f71277ddb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f71277ddd00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f71277dc020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f71277dc1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f71277dc340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f71277dc4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f71277dc660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f71277dc7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f71277dca80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f71277dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f712774c3a0" loc="86:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f712774c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f712774c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f712774c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f712774b570" loc="89:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712774b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712774b910"/>
        <function-ref name="configure" scoped="" ref="0x7f712774baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f712774d520" loc="85:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f712774d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712774d8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712774da50"/>
        <function-ref name="request" scoped="" ref="0x7f712774dbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f712774dd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712774c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f712774cb20" loc="87:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712774cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f712774b020"/>
        <function-ref name="userId" scoped="" ref="0x7f712774b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126281060" loc="44:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126281060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71262813e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f7126281670" loc="45:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f7126281670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f71262819f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7126281b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7126281d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f712627f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f712627d530" loc="52:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f712627d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f712627d8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f712627da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f712627c610" loc="56:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712627c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712627c9b0"/>
        <function-ref name="configure" scoped="" ref="0x7f712627cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f712627cdd0" loc="57:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f712627cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f712627b180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f712627b310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f712627b4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f712627b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f712627e6c0" loc="51:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f712627e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712627ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712627ebf0"/>
        <function-ref name="request" scoped="" ref="0x7f712627ed80"/>
        <function-ref name="granted" scoped="" ref="0x7f712627d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712627d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f712627dcb0" loc="53:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712627dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f712627c0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f712627c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f712627b900" loc="68:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f712627b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f712627bc80"/>
        <function-ref name="runTask" scoped="" ref="0x7f712627be10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f712772d740" loc="55:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f712772d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f712772b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f712772e1d0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f712772e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712772e550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712772e6e0"/>
        <function-ref name="request" scoped="" ref="0x7f712772e870"/>
        <function-ref name="granted" scoped="" ref="0x7f712772ea00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712772eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f7127732d30" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f7127732d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712772f0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712772f270"/>
        <function-ref name="request" scoped="" ref="0x7f712772f400"/>
        <function-ref name="granted" scoped="" ref="0x7f712772f590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712772f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f71277279c0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f71277279c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f7127727d40"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f7127726020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f71277261b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f7127726340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f71277264d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f7127726660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f71277267f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f7127726980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f7127726b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f7127726ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f7127726e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f7127725020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f71277251b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f7127725440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f71277255d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f712771f020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f712771f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712771b630"/>
        <function-ref name="fired" scoped="" ref="0x7f712771ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f712771d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f712771d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f712771a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f712771bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712771d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f712771fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f712771b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f712771e110"/>
        <function-ref name="stop" scoped="" ref="0x7f712771e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f7127728e40" loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f7127728e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71277271e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7127727370"/>
        <function-ref name="start" scoped="" ref="0x7f7127727500"/>
        <function-ref name="stop" scoped="" ref="0x7f7127727690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f712771a6c0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f712771a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127716c40"/>
        <function-ref name="fired" scoped="" ref="0x7f71277181e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127716020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127718ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127715590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127715110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127718660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127719390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127716630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127719860"/>
        <function-ref name="stop" scoped="" ref="0x7f7127719d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f7127728280" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f7127728280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7127728600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7127728790"/>
        <function-ref name="start" scoped="" ref="0x7f7127728920"/>
        <function-ref name="stop" scoped="" ref="0x7f7127728ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f7127725a90" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f7127725a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127720020"/>
        <function-ref name="fired" scoped="" ref="0x7f7127723510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127721300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7127723e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127720920"/>
        <function-ref name="gett0" scoped="" ref="0x7f71277204a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127723990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f71277246b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127721910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127724b80"/>
        <function-ref name="stop" scoped="" ref="0x7f7127723090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f71276c1020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f71276c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71276c1c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f71276c49c0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f71276c49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71276c4d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71276c2020"/>
        <function-ref name="start" scoped="" ref="0x7f71276c21b0"/>
        <function-ref name="stop" scoped="" ref="0x7f71276c2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f71276c5030" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f71276c5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71276c53b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71276c5540"/>
        <function-ref name="request" scoped="" ref="0x7f71276c56d0"/>
        <function-ref name="granted" scoped="" ref="0x7f71276c5860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71276c59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f71276cacb0" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f71276cacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71276c60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71276c6230"/>
        <function-ref name="request" scoped="" ref="0x7f71276c63c0"/>
        <function-ref name="granted" scoped="" ref="0x7f71276c6550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71276c66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f71276bf7f0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f71276bf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71276bfb70"/>
        <function-ref name="runTask" scoped="" ref="0x7f71276bfd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f71276c5d80" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f71276c5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71276c4180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71276c4310"/>
        <function-ref name="start" scoped="" ref="0x7f71276c44a0"/>
        <function-ref name="stop" scoped="" ref="0x7f71276c4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f71276904e0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f71276904e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712768ca20"/>
        <function-ref name="fired" scoped="" ref="0x7f712768e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f712768eda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f712768e920"/>
        <function-ref name="getdt" scoped="" ref="0x7f712768b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f712768b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712768e4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f712768f110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f712768c410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f712768f5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f712768fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7127689020" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127689020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127685630"/>
        <function-ref name="fired" scoped="" ref="0x7f7127688a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7127686920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f71276864a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7127684020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7127685ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127686020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127689c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7127685020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127688110"/>
        <function-ref name="stop" scoped="" ref="0x7f71276885e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7127683b40" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7127683b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712767e110"/>
        <function-ref name="fired" scoped="" ref="0x7f71276815b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f712767f4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f712767f020"/>
        <function-ref name="getdt" scoped="" ref="0x7f712767ea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f712767e590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127681a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7127682750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f712767fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7127682c20"/>
        <function-ref name="stop" scoped="" ref="0x7f7127681130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f7126296060" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f7126296060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f7126296c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f7126295300" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f7126295300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f7126294020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f71262ae5c0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f71262ae5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71262ac240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f71262b1840" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f71262b1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f71262af340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f71262b0480"/>
        <function-ref name="read" scoped="" ref="0x7f71262b0df0"/>
        <function-ref name="readDone" scoped="" ref="0x7f71262afdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f7127647c90" loc="23:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7127647c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71276460a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f7127646230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f71276463c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f7127646550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f71276466e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f7127646870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f7127646a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f71276485e0" loc="22:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f71276485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f7127647240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f712764c1d0" loc="20:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f712764c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f712764bc40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f712764cdc0"/>
        <function-ref name="read" scoped="" ref="0x7f712764b770"/>
        <function-ref name="readDone" scoped="" ref="0x7f7127649730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f7127644280" loc="24:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127644280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127644600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127644790"/>
        <function-ref name="request" scoped="" ref="0x7f7127644920"/>
        <function-ref name="granted" scoped="" ref="0x7f7127644ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127644c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f712760e380" loc="156:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f712760e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f712760e700"/>
        <function-ref name="runTask" scoped="" ref="0x7f712760e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f712761caa0" loc="119:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f712761caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f712761ce20"/>
        <function-ref name="runTask" scoped="" ref="0x7f712761b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f7127616100" loc="135:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f7127616100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127616480"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127616610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7127637020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7127637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127634870"/>
        <function-ref name="fired" scoped="" ref="0x7f7127636840"/>
        <function-ref name="startAt" scoped="" ref="0x7f7127634220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127636d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127634d30"/>
        <function-ref name="start" scoped="" ref="0x7f7127637e30"/>
        <function-ref name="stop" scoped="" ref="0x7f7127636380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7127640150" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7127640150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f7128a34800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f7128a34800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71276404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f712763ab10" loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f712763ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f7127638790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f712763b1d0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f712763b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f712763b550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f712763b6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f712763b870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f712763ba00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f712763bb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f712763bd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f712763a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f7127640e70" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f7127640e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f712763d910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f712763fa90"/>
        <function-ref name="read" scoped="" ref="0x7f712763d440"/>
        <function-ref name="readDone" scoped="" ref="0x7f712763c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f71275d2970" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f71275d2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71275ce1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f71275d01b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f71275d0b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71275d0670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71275ce670"/>
        <function-ref name="start" scoped="" ref="0x7f71275d17c0"/>
        <function-ref name="stop" scoped="" ref="0x7f71275d1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71275d2120" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71275d2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71275d24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7126232ca0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7126232ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712622f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f71262304e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126230e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71262309a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f712622f9a0"/>
        <function-ref name="start" scoped="" ref="0x7f7126231ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126230020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126232450" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126232450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71262327d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f7126219440" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f7126219440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71262197c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f7126219950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7126219ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f7126219c70"/>
        <function-ref name="fired" scoped="" ref="0x7f7126219e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f712621c880" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f712621c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712621cc00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712621cd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712621b020"/>
        <function-ref name="get" scoped="" ref="0x7f712621b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712621b340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712621b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712621b660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712621b7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f712621b980"/>
        <function-ref name="setMode" scoped="" ref="0x7f712621bb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712621bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f712621a020" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712621a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712621a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f712621a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712621a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712621a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712621a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712621ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712621ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7126219020"/>
        <function-ref name="setControl" scoped="" ref="0x7f71262191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f712620f0c0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f712620f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712620f440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712620f5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712620f760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712620f8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f712620fa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f7126212710" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126212710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126212a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7126212c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7126212db0"/>
        <function-ref name="get" scoped="" ref="0x7f7126211020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71262111b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126211340"/>
        <function-ref name="getMode" scoped="" ref="0x7f71262114d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126211660"/>
        <function-ref name="overflow" scoped="" ref="0x7f71262117f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7126211980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7126211b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f71262165b0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f71262165b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126213df0"/>
        <function-ref name="fired" scoped="" ref="0x7f7126215df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f71262137a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71262132e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71262122e0"/>
        <function-ref name="start" scoped="" ref="0x7f7126215420"/>
        <function-ref name="stop" scoped="" ref="0x7f7126215930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126217ca0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126217ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71262160a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f7126211da0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7126211da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7126210180"/>
        <function-ref name="getControl" scoped="" ref="0x7f7126210310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71262104a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7126210630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71262107c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7126210950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7126210ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7126210c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f7126210e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f712622c020" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f712622c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126229870"/>
        <function-ref name="fired" scoped="" ref="0x7f712622b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126229220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712622bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7126229d30"/>
        <function-ref name="start" scoped="" ref="0x7f712622ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f712622b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f7126226780" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f7126226780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126222020"/>
        <function-ref name="fired" scoped="" ref="0x7f7126223020"/>
        <function-ref name="startAt" scoped="" ref="0x7f71262239a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71262234e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71262224e0"/>
        <function-ref name="start" scoped="" ref="0x7f71262245d0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126224ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f71262283d0" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f71262283d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126227240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126227bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126227700"/>
        <function-ref name="overflow" scoped="" ref="0x7f71262260d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f712759fbf0" loc="26:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f712759fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f712759c710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f712759d860"/>
        <function-ref name="read" scoped="" ref="0x7f712759c220"/>
        <function-ref name="readDone" scoped="" ref="0x7f712759a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f71275cacb0" loc="24:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f71275cacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f71275a0850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f71275a1940"/>
        <function-ref name="read" scoped="" ref="0x7f71275a0360"/>
        <function-ref name="readDone" scoped="" ref="0x7f712759f360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f712759a8f0" loc="27:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f712759a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712759ac90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712759ae20"/>
        <function-ref name="request" scoped="" ref="0x7f7127599020"/>
        <function-ref name="granted" scoped="" ref="0x7f71275991b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127599340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f7126240020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f7126240020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71262403a0"/>
        <function-ref name="configure" scoped="" ref="0x7f7126240530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f71262406c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f7126241020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f7126241020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f71262413a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f7126241530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f71262416c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f7126241850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f71262419e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f7126241b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f7126241d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f7126240910" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f7126240910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f7126240c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f7126240e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f712623f280" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f712623f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f712623e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126242360" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126242360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71262426e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126242870"/>
        <function-ref name="request" scoped="" ref="0x7f7126242a00"/>
        <function-ref name="granted" scoped="" ref="0x7f7126242b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126242d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f71261cfdc0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f71261cfdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71261cdac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f71261cc120" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SensorAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f71261cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f71261ccd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f7127581300" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f7127581300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f7127580020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f71275848b0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f71275848b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f7127584c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f7127571b80" loc="49:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f7127571b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f712756fc10"/>
        <function-ref name="enable" scoped="" ref="0x7f712756f790"/>
        <function-ref name="notify" scoped="" ref="0x7f712756e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f7127574930" loc="48:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f7127574930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127571560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f712756a340" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f712756a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712756a6c0"/>
        <function-ref name="disable" scoped="" ref="0x7f712756a850"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f712756a9e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f712756ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f712756b020" loc="40:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f712756b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712756b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712756b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f712756b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712756b850"/>
        <function-ref name="get" scoped="" ref="0x7f712756b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712756bb70"/>
        <function-ref name="set" scoped="" ref="0x7f712756bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f712756a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127567610" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127567610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127567990"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127567b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127567cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127567e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127566020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71275661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127566340"/>
        <function-ref name="get" scoped="" ref="0x7f71275664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127566660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71275667f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127566980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127566b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127566ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127565020"/>
        <function-ref name="clr" scoped="" ref="0x7f71275651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127568370" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127568370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71275686f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127568880"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127568a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127568ba0"/>
        <function-ref name="get" scoped="" ref="0x7f7127568d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127567020"/>
        <function-ref name="set" scoped="" ref="0x7f71275671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127567340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f71275612f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f71275612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127561670"/>
        <function-ref name="fired" scoped="" ref="0x7f7127561800"/>
        <function-ref name="disable" scoped="" ref="0x7f7127561990"/>
        <function-ref name="edge" scoped="" ref="0x7f7127561b20"/>
        <function-ref name="enable" scoped="" ref="0x7f7127561cb0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7127561e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f7127563680" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f7127563680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127563a00"/>
        <function-ref name="disable" scoped="" ref="0x7f7127563b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7127563d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127561020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f7127543480" loc="51:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f7127543480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127543800"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127543990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f71275448f0" loc="46:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f71275448f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127544c70"/>
        <function-ref name="disable" scoped="" ref="0x7f7127544e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7127543020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f71275431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f7127548ce0" loc="43:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f7127548ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f7127547dc0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127547940"/>
        <function-ref name="notify" scoped="" ref="0x7f71275452a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f7127549b80" loc="42:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f7127549b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127548790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f7127545720" loc="45:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127545720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127545aa0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127545c30"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127545dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127544020"/>
        <function-ref name="get" scoped="" ref="0x7f71275441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127544340"/>
        <function-ref name="set" scoped="" ref="0x7f71275444d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127544660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f712753ce20" loc="45:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f712753ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f712753aa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f712753d270" loc="43:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f712753d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f712753c310"/>
        <function-ref name="enable" scoped="" ref="0x7f712753de60"/>
        <function-ref name="notify" scoped="" ref="0x7f712753c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f7127539130" loc="46:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f7127539130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f71275381e0"/>
        <function-ref name="enable" scoped="" ref="0x7f7127539d20"/>
        <function-ref name="notify" scoped="" ref="0x7f7127538660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f712753e020" loc="42:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f712753e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f712858f770"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f712858e0d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f712753ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f712752ec10" loc="61:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f712752ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f712752b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f712752b1b0"/>
        <function-ref name="start" scoped="" ref="0x7f712752b340"/>
        <function-ref name="stop" scoped="" ref="0x7f712752b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f712752bca0" loc="63:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f712752bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71275290a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7127529230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71275293c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7127529550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71275296e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f7127528c00" loc="65:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f7127528c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7127527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f71275272b0" loc="67:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71275272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7127527630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71275277c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7127527950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7127527ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7127527c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f7127524430" loc="70:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7127524430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7127523b00"/>
        <function-ref name="clear" scoped="" ref="0x7f71275152a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f71275233d0"/>
        <function-ref name="set" scoped="" ref="0x7f71275159d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f71275085b0" loc="72:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f71275085b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f7127508930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f7127508ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f7127508c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f7127508de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7127528020" loc="64:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7127528020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71275283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f712751d350" loc="69:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f712751d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f712751d6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f712751d860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f712751d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f7127526020" loc="68:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f7127526020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71275263a0"/>
        <function-ref name="source" scoped="" ref="0x7f7127526530"/>
        <function-ref name="address" scoped="" ref="0x7f71275266c0"/>
        <function-ref name="destination" scoped="" ref="0x7f7127526850"/>
        <function-ref name="setSource" scoped="" ref="0x7f71275269e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f7127526b70"/>
        <function-ref name="type" scoped="" ref="0x7f7127526d00"/>
        <function-ref name="setType" scoped="" ref="0x7f7127525020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f71275251b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7127525340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f71275254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7127514660" loc="71:/home/ly/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7127514660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7127513ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f7127511460"/>
        <function-ref name="isValid" scoped="" ref="0x7f71275135b0"/>
        <function-ref name="set" scoped="" ref="0x7f7127511b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f71274fc2f0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71274fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71274fc670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71274fc800"/>
        <function-ref name="start" scoped="" ref="0x7f71274fc990"/>
        <function-ref name="stop" scoped="" ref="0x7f71274fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f71274ec2c0" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274ec2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f71274ec640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f71274ec7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f71274ec960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f71274ecaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7f71274ecc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f71274ece10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f71274e01d0" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f71274e01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f71274e0650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f71274f6020" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71274f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71274f63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71274f6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274f66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274f6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f71274f69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f71274fb320" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f71274fb320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274fb6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274fb830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274fb9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274fbb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274fbce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f71274f81d0" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f71274f81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71274f8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f71274ed0f0" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274ed0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f71274ed470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f71274ed600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f71274ed790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f71274ed920"/>
        <function-ref name="getPower" scoped="" ref="0x7f71274edab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f71274edc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f71274e2170" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274e2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f71274e24f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f71274e2680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f71274e2810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f71274e29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f71274f9510" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f71274f9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71274f9890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f71274f4020" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f71274f43a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f71274f4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f71274f46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f71274d7430" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f71274d7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f71274d77b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f71274d7940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f71274d7ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f71274d7c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f71274d7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f71274f8800" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f71274f8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71274f8b80"/>
        <function-ref name="source" scoped="" ref="0x7f71274f8d10"/>
        <function-ref name="address" scoped="" ref="0x7f71274f7020"/>
        <function-ref name="destination" scoped="" ref="0x7f71274f71b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f71274f7340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f71274f74d0"/>
        <function-ref name="type" scoped="" ref="0x7f71274f7660"/>
        <function-ref name="setType" scoped="" ref="0x7f71274f77f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f71274f7980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f71274f7b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f71274f7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f71274e8170" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f71274e8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f71274e84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f71274d3020" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71274d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71274d33a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71274d3530"/>
        <function-ref name="start" scoped="" ref="0x7f71274d36c0"/>
        <function-ref name="stop" scoped="" ref="0x7f71274d3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f71274c39d0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f71274c39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f71274c3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f71274c2b70" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f71274c2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f71274c1020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f71274c11b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f71274c1340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f71274c14d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f71274c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f71274c4020" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f71274c43a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f71274c4530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f71274c46c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f71274c4850"/>
        <function-ref name="getPower" scoped="" ref="0x7f71274c49e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f71274c4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f71274ce990" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f71274ce990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274ced10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274c7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274c71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274c7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f71274c2080" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f71274c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f71274c2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f71274c2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f71274c2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f71274c28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f71274cf500" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f71274cf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71274cf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f71274c3020" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f71274c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f71274c33a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f71274c3530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f71274c36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71274d11d0" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71274d11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71274d1550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71274d16e0"/>
        <function-ref name="request" scoped="" ref="0x7f71274d1870"/>
        <function-ref name="granted" scoped="" ref="0x7f71274d1a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71274d1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f71274c56f0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f71274c56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274c5a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274c5c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274c5d90"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274cf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f71274cfbc0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f71274cfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71274ce020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71274ce1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274ce340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274ce4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f71274ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f71274c7840" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f71274c7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71274c7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f71274be390" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71274be390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71274be710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71274be8a0"/>
        <function-ref name="start" scoped="" ref="0x7f71274bea30"/>
        <function-ref name="stop" scoped="" ref="0x7f71274bebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f71274bc330" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274bc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f71274bc6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f71274bc840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f71274bc9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f71274bcb60"/>
        <function-ref name="setCca" scoped="" ref="0x7f71274bccf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f71274bce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f71274bee80" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f71274bee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274bd220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274bd3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274bd540"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274bd6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274bd860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f71274bdb40" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f71274bdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71274bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f71274bbe80" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f71274bbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f71274b8220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f71274b83b0"/>
        <function-ref name="start" scoped="" ref="0x7f71274b8540"/>
        <function-ref name="stop" scoped="" ref="0x7f71274b86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f71274b67e0" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f71274b67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f71274b6b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f71274b6cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f71274b6e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f71274b5030"/>
        <function-ref name="setCca" scoped="" ref="0x7f71274b51c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f71274b5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f71274acae0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f71274acae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f71274ace60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f71274ab020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f71274ab1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f71274ab340"/>
        <function-ref name="setCca" scoped="" ref="0x7f71274ab4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f71274ab660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f71274a0020" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f71274a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f71274a03a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f71274a0530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f71274a06c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f71274a0850"/>
        <function-ref name="getPower" scoped="" ref="0x7f71274a09e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f71274a0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f71274a5d30" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f71274a5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274ac0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274ac270"/>
        <function-ref name="modify" scoped="" ref="0x7f71274ac400"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274ac590"/>
        <function-ref name="resend" scoped="" ref="0x7f71274ac720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f71274b8990" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f71274b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71274b8d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71274b6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71274b61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71274b6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71274b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f71274a4020" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f71274a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f71274a43a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f71274a4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f71274b2020" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f71274b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f71274b23a0"/>
        <function-ref name="stop" scoped="" ref="0x7f71274b2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f712749a660" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f712749a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f712749a9e0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f712749ab70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f712749ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f71274aeb50" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f71274aeb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f71274b3020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f71274b31b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f71274b3340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f71274b34d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f71274b3660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f71274b37f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f71274b3980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f71274b3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f71274a47f0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f71274a47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f71274a4b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f71274a4d00"/>
        <function-ref name="led1On" scoped="" ref="0x7f71274a3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f71274a31b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f71274a3340"/>
        <function-ref name="get" scoped="" ref="0x7f71274a34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f71274a3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f71274a3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f71274a37f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f71274a3980"/>
        <function-ref name="led2On" scoped="" ref="0x7f71274a3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f71274b5640" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71274b5640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71274b59c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71274b5b50"/>
        <function-ref name="request" scoped="" ref="0x7f71274b5ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f71274b5e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71274b4030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f7127495e40" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f7127495e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f712749d310"/>
        <function-ref name="toIdle" scoped="" ref="0x7f712749d4a0"/>
        <function-ref name="isState" scoped="" ref="0x7f712749d630"/>
        <function-ref name="isIdle" scoped="" ref="0x7f712749d7c0"/>
        <function-ref name="requestState" scoped="" ref="0x7f712749d950"/>
        <function-ref name="forceState" scoped="" ref="0x7f712749dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f71274909e0" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f71274909e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127490d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f712748e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f7127491a10" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f7127491a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127491d90"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127490020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f7127492a00" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f7127492a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127492d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127491020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f7127437b80" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f7127437b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f7127443020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f71274431b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f7127443340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f71274434d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f7127443660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f71274437f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7127443980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f7127443b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f7127443ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f7127443e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f7127442020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f71274421b0"/>
        <function-ref name="sync" scoped="" ref="0x7f7127442340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f71274425d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f7127442760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f7127436e60" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f7127436e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127435a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f7127434020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f7127442a60" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f7127442a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f7127442de0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f7127436020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f71274361b0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f7127436340"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f71274364d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f7127436660"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f71274367f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f7127436980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127448720" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127448720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127448aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127448c30"/>
        <function-ref name="request" scoped="" ref="0x7f7127448dc0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127444020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71274441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f712742f7e0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f712742f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f712742fb60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f712742fcf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f712742fe80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f712742e030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f712742e1c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f712742e350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f712742e4e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f712742e670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f712742e800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f712742e990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f712742eb20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f712742ecb0"/>
        <function-ref name="sync" scoped="" ref="0x7f712742ee40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f712742d120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f712742d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f71274118e0" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f71274118e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127411c60"/>
        <function-ref name="write" scoped="" ref="0x7f7127411df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f712742adf0" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f712742adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f71274291c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f7127429830" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f7127429830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127425090"/>
        <function-ref name="fired" scoped="" ref="0x7f7127426090"/>
        <function-ref name="startAt" scoped="" ref="0x7f7127426a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127426550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127425550"/>
        <function-ref name="start" scoped="" ref="0x7f71274286a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7127428bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f7127414710" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7127414710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127414a90"/>
        <function-ref name="write" scoped="" ref="0x7f7127414c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f7127424ce0" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f7127424ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71274230a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127423230"/>
        <function-ref name="toggle" scoped="" ref="0x7f71274233c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127423550"/>
        <function-ref name="get" scoped="" ref="0x7f71274236e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127423870"/>
        <function-ref name="set" scoped="" ref="0x7f7127423a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7127423b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f712742c9b0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f712742c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712742b5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f712742ba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f71273ff820" loc="126:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f71273ff820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71273ffba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f71273ffd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f71274101c0" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f71274101c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127410540"/>
        <function-ref name="write" scoped="" ref="0x7f71274106d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f7127410a70" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7127410a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127410df0"/>
        <function-ref name="write" scoped="" ref="0x7f712740f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f7127415550" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7127415550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71274158d0"/>
        <function-ref name="write" scoped="" ref="0x7f7127415a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f712741baf0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f712741baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f712741be70"/>
        <function-ref name="changed" scoped="" ref="0x7f712741e030"/>
        <function-ref name="amGroup" scoped="" ref="0x7f712741e1c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f712741e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f7127425a40" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f7127425a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127425dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127424020"/>
        <function-ref name="toggle" scoped="" ref="0x7f71274241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127424340"/>
        <function-ref name="get" scoped="" ref="0x7f71274244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127424660"/>
        <function-ref name="set" scoped="" ref="0x7f71274247f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127424980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f712740e160" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f712740e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f712740e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f7127421020" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f7127421020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71274213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127421530"/>
        <function-ref name="toggle" scoped="" ref="0x7f71274216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127421850"/>
        <function-ref name="get" scoped="" ref="0x7f71274219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127421b70"/>
        <function-ref name="set" scoped="" ref="0x7f7127421d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7127420020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71274303c0" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71274303c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7127430740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f7127411020" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7127411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71274113a0"/>
        <function-ref name="write" scoped="" ref="0x7f7127411530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f712740ea80" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f712740ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f712740ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f712740d1d0" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f712740d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712740d550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712740d6e0"/>
        <function-ref name="request" scoped="" ref="0x7f712740d870"/>
        <function-ref name="granted" scoped="" ref="0x7f712740da00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712740db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f712740bd90" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f712740bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712740a180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712740a310"/>
        <function-ref name="request" scoped="" ref="0x7f712740a4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f712740a630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712740a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f712742d5b0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f712742d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f712742d930"/>
        <function-ref name="rfOff" scoped="" ref="0x7f712742dac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f712742dc50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f712742dde0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f712742c020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f712742c1b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f712742c340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f712742c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f7127415e00" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7127415e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71274141c0"/>
        <function-ref name="write" scoped="" ref="0x7f7127414350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f7127413be0" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7127413be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127415020"/>
        <function-ref name="write" scoped="" ref="0x7f71274151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f712740c2e0" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f712740c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f712740c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f712740aa80" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f712740aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f712740ae00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7127409020"/>
        <function-ref name="led1On" scoped="" ref="0x7f71274091b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7127409340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f71274094d0"/>
        <function-ref name="get" scoped="" ref="0x7f7127409660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f71274097f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7127409e30"/>
        <function-ref name="set" scoped="" ref="0x7f7127409980"/>
        <function-ref name="led0On" scoped="" ref="0x7f7127409b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f7127409ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f7127401940" loc="125:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f7127401940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127401cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127401e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127430a30" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127430a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127430db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712742f020"/>
        <function-ref name="request" scoped="" ref="0x7f712742f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f712742f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712742f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f712741d5a0" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f712741d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712741d920"/>
        <function-ref name="write" scoped="" ref="0x7f712741dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f7127416c00" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7127416c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712741d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f712741d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f7127420400" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f7127420400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127420780"/>
        <function-ref name="disable" scoped="" ref="0x7f7127420910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7127420aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127420c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f712740b020" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f712740b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712740b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712740b530"/>
        <function-ref name="request" scoped="" ref="0x7f712740b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f712740b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712740b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f712740c9f0" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f712740c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f712740cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71273897e0" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71273897e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7127389b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f7127386220" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127386220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127384b30"/>
        <function-ref name="fired" scoped="" ref="0x7f7127385a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f71273844e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127384020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127383020"/>
        <function-ref name="start" scoped="" ref="0x7f7127385090"/>
        <function-ref name="stop" scoped="" ref="0x7f71273855a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7127380260" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7127380260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71273805e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f7127380af0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f7127380af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7127346390"/>
        <function-ref name="fired" scoped="" ref="0x7f7127347360"/>
        <function-ref name="startAt" scoped="" ref="0x7f7127347ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7127347820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7127346850"/>
        <function-ref name="start" scoped="" ref="0x7f7127348970"/>
        <function-ref name="stop" scoped="" ref="0x7f7127348e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f712618bca0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f712618bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71261874e0"/>
        <function-ref name="fired" scoped="" ref="0x7f71261884e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126188e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71261889a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71261879a0"/>
        <function-ref name="start" scoped="" ref="0x7f7126189ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126188020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f712618b450" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f712618b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f712618b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7126183c20" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f7126183c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f71261804e0"/>
        <function-ref name="fired" scoped="" ref="0x7f71261814e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126181e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71261819a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71261809a0"/>
        <function-ref name="start" scoped="" ref="0x7f7126182a80"/>
        <function-ref name="stop" scoped="" ref="0x7f7126181020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f71261833d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f71261833d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126183750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f712616a440" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f712616a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f712616a7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f712616a950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f712616aae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f712616ac70"/>
        <function-ref name="fired" scoped="" ref="0x7f712616ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f712616d9d0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f712616d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f712616dd50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712616c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712616c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f712616c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712616c4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f712616c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f712616c7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f712616c980"/>
        <function-ref name="overflow" scoped="" ref="0x7f712616cb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f712616cca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f712616ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f712616b120" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f712616b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f712616b4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f712616b630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f712616b7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f712616b950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f712616bae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f712616bc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f712616be00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f712616a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f712616a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f71261600c0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f71261600c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f7126160440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f71261605d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f7126160760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f71261608f0"/>
        <function-ref name="fired" scoped="" ref="0x7f7126160a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f7126163710" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126163710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126163a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7126163c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7126163db0"/>
        <function-ref name="get" scoped="" ref="0x7f7126162020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71261621b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126162340"/>
        <function-ref name="getMode" scoped="" ref="0x7f71261624d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126162660"/>
        <function-ref name="overflow" scoped="" ref="0x7f71261627f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7126162980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7126162b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f71261665b0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f71261665b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126164df0"/>
        <function-ref name="fired" scoped="" ref="0x7f7126165df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f71261647a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71261642e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71261632e0"/>
        <function-ref name="start" scoped="" ref="0x7f7126165420"/>
        <function-ref name="stop" scoped="" ref="0x7f7126165930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126168ca0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126168ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f71261660a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f7126162da0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f7126162da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f7126161180"/>
        <function-ref name="getControl" scoped="" ref="0x7f7126161310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71261614a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f7126161630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71261617c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7126161950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7126161ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f7126161c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f7126161e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f712736a080" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f712736a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127369020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71273699a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71273694e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127369e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f71273610f0" loc="63:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f71273610f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127360020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71273609a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71273604e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127360e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7127365cd0" loc="62:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7127365cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7127364b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7127363550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7127363090"/>
        <function-ref name="overflow" scoped="" ref="0x7f7127363a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f712617c020" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f712617c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f712617a870"/>
        <function-ref name="fired" scoped="" ref="0x7f712617b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f712617a220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f712617bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f712617ad30"/>
        <function-ref name="start" scoped="" ref="0x7f712617ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f712617b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f7126176780" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f7126176780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126173020"/>
        <function-ref name="fired" scoped="" ref="0x7f7126174020"/>
        <function-ref name="startAt" scoped="" ref="0x7f71261749a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f71261744e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f71261734e0"/>
        <function-ref name="start" scoped="" ref="0x7f71261755d0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126175ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f71261793d0" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f71261793d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126178240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126178bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126178700"/>
        <function-ref name="overflow" scoped="" ref="0x7f71261760d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f712733f090" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f712733f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712733f410"/>
        <function-ref name="isInput" scoped="" ref="0x7f712733f5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712733f730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712733f8c0"/>
        <function-ref name="get" scoped="" ref="0x7f712733fa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712733fbe0"/>
        <function-ref name="set" scoped="" ref="0x7f712733fd70"/>
        <function-ref name="clr" scoped="" ref="0x7f712733e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f712733e390" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f712733e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712733e710"/>
        <function-ref name="isInput" scoped="" ref="0x7f712733e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712733ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712733ebc0"/>
        <function-ref name="get" scoped="" ref="0x7f712733ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712733d020"/>
        <function-ref name="set" scoped="" ref="0x7f712733d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f712733d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f712733d6a0" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f712733d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712733da20"/>
        <function-ref name="isInput" scoped="" ref="0x7f712733dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712733dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712733c020"/>
        <function-ref name="get" scoped="" ref="0x7f712733c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712733c340"/>
        <function-ref name="set" scoped="" ref="0x7f712733c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712733c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f7127342e60" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f7127342e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127340210"/>
        <function-ref name="isInput" scoped="" ref="0x7f71273403a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127340530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71273406c0"/>
        <function-ref name="get" scoped="" ref="0x7f7127340850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71273409e0"/>
        <function-ref name="set" scoped="" ref="0x7f7127340b70"/>
        <function-ref name="clr" scoped="" ref="0x7f7127340d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f712733bce0" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f712733bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712733a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712733a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f712733a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712733a550"/>
        <function-ref name="get" scoped="" ref="0x7f712733a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712733a870"/>
        <function-ref name="set" scoped="" ref="0x7f712733aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f712733ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f7127387b20" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f7127387b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127342020"/>
        <function-ref name="isInput" scoped="" ref="0x7f71273421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127342340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71273424d0"/>
        <function-ref name="get" scoped="" ref="0x7f7127342660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71273427f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127342980"/>
        <function-ref name="clr" scoped="" ref="0x7f7127342b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f712733c9b0" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f712733c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712733cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f712733b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f712733b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712733b340"/>
        <function-ref name="get" scoped="" ref="0x7f712733b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712733b660"/>
        <function-ref name="set" scoped="" ref="0x7f712733b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f712733b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f71273372f0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f71273372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127337670"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127337800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127337990"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127337b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127337cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127337e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127336020"/>
        <function-ref name="get" scoped="" ref="0x7f71273361b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127336340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71273364d0"/>
        <function-ref name="set" scoped="" ref="0x7f7127336660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71273367f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127336980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127336c10"/>
        <function-ref name="clr" scoped="" ref="0x7f7127336da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127338020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127338020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71273383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127338530"/>
        <function-ref name="toggle" scoped="" ref="0x7f71273386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127338850"/>
        <function-ref name="get" scoped="" ref="0x7f71273389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127338b70"/>
        <function-ref name="set" scoped="" ref="0x7f7127338d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7127337020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127333de0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127333de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127332180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127332310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71273324a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127332630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71273327c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127332950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127332ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7127332c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127332e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127331020"/>
        <function-ref name="set" scoped="" ref="0x7f71273311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127331340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71273314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127331760"/>
        <function-ref name="clr" scoped="" ref="0x7f71273318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127334b60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127334b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127333020"/>
        <function-ref name="isInput" scoped="" ref="0x7f71273331b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127333340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71273334d0"/>
        <function-ref name="get" scoped="" ref="0x7f7127333660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71273337f0"/>
        <function-ref name="set" scoped="" ref="0x7f7127333980"/>
        <function-ref name="clr" scoped="" ref="0x7f7127333b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f712732e930" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712732e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712732ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712732ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712732d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f712732d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712732d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712732d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712732d660"/>
        <function-ref name="get" scoped="" ref="0x7f712732d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712732d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712732db10"/>
        <function-ref name="set" scoped="" ref="0x7f712732dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712732de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712732c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712732c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f712732c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f712732f710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f712732f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712732fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f712732fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712732fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712732e020"/>
        <function-ref name="get" scoped="" ref="0x7f712732e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712732e340"/>
        <function-ref name="set" scoped="" ref="0x7f712732e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712732e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127328480" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127328480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127328800"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127328990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127328b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127328cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127328e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127327020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71273271b0"/>
        <function-ref name="get" scoped="" ref="0x7f7127327340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71273274d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127327660"/>
        <function-ref name="set" scoped="" ref="0x7f71273277f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127327980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127327b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127327da0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127326020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f712732a1d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f712732a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712732a550"/>
        <function-ref name="isInput" scoped="" ref="0x7f712732a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712732a870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712732aa00"/>
        <function-ref name="get" scoped="" ref="0x7f712732ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712732ad20"/>
        <function-ref name="set" scoped="" ref="0x7f7127328020"/>
        <function-ref name="clr" scoped="" ref="0x7f71273281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7127323020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7127323020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71273233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127323530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71273236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127323850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71273239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127323b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127323d00"/>
        <function-ref name="get" scoped="" ref="0x7f7127322020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71273221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127322340"/>
        <function-ref name="set" scoped="" ref="0x7f71273224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127322660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71273227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127322a80"/>
        <function-ref name="clr" scoped="" ref="0x7f7127322c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127325d70" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127325d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127324180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127324310"/>
        <function-ref name="toggle" scoped="" ref="0x7f71273244a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127324630"/>
        <function-ref name="get" scoped="" ref="0x7f71273247c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127324950"/>
        <function-ref name="set" scoped="" ref="0x7f7127324ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127324c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f712731fde0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712731fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712731e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f712731e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712731e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712731e630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712731e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712731e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712731eae0"/>
        <function-ref name="get" scoped="" ref="0x7f712731ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712731ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712731d020"/>
        <function-ref name="set" scoped="" ref="0x7f712731d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712731d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712731d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712731d760"/>
        <function-ref name="clr" scoped="" ref="0x7f712731d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7127320b60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7127320b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712731f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f712731f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f712731f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712731f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f712731f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712731f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f712731f980"/>
        <function-ref name="clr" scoped="" ref="0x7f712731fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f712731a930" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f712731a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712731acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712731ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127319020"/>
        <function-ref name="toggle" scoped="" ref="0x7f71273191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127319340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71273194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127319660"/>
        <function-ref name="get" scoped="" ref="0x7f71273197f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127319980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127319b10"/>
        <function-ref name="set" scoped="" ref="0x7f7127319ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127319e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127318020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71273182b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127318440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f712731b710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f712731b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712731ba90"/>
        <function-ref name="isInput" scoped="" ref="0x7f712731bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f712731bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712731a020"/>
        <function-ref name="get" scoped="" ref="0x7f712731a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712731a340"/>
        <function-ref name="set" scoped="" ref="0x7f712731a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712731a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f7127305150" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f7127305150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f71273054d0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127305660"/>
        <function-ref name="captured" scoped="" ref="0x7f71273057f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f7127305980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f7127305d60" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f7127305d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127304180"/>
        <function-ref name="disable" scoped="" ref="0x7f7127304310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f71273044a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127304630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f7127304a20" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f7127304a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127304da0"/>
        <function-ref name="disable" scoped="" ref="0x7f7127300020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f71273001b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7127300340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f71272ea8f0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f71272ea8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f71272eac70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f71272eae00"/>
        <function-ref name="captured" scoped="" ref="0x7f71272e9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f71272e91b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f71272e9340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f71272e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f71272fda20" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f71272fda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f71272fdda0"/>
        <function-ref name="disable" scoped="" ref="0x7f71272ec020"/>
        <function-ref name="captured" scoped="" ref="0x7f71272ec1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f71272ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f71272ec5d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f71272ec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f71272ec950"/>
        <function-ref name="getControl" scoped="" ref="0x7f71272ecae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f71272ecc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f71272ece00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f71272ea020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f71272ea1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f71272ea340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f71272ea4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f71272ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f71272e97a0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f71272e97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71272e9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f71272e9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71272e9e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f71272e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71272e81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71272e8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f71272e84d0"/>
        <function-ref name="get" scoped="" ref="0x7f71272e8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f71272e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f71272e8980"/>
        <function-ref name="set" scoped="" ref="0x7f71272e8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71272e8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71272e8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71272e7120"/>
        <function-ref name="clr" scoped="" ref="0x7f71272e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f71272e3480" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f71272e3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71272e3800"/>
        <function-ref name="fired" scoped="" ref="0x7f71272e3990"/>
        <function-ref name="disable" scoped="" ref="0x7f71272e3b20"/>
        <function-ref name="edge" scoped="" ref="0x7f71272e3cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f71272e3e40"/>
        <function-ref name="getValue" scoped="" ref="0x7f71272e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f71272e48a0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f71272e48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71272e4c20"/>
        <function-ref name="disable" scoped="" ref="0x7f71272e4db0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f71272e3020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f71272e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f71272de480" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f71272de480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71272de800"/>
        <function-ref name="fired" scoped="" ref="0x7f71272de990"/>
        <function-ref name="disable" scoped="" ref="0x7f71272deb20"/>
        <function-ref name="edge" scoped="" ref="0x7f71272decb0"/>
        <function-ref name="enable" scoped="" ref="0x7f71272dee40"/>
        <function-ref name="getValue" scoped="" ref="0x7f71272dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f71272df8b0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f71272df8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71272dfc30"/>
        <function-ref name="disable" scoped="" ref="0x7f71272dfdc0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f71272de020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f71272de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f7126f85e50" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f85e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f84410"/>
        <function-ref name="write" scoped="" ref="0x7f7126f845a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f7126f8f160" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f7126f8f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f7126f89e50" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f88210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f7126f83880" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f83880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f83c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f83d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f7126f7b0a0" loc="86:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f7126f7b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7b420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f7126f820a0" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f7126f820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f82420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f825b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f7126f6f500" loc="108:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f6f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f6f880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f6fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f7126f72500" loc="104:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126f72500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f72880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f72a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f7126f8e490" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f8e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f7126f77880" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f7126f77880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f77c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f77d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f7126f73500" loc="102:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f73500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f73880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f73a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f7126f88e50" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f7126f88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f87210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f7126f87e50" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f87e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f85210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f7126f7d880" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f7d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7dc00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f7126f7f0a0" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f7126f7f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7f420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f7126f82880" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f82880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f82c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f82d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7126f91a90" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f91a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126f91e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126f90020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126f901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f7126f8de00" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f8de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f7126f8b490" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126f8b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f7126f76c80" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f76c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f750a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f75230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f7126f8bbe0" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f8bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f7126f73ce0" loc="103:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f73ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f720a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f72230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f7126f8d160" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f8d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f7126f770a0" loc="92:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f7126f770a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f77420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f775b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f7126f87670" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f879f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f87b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f7126f88670" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f889f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f7126f90ad0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f90e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f7126f790a0" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f79420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f795b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f7126f7b880" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f7126f7b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7bc00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f7126f79880" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f79880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f79c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f79d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f7126f70ce0" loc="107:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f70ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f6f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f6f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f7126f72ce0" loc="105:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126f72ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f700a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f70230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f7126f7f880" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f7126f7f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7fc00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f7126f7a0a0" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f7126f7a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7a420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f7126f74ce0" loc="101:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f74ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f730a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f73230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f7126f81880" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f81880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f81c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f81d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f7126f6fce0" loc="111:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f6fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f6e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f6e230"/>
        <function-ref name="write" scoped="" ref="0x7f7126f6e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f6e550"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f6e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f7126f90480" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126f90480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f90800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f7126f89670" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f7126f89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f899f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f7126f85670" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f85670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f859f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f85b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f7126f7c0a0" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f7c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7c420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f7126f810a0" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f81420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f815b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f7126f7c880" loc="85:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f7c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7cc00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f7126f84870" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f84870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f84bf0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f84d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f7126f8f7b0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f7126f8f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f7126f830a0" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f83420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f835b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126f92e20" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126f92e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126f911c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126f91350"/>
        <function-ref name="request" scoped="" ref="0x7f7126f914e0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126f91670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126f91800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f7126f8a2f0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f7126f89020" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f7126f89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f7126f74500" loc="100:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f7126f74500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f74880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f74a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f7126f75ce0" loc="99:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f75ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f740a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f74230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f7126f8d7b0" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f8d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f7126f75500" loc="96:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f75500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f75880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f75a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f7126f70500" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f7126f70500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f70880"/>
        <function-ref name="write" scoped="" ref="0x7f7126f70a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f7126f7d0a0" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f7d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7d420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f7126f7a880" loc="89:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f7126f7a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f7ac00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f7ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f7126f8fe00" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126f8fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f7126f8eae0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f8eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f7126f800a0" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f80420"/>
        <function-ref name="write" scoped="" ref="0x7f7126f805b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f7126f8a940" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126f8a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f8acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f7126f80880" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f7126f80880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f80c00"/>
        <function-ref name="write" scoped="" ref="0x7f7126f80d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f7126f760a0" loc="94:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f7126f760a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f76820"/>
        <function-ref name="write" scoped="" ref="0x7f7126f769b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f7126f6e9b0" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f6e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f6ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f6d020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f6d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f6d340"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f712729c630" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f712729c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f712729c9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f712729cb40"/>
        <function-ref name="write" scoped="" ref="0x7f712729ccd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f712729ce60"/>
        <function-ref name="readDone" scoped="" ref="0x7f712729b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f712729e680" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f712729e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f712729ea00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f712729eb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f712729ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f712729b8c0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f712729b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712729bc40"/>
        <function-ref name="write" scoped="" ref="0x7f712729bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f712729a6f0" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f712729a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f712729aa70"/>
        <function-ref name="write" scoped="" ref="0x7f712729ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71272a1960" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71272a1960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71272a1ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71272a1e70"/>
        <function-ref name="request" scoped="" ref="0x7f712729e030"/>
        <function-ref name="granted" scoped="" ref="0x7f712729e1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712729e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f7127299510" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f7127299510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7127299890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f7127283680" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f7127283680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7127283a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7127283b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f7127293bb0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f7127293bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7127292020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f71272921b0"/>
        <function-ref name="write" scoped="" ref="0x7f7127292340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f71272924d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f7127292660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7127297930" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7127297930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7127297cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7127297e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7127294020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f712728c080" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f712728c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f712728c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f712728b020" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f712728b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f712728b3a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f712728b530"/>
        <function-ref name="isState" scoped="" ref="0x7f712728b6c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f712728b850"/>
        <function-ref name="requestState" scoped="" ref="0x7f712728b9e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f712728bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f712728e400" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f712728e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712728e780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712728e910"/>
        <function-ref name="request" scoped="" ref="0x7f712728eaa0"/>
        <function-ref name="granted" scoped="" ref="0x7f712728ec30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712728edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f7127291020" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f7127291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f71272913a0"/>
        <function-ref name="write" scoped="" ref="0x7f7127291530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f7127291db0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f7127291db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7127290180"/>
        <function-ref name="write" scoped="" ref="0x7f7127290310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f712728bdf0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f712728bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f71272841c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7127284350"/>
        <function-ref name="led1On" scoped="" ref="0x7f71272844e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7127284670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7127284800"/>
        <function-ref name="get" scoped="" ref="0x7f7127284990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7127284b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f71272821b0"/>
        <function-ref name="set" scoped="" ref="0x7f7127284cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f7127284e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f7127282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127294810" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127294810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127294b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127294d20"/>
        <function-ref name="request" scoped="" ref="0x7f7127293020"/>
        <function-ref name="granted" scoped="" ref="0x7f71272931b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127293340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f712727e120" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f712727e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f712727e4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f712727e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f7127290ba0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f7127290ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f712728e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f7127223770" loc="67:/home/ly/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f7127223770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7127223af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7127223c80"/>
        <function-ref name="isState" scoped="" ref="0x7f7127223e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7127220020"/>
        <function-ref name="requestState" scoped="" ref="0x7f71272201b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f7127220340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f712721f280" loc="66:/home/ly/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f712721f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f712721f600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f712721f790"/>
        <function-ref name="isState" scoped="" ref="0x7f712721f920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f712721fab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f712721fc40"/>
        <function-ref name="forceState" scoped="" ref="0x7f712721fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f712721b020" loc="66:/home/ly/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f712721b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f712721b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f712721bb70" loc="67:/home/ly/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f712721bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f712721a020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f712721a1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f712721a340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f712721a4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f712721a660"/>
        <function-ref name="forceState" scoped="" ref="0x7f712721a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f7126fb8020" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f7126fb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126fb83a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126fb8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f71271ff8f0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f71271ff8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f71271ffc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127200c40" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127200c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71271ff020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71271ff1b0"/>
        <function-ref name="request" scoped="" ref="0x7f71271ff340"/>
        <function-ref name="granted" scoped="" ref="0x7f71271ff4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71271ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7126072440" loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126072440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f71260727c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7126072950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f7126071d70" loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f7126071d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126070180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126070310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f71260705a0" loc="89:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f71260705a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f7126070920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f7126072be0" loc="83:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f7126072be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f7126071020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126073770" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126073770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126073af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126073c80"/>
        <function-ref name="request" scoped="" ref="0x7f7126073e10"/>
        <function-ref name="granted" scoped="" ref="0x7f7126072020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71260721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f71260712b0" loc="85:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f71260712b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f7126071630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f71260717c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f7126071950"/>
        <function-ref name="write" scoped="" ref="0x7f7126071ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f71271ec6b0" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71271ec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f71271eca30"/>
        <function-ref name="configure" scoped="" ref="0x7f71271ecbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f71271ea850" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f71271ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71271eabd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71271ead60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f71271e8a40" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f71271e8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f71271e8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f71271eb020" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f71271eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f71271eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f71271e9690" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f71271e9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71271e9a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71271e9ba0"/>
        <function-ref name="request" scoped="" ref="0x7f71271e9d30"/>
        <function-ref name="granted" scoped="" ref="0x7f71271e8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71271e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f71271ee430" loc="73:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f71271ee430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71271ee7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71271ee940"/>
        <function-ref name="request" scoped="" ref="0x7f71271eead0"/>
        <function-ref name="granted" scoped="" ref="0x7f71271eec60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71271eedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f71271eb6a0" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f71271eb6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f71271eba20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f71271ebbb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f71271ebd40"/>
        <function-ref name="write" scoped="" ref="0x7f71271ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f71271e62a0" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f71271e62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f71271e6620"/>
        <function-ref name="txDone" scoped="" ref="0x7f71271e67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f712718e250" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712718e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712718e5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f712718e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f712718dc50" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f712718dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f712718c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f712718c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f712718b3e0" loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f712718b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f712718b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f712718ea10" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f712718ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f712718ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f712718ba50" loc="83:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f712718ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f712718bdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f712718a020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f712718a1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f712718a340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f712718a4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f712718a660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f712718a7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f712718a980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f712718ab10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f712718aca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f712718ae30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f7127189020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f71271891b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f7127189440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f71271895d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f7127189760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f71271898f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f7127189a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7127189c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f7127189da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f7127188020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f71271881b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f7127188340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f71271884d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7127188660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f71271889f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7127188b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f7127188d10"/>
        <function-ref name="tx" scoped="" ref="0x7f7127187020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f71271871b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f7127187340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f71271874d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7127187660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f71271877f0"/>
        <function-ref name="rx" scoped="" ref="0x7f7127187980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7127187b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f7127187ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f7127187e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f7127186020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f71271861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7127186c20" loc="85:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7127186c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7127185020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f71271851b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f7127185340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f71271854d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7127185660"/>
        <function-ref name="get" scoped="" ref="0x7f71271857f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7127185980"/>
        <function-ref name="led2On" scoped="" ref="0x7f7127184020"/>
        <function-ref name="set" scoped="" ref="0x7f7127185ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7127185b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f7127185e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f712718c5b0" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f712718c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712718c950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712718cae0"/>
        <function-ref name="request" scoped="" ref="0x7f712718cc70"/>
        <function-ref name="granted" scoped="" ref="0x7f712718ce00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712718b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127190470" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127190470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127190810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f71271909a0"/>
        <function-ref name="request" scoped="" ref="0x7f7127190b30"/>
        <function-ref name="granted" scoped="" ref="0x7f7127190cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7127190e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f712718d060" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f712718d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f712718d3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f712718d570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f712718d700"/>
        <function-ref name="write" scoped="" ref="0x7f712718d890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f7127186480" loc="84:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f7127186480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127186800"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127186990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f71271842f0" loc="102:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f71271842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7127184670"/>
        <function-ref name="runTask" scoped="" ref="0x7f7127184800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f71271775e0" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f71271775e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127177960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f7127178d10" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7127178d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f71271770e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127177270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f712717c020" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f712717c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f712717c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f712717c530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f712717c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f712717c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f712717c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f712717cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f712717cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f712717b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f712717b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f712717b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f712717b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f712717b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f712717b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f712717ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f712717bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f712717bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f712717a020"/>
        <function-ref name="isUart" scoped="" ref="0x7f712717a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f712717a340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f712717a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f712717a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f712717a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f712717a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f712717ab10"/>
        <function-ref name="getMode" scoped="" ref="0x7f712717aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7127179220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f71271793b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f7127179540"/>
        <function-ref name="tx" scoped="" ref="0x7f71271796d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f7127179860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f71271799f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7127179b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7127179d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f7127178020"/>
        <function-ref name="rx" scoped="" ref="0x7f71271781b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7127178340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f71271784d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f7127178660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f71271787f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f7127178980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f712713cb20" loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f712713cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712713b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f712713b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712713b340"/>
        <function-ref name="toggle" scoped="" ref="0x7f712713b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712713b660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712713b7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712713b980"/>
        <function-ref name="get" scoped="" ref="0x7f712713bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712713bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712713be30"/>
        <function-ref name="set" scoped="" ref="0x7f712713a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712713a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712713a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712713a5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712713a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f712716e780" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f712716e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f712716eb00"/>
        <function-ref name="txDone" scoped="" ref="0x7f712716ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f712713ab20" loc="83:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f712713ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127139020"/>
        <function-ref name="isInput" scoped="" ref="0x7f71271391b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127139340"/>
        <function-ref name="toggle" scoped="" ref="0x7f71271394d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127139660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71271397f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127139980"/>
        <function-ref name="get" scoped="" ref="0x7f7127139b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127139ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127139e30"/>
        <function-ref name="set" scoped="" ref="0x7f7127138020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71271381b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127138340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71271385d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127138760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f7127138b20" loc="84:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f7127138b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7127137020"/>
        <function-ref name="isInput" scoped="" ref="0x7f71271371b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7127137340"/>
        <function-ref name="toggle" scoped="" ref="0x7f71271374d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7127137660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f71271377f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127137980"/>
        <function-ref name="get" scoped="" ref="0x7f7127137b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127137ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127137e30"/>
        <function-ref name="set" scoped="" ref="0x7f7127136020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f71271361b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7127136340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f71271365d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7127136760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f7127175c70" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f7127175c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f7127172020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f71271721b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7127172340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f71271724d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7127172660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f71271727f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7127172980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7127172b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7127172ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7127172e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f7127171020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f71271711b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f7127171340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f71271715d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f7127171760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f71271718f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7127171a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f7127171c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7127171da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f7127170020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f71271701b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f7127170340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f71271704d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f7127170660"/>
        <function-ref name="getMode" scoped="" ref="0x7f71271707f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7127170b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7127170d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f712716f020"/>
        <function-ref name="tx" scoped="" ref="0x7f712716f1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f712716f340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f712716f4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f712716f660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f712716f7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f712716f980"/>
        <function-ref name="rx" scoped="" ref="0x7f712716fb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f712716fca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f712716fe30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f712716e020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f712716e1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f712716e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f7127145d10" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f7127145d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f712716c0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f712716c270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f712716c400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f712716c590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f712716c720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f712716c8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f712716ca40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f712716cbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f712716cd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f712716b020"/>
        <function-ref name="getData" scoped="" ref="0x7f712716b1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f712716b340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f712716b4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f712716b760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f712716b8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f712716ba80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f712716bc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f712716bda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f7127144020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f71271441b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f7127144340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f71271444d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f7127144660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f71271447f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f7127144980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f7127144d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f7127143020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f71271431b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f7127143340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f71271434d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f7127143660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f71271437f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f7127143980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f7127143b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f7127143ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f7127143e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f7127142020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f71271421b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f7127142340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f71271424d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f7127142660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f71271427f0"/>
        <function-ref name="setData" scoped="" ref="0x7f7127142980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f7127142b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f7127142ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f7127142e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f7127141020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f71271411b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f7127141340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f71271418d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f7127141a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f7127141bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f7127141d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f7127140020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f71271401b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f7127140340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f71271404d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f7127140660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f71271407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f712713eb20" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f712713eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712713d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f712713d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712713d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f712713d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712713d660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712713d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712713d980"/>
        <function-ref name="get" scoped="" ref="0x7f712713db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712713dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712713de30"/>
        <function-ref name="set" scoped="" ref="0x7f712713c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712713c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712713c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712713c5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712713c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f712716d150" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f712716d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712716d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f7127140bb0" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f7127140bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712713f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f712713f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712713f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f712713f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712713f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712713f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712713f980"/>
        <function-ref name="get" scoped="" ref="0x7f712713fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712713fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f712713fe30"/>
        <function-ref name="set" scoped="" ref="0x7f712713e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f712713e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f712713e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f712713e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f712713e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7126068d90" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7126068d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7126067180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7126067310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f7126061020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f7126061020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f71260613a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f712605a5d0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712605a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712605a950"/>
        <function-ref name="configure" scoped="" ref="0x7f712605aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f7126061630" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f7126061630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f71260619b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f7126061b40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f7126061cd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f7126061e60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f7126060020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f71260601b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f7126060340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f71260604d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7126060660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f71260607f0"/>
        <function-ref name="getData" scoped="" ref="0x7f7126060980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f7126060b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f7126060ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f712605f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f712605f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f712605f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f712605f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f712605f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f712605f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f712605f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f712605fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f712605fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f712605fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f712605e020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f712605e1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f712605e540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f712605e6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f712605e860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f712605e9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f712605eb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f712605ed10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f712605d020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f712605d1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f712605d340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f712605d4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f712605d660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f712605d7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f712605d980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f712605db10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f712605dca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f712605de30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f712605c020"/>
        <function-ref name="setData" scoped="" ref="0x7f712605c1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f712605c340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f712605c4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f712605c660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f712605c7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f712605c980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f712605cb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f712605b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f712605b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f712605b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f712605b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f712605ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f712605bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f712605bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f712605a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f712605a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f712605a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f7126062760" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f7126062760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7126062ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7126062c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126068140" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126068140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71260684c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126068650"/>
        <function-ref name="request" scoped="" ref="0x7f71260687e0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126068970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126068b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f7126067d40" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f7126067d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f71260660e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f7126066270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f7126066400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f7126066590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f7126066720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f71260668b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f7126066a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f7126066bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f7126066d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f7126065020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f71260651b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f7126065340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f71260654d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f7126065760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f71260658f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f7126065a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f7126065c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f7126065da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f7126064020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f71260641b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f7126064340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f71260644d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f7126064660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f71260647f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7126064980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f7126064d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f7126063020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f71260631b0"/>
        <function-ref name="tx" scoped="" ref="0x7f7126063340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f71260634d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f7126063660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f71260637f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f7126063980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f7126063b10"/>
        <function-ref name="rx" scoped="" ref="0x7f7126063ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f7126063e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f7126062020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f71260621b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f7126062340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f71260624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f71260675a0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f71260675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7126067920"/>
        <function-ref name="userId" scoped="" ref="0x7f7126067ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f71270982c0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f71270982c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7127098640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f71270987d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f71270978a0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f71270978a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7127097c20"/>
        <function-ref name="configure" scoped="" ref="0x7f7127097db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f712709b4d0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f712709b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f712709b850"/>
        <function-ref name="txDone" scoped="" ref="0x7f712709b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127099020" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127099020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f71270993a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7127099530"/>
        <function-ref name="request" scoped="" ref="0x7f71270996c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7127099850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f71270999e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f712709a3f0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f712709a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f712709a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7127098ad0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127098ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127098e50"/>
        <function-ref name="userId" scoped="" ref="0x7f7127097020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7127093e50" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7127093e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7127092210"/>
        <function-ref name="userId" scoped="" ref="0x7f71270923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f7127094060" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f7127094060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f7127094400"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127094590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f7127093840" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f7127093840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127093bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f7127094990" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f7127094990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7127094d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f7127093060" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f7127093060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f71270933e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f7127093570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f712708f850" loc="92:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f712708f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f712708fbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f712708fd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f712708c570" loc="96:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f712708c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f712708c910"/>
        <function-ref name="configure" scoped="" ref="0x7f712708caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f712708e020" loc="93:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f712708e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f712708e3a0"/>
        <function-ref name="requested" scoped="" ref="0x7f712708e530"/>
        <function-ref name="granted" scoped="" ref="0x7f712708e6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712708e850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f712708e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7127090a80" loc="91:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7127090a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7127090e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f712708f020"/>
        <function-ref name="request" scoped="" ref="0x7f712708f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f712708f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f712708f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f712708ec30" loc="94:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f712708ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f712708c020"/>
        <function-ref name="userId" scoped="" ref="0x7f712708c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7125ff4020" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7125ff4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7125ff43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f7125ff4630" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f7125ff4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7125ff49b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7125ff4b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7125ff4cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7125ff4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7125ff16c0" loc="55:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7125ff16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7125ff1a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7125ff1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7125fef400" loc="60:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7125fef400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7125fef7a0"/>
        <function-ref name="configure" scoped="" ref="0x7f7125fef930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7125fefbc0" loc="61:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f7125fefbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7125fed020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7125fed1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7125fed340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7125fed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7125ff1e40" loc="56:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7125ff1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7125ff01e0"/>
        <function-ref name="requested" scoped="" ref="0x7f7125ff0370"/>
        <function-ref name="granted" scoped="" ref="0x7f7125ff0500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7125ff0690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7125ff0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7125fed720" loc="62:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7125fed720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7125fedaa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7125fedc30"/>
        <function-ref name="led1On" scoped="" ref="0x7f7125feddc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7125fec020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7125fec1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7125fec340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7125fec4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f7125fecb10"/>
        <function-ref name="set" scoped="" ref="0x7f7125fec7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7125fec660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7125fec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7125ff2850" loc="54:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7125ff2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7125ff2bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7125ff2d80"/>
        <function-ref name="request" scoped="" ref="0x7f7125ff1020"/>
        <function-ref name="granted" scoped="" ref="0x7f7125ff11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7125ff1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7125ff0a70" loc="57:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7125ff0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7125ff0df0"/>
        <function-ref name="userId" scoped="" ref="0x7f7125fef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f7125fecde0" loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f7125fecde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7125feb180"/>
        <function-ref name="runTask" scoped="" ref="0x7f7125feb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f7127083540" loc="4:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f7127083540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f71270838c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f7127083a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f7127083be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f7127083d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f7127080020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f71270801b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f7127080340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f71270804d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7127080660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f71270807f0"/>
        <function-ref name="getData" scoped="" ref="0x7f7127080980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f7127080b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f7127080ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f712707f020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f712707f1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f712707f340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f712707f4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f712707f660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f712707f7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f712707f980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f712707fb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f712707fca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f712707fe30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f712707e020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f712707e1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f712707e540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f712707e6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f712707e860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f712707e9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f712707eb80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f712707ed10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f712707d020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f712707d1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f712707d340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f712707d4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f712707d660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f712707d7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f712707d980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f712707db10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f712707dca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f712707de30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f712707c020"/>
        <function-ref name="setData" scoped="" ref="0x7f712707c1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f712707c340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f712707c4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f712707c660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f712707c7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f712707c980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f712707cb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f712707b420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f712707b5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f712707b740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f712707b8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f712707ba60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f712707bbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f712707bd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f712707a020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f712707a1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f712707a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f712706f250" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f712706f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f712706f5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f712706f760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f712706f8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f712706fa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f712706fc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f712706fda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f712706e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f712706e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f712706e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f712706e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f712706e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f712706e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f712706e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f712706ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f712706eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f712706d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f712706d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f712706d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f712706d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f712706d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f712706d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f712706d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f712706db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f712706dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f712706de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f712706c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f712706c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f712706c540"/>
        <function-ref name="tx" scoped="" ref="0x7f712706c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f712706c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f712706c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f712706cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f712706cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f712706b020"/>
        <function-ref name="rx" scoped="" ref="0x7f712706b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f712706b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f712706b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f712706b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f712706b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f712706b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f7127069cb0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f7127069cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f71270680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7127068230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f71270683c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7127068550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f71270686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7127068870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7127068a00"/>
        <function-ref name="get" scoped="" ref="0x7f7127068b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7127068d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127067020"/>
        <function-ref name="set" scoped="" ref="0x7f71270671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127067340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71270674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127067760"/>
        <function-ref name="clr" scoped="" ref="0x7f71270678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f7127076430" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f7127076430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f71270767b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f7127076940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f7127076ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f7127076c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f7127076df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f7127075020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f71270751b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f7127075340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f71270754d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f7127075660"/>
        <function-ref name="getData" scoped="" ref="0x7f71270757f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f7127075980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f7127075b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f7127075da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f7127074020"/>
        <function-ref name="getIV" scoped="" ref="0x7f71270741b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f7127074340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f71270744d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f7127074660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f71270747f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f7127074980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f7127074b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f7127074ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f7127074e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f7127073020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f71270733b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f7127073540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f71270736d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f7127073860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f71270739f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f7127073b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f7127073d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f7127072020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f71270721b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f7127072340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f71270724d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f7127072660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f71270727f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f7127072980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f7127072b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f7127072ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f7127072e30"/>
        <function-ref name="setData" scoped="" ref="0x7f7127071020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f71270711b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f7127071340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f71270714d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f7127071660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f71270717f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f7127071980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f7127070020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f71270701b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f7127070340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f71270704d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f7127070660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f71270707f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f7127070980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f7127070b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f7127070ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f7127070e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f712706bd40" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f712706bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f712706a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f712706a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f712706a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f712706a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f712706a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f712706a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f712706aa40"/>
        <function-ref name="get" scoped="" ref="0x7f712706abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f712706ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7127069020"/>
        <function-ref name="set" scoped="" ref="0x7f71270691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7127069340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f71270694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7127069760"/>
        <function-ref name="clr" scoped="" ref="0x7f71270698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f7126f53c60" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f53c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f52210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f7126f60da0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f7126f60da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f7126f56b50" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f56b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f55020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f7126f51670" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f519f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f51b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f7126f4ae50" loc="86:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f7126f4ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f48210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f7126f51e50" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f7126f51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4f210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f7126f3d2f0" loc="108:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f3d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f3d670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f7126f3f2f0" loc="104:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126f3f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f3f670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f7126f5d120" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f5d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f7126f45670" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f7126f45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f459f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f7126f402f0" loc="102:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f40670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f7126f55c60" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f7126f55c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f54020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f7126f54c60" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f54c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f53020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f7126f4b670" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f7126f4de50" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f7126f4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4c210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f7126f4f670" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7126f61760" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f61760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126f61ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126f61c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126f61e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f7126f5aaa0" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f5aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f7126f59120" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126f59120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f595a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f7126f44a70" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f44a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f44df0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f7126f59870" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f59870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f59bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f7126f40ad0" loc="103:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f40ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f40e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f7126f5ddc0" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f5ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f7126f46e50" loc="92:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f7126f46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f45210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f7126f54480" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f54800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f54990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f7126f55480" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f55480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f55800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f7126f60750" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f60750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f60ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f7126f47e50" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f46210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f7126f48670" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f7126f48670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f489f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f48b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f7126f46670" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f469f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f7126f3ead0" loc="107:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f3ee50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f7126f3fad0" loc="105:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126f3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f3fe50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f7126f4c670" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f7126f4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f7126f48e50" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f7126f48e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f47210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f7126f41ad0" loc="101:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f41ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f41e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f7126f4e670" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f7126f3dad0" loc="111:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f3dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f3de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f3c020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f3c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f7126f60100" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126f60100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f60480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f7126f56370" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f7126f56370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f566f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f56880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f7126f53480" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f53800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f53990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f7126f4be50" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4a210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f7126f4fe50" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f4fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4e210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f7126f4a670" loc="85:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f7126f52670" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f529f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f7126f5f450" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f7126f5f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f7126f52e50" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f51210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126f62a80" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126f62a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126f62e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126f61020"/>
        <function-ref name="request" scoped="" ref="0x7f7126f611b0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126f61340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126f614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f7126f58020" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f7126f58cc0" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f7126f58cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f560a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f7126f412f0" loc="100:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f7126f412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f41670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f41800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f7126f43ad0" loc="99:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f43ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f43e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f7126f5a450" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f5a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f7126f432f0" loc="96:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f43670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f43800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f7126f3e2f0" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f7126f3e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f3e670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f7126f4ce50" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4b210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f7126f47670" loc="89:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f7126f47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f479f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f7126f5faa0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126f5faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f7126f5d770" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f5d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f5daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f7126f4ee50" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4d210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f7126f58670" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126f58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f589f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f7126f4d670" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f7126f4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f4d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f7126f45e50" loc="94:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f7126f45e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f44610"/>
        <function-ref name="write" scoped="" ref="0x7f7126f447a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f7126f3c7a0" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f3c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f3cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f3ccb0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f3ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f3a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f7126f26c60" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126f26c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f25210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f7126f31da0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f7126f31da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f30180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f7126f2ab50" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126f2ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f29020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f7126f24670" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126f24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f249f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f24b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f7126f1de50" loc="86:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f7126f1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1c210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f7126f24e50" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f7126f24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f23210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f7126f102f0" loc="108:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126f102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f10670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f10800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f7126f132f0" loc="104:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126f132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f13670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f13800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f7126f2f120" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126f2f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f7126f18670" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f7126f18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f189f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f7126f142f0" loc="102:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126f142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f14670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f14800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f7126f29c60" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f7126f29c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f28020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f7126f28c60" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126f28c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f26020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f7126f1e670" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f7126f1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f7126f21e50" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f7126f21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1f210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f7126f23670" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7126f23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f239f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7126f32760" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126f32760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126f32ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126f32c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126f32e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f7126f2eaa0" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126f2eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f7126f2c120" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126f2c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f7126f17a70" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126f17a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f17df0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f7126f2c870" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f7126f2c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f7126f14ad0" loc="103:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126f14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f14e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f7126f2fdc0" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126f2fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f7126f1ae50" loc="92:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f7126f1ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f18210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f7126f28480" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126f28480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f28800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f28990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f7126f29480" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126f29480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f29800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f29990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f7126f31750" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f7126f31750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f31ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f7126f1be50" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126f1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1a210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f7126f1c670" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f7126f1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f7126f1a670" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126f1a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f7126f11ad0" loc="107:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126f11ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f11e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f7126f13ad0" loc="105:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126f13ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f13e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f7126f1f670" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f7126f1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f7126f1ce50" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f7126f1ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1b210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f7126f15ad0" loc="101:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f7126f15ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f15e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f7126f22670" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f7126f22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f229f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f7126f10ad0" loc="111:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126f10ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f10e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f0f020"/>
        <function-ref name="write" scoped="" ref="0x7f7126f0f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f0f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f7126f31100" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126f31100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f31480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f7126f2a370" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f7126f2a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f2a6f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f2a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f7126f26480" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126f26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f26800"/>
        <function-ref name="write" scoped="" ref="0x7f7126f26990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f7126f1ee50" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f7126f1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1d210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f7126f23e50" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7126f23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f22210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f7126f1d670" loc="85:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f7126f1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f7126f25670" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7126f25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f259f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f7126f30450" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f7126f30450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f307d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f7126f25e50" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126f25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f24210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126f339e0" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126f339e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126f33d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126f32020"/>
        <function-ref name="request" scoped="" ref="0x7f7126f321b0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126f32340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126f324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f7126f2b020" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126f2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f7126f2bcc0" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f7126f2bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f7126f152f0" loc="100:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f7126f152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f15670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f15800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f7126f16ad0" loc="99:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7126f16ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f16e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126f15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f7126f2e450" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126f2e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f7126f162f0" loc="96:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126f162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f16670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f16800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f7126f112f0" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f7126f112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f11670"/>
        <function-ref name="write" scoped="" ref="0x7f7126f11800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f7126f1fe50" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126f1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1e210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f7126f1b670" loc="89:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f7126f1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f7126f30aa0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126f30aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f30e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f7126f2f770" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f7126f2f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f7126f22e50" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f7126f22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f21210"/>
        <function-ref name="write" scoped="" ref="0x7f7126f213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f7126f2b670" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126f2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126f2b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f7126f21670" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f7126f21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f219f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f7126f18e50" loc="94:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f7126f18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126f17610"/>
        <function-ref name="write" scoped="" ref="0x7f7126f177a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f7126f0f7a0" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126f0f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126f0fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126f0fcb0"/>
        <function-ref name="write" scoped="" ref="0x7f7126f0fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126f0e020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f7126f07b30" loc="54:/home/ly/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f7126f07b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f7126f04020"/>
        <function-ref name="changed" scoped="" ref="0x7f7126f041b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f7126f04340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f7126f044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f7126f06d30" loc="13:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f7126f06d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f7126ef00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f7126eec310" loc="5:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f7126eec310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f7126eec690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f7126ee88c0" loc="8:/home/ly/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f7126ee88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ee8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f7126ede020" loc="8:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f7126ede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ede3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f7126ed4cb0" loc="14:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f7126ed4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ed70a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126ed7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f7126ed75b0" loc="15:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f7126ed75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126ed7930"/>
        <function-ref name="stop" scoped="" ref="0x7f7126ed7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f7126ed8210" loc="11:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f7126ed8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ed8590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f7126ec3020" loc="8:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f7126ec3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ec33a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126ec3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f7126ec38c0" loc="11:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f7126ec38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126ec3c40"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126ec3dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126ec2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126ec21b0"/>
        <function-ref name="get" scoped="" ref="0x7f7126ec2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126ec24d0"/>
        <function-ref name="set" scoped="" ref="0x7f7126ec2660"/>
        <function-ref name="clr" scoped="" ref="0x7f7126ec27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f7126ebab40" loc="15:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f7126ebab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7126ebc970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f7126ec1490" loc="11:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f7126ec1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126ec1810"/>
        <function-ref name="write" scoped="" ref="0x7f7126ec19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f7126ec1d30" loc="14:/home/ly/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f7126ec1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126ebe0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126ebe270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126ebe400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126ebe590"/>
        <function-ref name="get" scoped="" ref="0x7f7126ebe720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126ebe8b0"/>
        <function-ref name="set" scoped="" ref="0x7f7126ebea40"/>
        <function-ref name="clr" scoped="" ref="0x7f7126ebebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f7126e9a020" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f7126e9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7126e9ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f7126e97d20" loc="54:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f7126e97d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7126e96b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7126e87260" loc="55:/home/ly/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7126e87260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126e86090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126e86a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126e86550"/>
        <function-ref name="overflow" scoped="" ref="0x7f7126e85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f7126e84890" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f7126e84890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126e806e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126e7f090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126e80ba0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7126e7f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f7126e7a190" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f7126e7a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126e7a510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f7126e7a6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f7126e7a830"/>
        <function-ref name="get" scoped="" ref="0x7f7126e7a9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f7126e7ab50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126e7ace0"/>
        <function-ref name="getMode" scoped="" ref="0x7f7126e7ae70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126e79030"/>
        <function-ref name="overflow" scoped="" ref="0x7f7126e791c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f7126e79350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f7126e794e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7126e7d060" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7126e7d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859ea20"/>
            <typename><typedef-ref name="TMicro" ref="0x7f712859ed90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126e7de70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126e7c820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126e7c360"/>
        <function-ref name="overflow" scoped="" ref="0x7f7126e7cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f7126ec45a0" loc="3:/home/ly/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f7126ec45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126ec4920"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126ec4ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126ec4c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126ec4dd0"/>
        <function-ref name="get" scoped="" ref="0x7f7126e75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e751b0"/>
        <function-ref name="set" scoped="" ref="0x7f7126e75340"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f7126e73c50" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f7126e73c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126e72020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126e721b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f7126e72340"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126e724d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126e72660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f7126e727f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e72980"/>
        <function-ref name="get" scoped="" ref="0x7f7126e72b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f7126e72ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f7126e72e30"/>
        <function-ref name="set" scoped="" ref="0x7f7126e71020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f7126e711b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f7126e71340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f7126e715d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e71760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f7126e749e0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f7126e749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126e74d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126e73020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126e731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126e73340"/>
        <function-ref name="get" scoped="" ref="0x7f7126e734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e73660"/>
        <function-ref name="set" scoped="" ref="0x7f7126e737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7126e76a20" loc="14:/home/ly/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7126e76a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126e76da0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126e6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f7126e5dcb0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126e5dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f7126e5c0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f7126e5c230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f7126e5c3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f7126e5c550"/>
        <function-ref name="setCca" scoped="" ref="0x7f7126e5c6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f7126e5c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f7126e599f0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f7126e599f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126e59d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f7126e5d020" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f7126e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126e5d3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126e5d530"/>
        <function-ref name="modify" scoped="" ref="0x7f7126e5d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126e5d850"/>
        <function-ref name="resend" scoped="" ref="0x7f7126e5d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7126e606d0" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7126e606d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126e60a50"/>
        <function-ref name="stop" scoped="" ref="0x7f7126e60be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f7126e5b190" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f7126e5b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126e5b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f7126e4e970" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126e4e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f7126e4ecf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f7126e4ee80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f7126e4d030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f7126e4d1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f7126e4d350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f7126e4d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f7126e46950" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7126e46950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126e43020"/>
        <function-ref name="clear" scoped="" ref="0x7f7126e43750"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126e44780"/>
        <function-ref name="set" scoped="" ref="0x7f7126e43e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f7126e2e020" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126e2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e2e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126e2e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f7126e2e890" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126e2e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e2ec10"/>
        <function-ref name="write" scoped="" ref="0x7f7126e2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f7126e4d900" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f7126e4d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126e4dc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f7126e31530" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126e31530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126e318b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f7126e40880" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f7126e40880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f7126e40c00"/>
        <function-ref name="disable" scoped="" ref="0x7f7126e40d90"/>
        <function-ref name="captured" scoped="" ref="0x7f7126e3f020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f7126e3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f7126e4cae0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f7126e4cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126e48390"/>
        <function-ref name="fired" scoped="" ref="0x7f7126e49360"/>
        <function-ref name="startAt" scoped="" ref="0x7f7126e49ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7126e49820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7126e48850"/>
        <function-ref name="start" scoped="" ref="0x7f7126e4b970"/>
        <function-ref name="stop" scoped="" ref="0x7f7126e4be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f7126e48d00" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126e48d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126e470a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126e47230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126e473c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126e47550"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126e476e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126e47870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f7126e34550" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126e34550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e348d0"/>
        <function-ref name="write" scoped="" ref="0x7f7126e34a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f7126e34e00" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126e34e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e331c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126e33350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f7126e26d40" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126e26d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126e290e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f7126e29270"/>
        <function-ref name="sfd" scoped="" ref="0x7f7126e29400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126e4fbc0" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126e4fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126e4e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126e4e1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f7126e4e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126e4e4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f7126e4e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f7126e36d10" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126e36d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126e350e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126e35270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126e35400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f7126e31c60" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126e31c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126e30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f7126e39820" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f7126e39820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126e39ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126e39d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126e38020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126e381b0"/>
        <function-ref name="get" scoped="" ref="0x7f7126e38340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e384d0"/>
        <function-ref name="set" scoped="" ref="0x7f7126e38660"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126e50c60" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126e50c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126e4f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126e47bb0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126e47bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126e46020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126e461b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126e46340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f7126e3abe0" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126e3abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126e40020"/>
        <function-ref name="isSet" scoped="" ref="0x7f7126e401b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126e40340"/>
        <function-ref name="set" scoped="" ref="0x7f7126e404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f7126e303e0" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126e303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e30960"/>
        <function-ref name="write" scoped="" ref="0x7f7126e30af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f7126e36020" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f7126e36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126e363a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126e36530"/>
        <function-ref name="request" scoped="" ref="0x7f7126e366c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126e36850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126e369e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f7126e3f500" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f7126e3f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126e3f980"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126e3fb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126e3fca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126e3fe30"/>
        <function-ref name="get" scoped="" ref="0x7f7126e39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e391b0"/>
        <function-ref name="set" scoped="" ref="0x7f7126e39340"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e394d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f7126e2d130" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126e2d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e2d4b0"/>
        <function-ref name="write" scoped="" ref="0x7f7126e2d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f7126e2d9c0" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126e2d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e2dd40"/>
        <function-ref name="write" scoped="" ref="0x7f7126e2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f7126e336d0" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126e336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126e33a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f7126e38b40" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f7126e38b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126e37020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126e371b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126e37340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126e374d0"/>
        <function-ref name="get" scoped="" ref="0x7f7126e37660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126e377f0"/>
        <function-ref name="set" scoped="" ref="0x7f7126e37980"/>
        <function-ref name="clr" scoped="" ref="0x7f7126e37b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7126e296c0" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7126e296c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7126e29a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7126e29bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f7126e29d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7126e28020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7126e281b0"/>
        <function-ref name="get" scoped="" ref="0x7f7126e28340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7126e284d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7126e28b10"/>
        <function-ref name="set" scoped="" ref="0x7f7126e28660"/>
        <function-ref name="led0On" scoped="" ref="0x7f7126e287f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7126e28980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f7126e2f5e0" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126e2f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126e2f960"/>
        <function-ref name="write" scoped="" ref="0x7f7126e2faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7126e4f320" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7126e4f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126e4f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126e4f830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f7126e35780" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126e35780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126e35b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126e35c90"/>
        <function-ref name="write" scoped="" ref="0x7f7126e35e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126e34020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126e341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f7126e33de0" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126e33de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126e31180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f7126e30e80" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126e30e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126e2f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f7126e4c0f0" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f7126e4c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126e4c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f7126d8bc60" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126d8bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8a210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f7126d95020" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f7126d95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f7126d8fc70" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126d8fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8e020"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f7126d89670" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126d89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d899f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f7126d82e50" loc="86:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f7126d82e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d81210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f7126d89e50" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f7126d89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d88210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f7126d752f0" loc="108:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126d752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d75670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d75800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f7126d782f0" loc="104:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126d782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d78670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d78800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f7126d94370" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126d94370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d946f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f7126d7d670" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f7126d7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f7126d792f0" loc="102:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126d792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d79670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d79800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f7126d8ec60" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f7126d8ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8d020"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f7126d8dc60" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126d8dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8b020"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f7126d83670" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f7126d83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d839f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d83b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f7126d86e50" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f7126d86e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d84210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f7126d88670" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7126d88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d889f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7126d978f0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126d978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126d97c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126d97e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126d96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f7126d93d00" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126d93d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d910a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f7126d91370" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126d91370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f7126d7ca70" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126d7ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f7126d91ac0" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f7126d91ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d91e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f7126d79ad0" loc="103:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126d79ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d79e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f7126d93060" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126d93060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d933e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f7126d7fe50" loc="92:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f7126d7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7d210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f7126d8d480" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126d8d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8d800"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f7126d8e480" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126d8e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8e800"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f7126d96940" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f7126d96940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d96cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f7126d80e50" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126d80e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7f210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f7126d81670" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f7126d81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d819f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d81b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f7126d7f670" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126d7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f7126d76ad0" loc="107:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126d76ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d76e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f7126d78ad0" loc="105:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126d78ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d78e50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f7126d84670" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f7126d84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d849f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d84b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f7126d81e50" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f7126d81e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d80210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f7126d7aad0" loc="101:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f7126d7aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7ae50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f7126d87670" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f7126d87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d879f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d87b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f7126d75ad0" loc="111:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126d75ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126d75e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126d74020"/>
        <function-ref name="write" scoped="" ref="0x7f7126d741b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126d74340"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126d744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f7126d962f0" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126d962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d96670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f7126d8f490" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f7126d8f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8f810"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f7126d8b480" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126d8b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8b800"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f7126d83e50" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f7126d83e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d82210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f7126d88e50" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7126d88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d87210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f7126d82670" loc="85:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f7126d82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d829f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d82b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f7126d8a670" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7126d8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d8a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d8ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f7126d95670" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f7126d95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d959f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f7126d8ae50" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126d8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d89210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126d98c30" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126d98c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126d97020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126d971b0"/>
        <function-ref name="request" scoped="" ref="0x7f7126d97340"/>
        <function-ref name="granted" scoped="" ref="0x7f7126d974d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126d97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f7126d90160" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126d90160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d904e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f7126d90e00" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f7126d90e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d8f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f7126d7a2f0" loc="100:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f7126d7a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7a670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f7126d7bad0" loc="99:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7126d7bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7be50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f7126d936b0" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126d936b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d93a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f7126d7b2f0" loc="96:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126d7b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7b670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f7126d762f0" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f7126d762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d76670"/>
        <function-ref name="write" scoped="" ref="0x7f7126d76800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f7126d84e50" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126d84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d83210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f7126d80670" loc="89:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f7126d80670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d809f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f7126d95cc0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126d95cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d940a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f7126d949c0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f7126d949c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d94d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f7126d87e50" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f7126d87e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d86210"/>
        <function-ref name="write" scoped="" ref="0x7f7126d863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f7126d907b0" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126d907b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d90b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f7126d86670" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f7126d86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d869f0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f7126d7de50" loc="94:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f7126d7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d7c610"/>
        <function-ref name="write" scoped="" ref="0x7f7126d7c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f7126d747a0" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126d747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126d74b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126d74cb0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d74e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126d73020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126d731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f7126d68df0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126d68df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126d651c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f7126d65350"/>
        <function-ref name="sfd" scoped="" ref="0x7f7126d654e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126d657c0" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126d657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126d65b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f7126d64020" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f7126d64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126d643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7126d685c0" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7126d685c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126d68940"/>
        <function-ref name="stop" scoped="" ref="0x7f7126d68ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f7126d5c380" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f7126d5c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126d5c700"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126d5c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126d5ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126d5cbb0"/>
        <function-ref name="get" scoped="" ref="0x7f7126d5cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126d5b020"/>
        <function-ref name="set" scoped="" ref="0x7f7126d5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7126d5b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f7126d55b90" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f7126d55b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f7126d54020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f7126d541b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f7126d54340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f7126d544d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f7126d54660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f7126d547f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7126d54980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f7126d54b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f7126d54ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f7126d54e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f7126d53020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f7126d531b0"/>
        <function-ref name="sync" scoped="" ref="0x7f7126d53340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7126d535d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f7126d53760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f7126d3e9d0" loc="148:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f7126d3e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7126d3ed50"/>
        <function-ref name="runTask" scoped="" ref="0x7f7126d3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f7126d53d70" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7126d53d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126d51330"/>
        <function-ref name="clear" scoped="" ref="0x7f7126d51a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126d52ba0"/>
        <function-ref name="set" scoped="" ref="0x7f7126d4f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f7126d5b6b0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f7126d5b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126d5ba30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126d5bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126d5bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126d5a020"/>
        <function-ref name="get" scoped="" ref="0x7f7126d5a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126d5a340"/>
        <function-ref name="set" scoped="" ref="0x7f7126d5a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7126d5a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f7126d4ecb0" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126d4ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f7126d4d590" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126d4d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4d910"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f7126d4c6d0" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126d4c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4ca50"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f7126d56330" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126d56330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126d566b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126d56840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126d569d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126d56b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126d56cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126d56e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f7126d60550" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f7126d60550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126d608d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f7126d60a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f7126d60bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f7126d573a0" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126d573a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d57720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f7126d5d020" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f7126d5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7126d5d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7126d5d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7126d5d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7126d5d850"/>
        <function-ref name="get" scoped="" ref="0x7f7126d5d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7126d5db70"/>
        <function-ref name="set" scoped="" ref="0x7f7126d5dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7126d5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f7126d4b020" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126d4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4b3a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126d61620" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126d61620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126d619a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126d551e0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126d551e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126d55560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126d556f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126d55880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126d5f020" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126d5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126d5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f7126d596e0" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f7126d596e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126d59a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126d59bf0"/>
        <function-ref name="request" scoped="" ref="0x7f7126d59d80"/>
        <function-ref name="granted" scoped="" ref="0x7f7126d58020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126d581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f7126d4de00" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126d4de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4c1c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f7126d58530" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126d58530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126d588b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126d58a40"/>
        <function-ref name="write" scoped="" ref="0x7f7126d58bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126d58d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126d57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f7126d4b8b0" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126d4b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d4be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f7126d5f7c0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f7126d5f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f7126d5fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7126d4a150" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7126d4a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7126d4a4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7126d4a660"/>
        <function-ref name="led1On" scoped="" ref="0x7f7126d4a7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7126d4a980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7126d4ab10"/>
        <function-ref name="get" scoped="" ref="0x7f7126d4aca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7126d4ae30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7126d494d0"/>
        <function-ref name="set" scoped="" ref="0x7f7126d49020"/>
        <function-ref name="led0On" scoped="" ref="0x7f7126d491b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7126d49340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f7126d4e3e0" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126d4e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126d4e760"/>
        <function-ref name="write" scoped="" ref="0x7f7126d4e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f7126d4fb10" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126d4fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d4e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f7126d5aa50" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f7126d5aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7126d5add0"/>
        <function-ref name="disable" scoped="" ref="0x7f7126d59020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f7126d591b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f7126d59340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f7126d57ad0" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126d57ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126d56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f7126d61ca0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f7126d61ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7126d600a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126d60230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f7126cdda70" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7126cdda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f7126cdddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f7126ce1670" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126ce1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126ce19f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126ce1b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126ce1d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126cde020"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126cde1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126cde340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f7126cdc550" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126cdc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126cdbb00"/>
        <function-ref name="clear" scoped="" ref="0x7f7126cda2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126cdb3d0"/>
        <function-ref name="set" scoped="" ref="0x7f7126cda9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f7126cdd0c0" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126cdd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126cdd440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126cdd5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126cdd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f7126cd4480" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126cd4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126cd4800"/>
        <function-ref name="isSet" scoped="" ref="0x7f7126cd4990"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126cd4b20"/>
        <function-ref name="set" scoped="" ref="0x7f7126cd4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7126cd8660" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7126cd8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126cd7ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f7126cd6460"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126cd75b0"/>
        <function-ref name="set" scoped="" ref="0x7f7126cd6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f7126cde6e0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f7126cde6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7126cdea60"/>
        <function-ref name="noAck" scoped="" ref="0x7f7126cdebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7126cded80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f7126cce020" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7126cce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f7126cce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f7126cd3d20" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126cd3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126cd00e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126cd0270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126cd0400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126cd0590"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126cd0720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126cd08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f7126cc54a0" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f7126cc54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126cc5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7126cc59b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126cc5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126cc5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7126cc5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f7126ccea80" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f7126ccea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126ccc020"/>
        <function-ref name="clear" scoped="" ref="0x7f7126ccc750"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126ccd8d0"/>
        <function-ref name="set" scoped="" ref="0x7f7126ccce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f7126ccf640" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126ccf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126ccf9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126ccfb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126ccfce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f7126cc68b0" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7126cc68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126cc6c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f7126cc6dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126cc5020"/>
        <function-ref name="set" scoped="" ref="0x7f7126cc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f7126cc43b0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f7126cc43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126cc3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f7126cc36e0" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f7126cc36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126cc23d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7126ccaaf0" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7126ccaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7126cc80d0"/>
        <function-ref name="clear" scoped="" ref="0x7f7126cc8800"/>
        <function-ref name="isValid" scoped="" ref="0x7f7126cc9970"/>
        <function-ref name="set" scoped="" ref="0x7f7126cc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f7126cd0c50" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f7126cd0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7126ccf020"/>
        <function-ref name="noAck" scoped="" ref="0x7f7126ccf1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7126ccf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7126c73cf0" loc="48:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f7126c73cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126c72980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7126c71020" loc="49:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f7126c71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859e270"/>
            <typename><typedef-ref name="T32khz" ref="0x7f712859e5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7126c71e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7126c6f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7126c6f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7126c6fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7126c6c0b0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f7126c6c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f712859f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f712859fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7126c68630"/>
        <function-ref name="fired" scoped="" ref="0x7f7126c6bb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7126c6a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7126c6a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7126c67020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7126c68ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7126c6a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7126c6cca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7126c68020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7126c6b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126c6b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f7126c57620" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f7126c57620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c57ba0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c57d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f7126c62940" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f7126c62940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c62cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f7126c5a620" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f7126c5a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c5a9a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c5ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f7126c54060" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f7126c54060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c543e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c54570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f7126c4d840" loc="86:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f7126c4d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4dbc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f7126c54840" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f7126c54840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c54bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c54d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f7126c42c60" loc="108:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f7126c42c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c40020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f7126c44c60" loc="104:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f7126c44c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c43020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f7126c60cc0" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f7126c60cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f7126c49060" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f7126c49060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c493e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c49570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f7126c45c60" loc="102:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f7126c45c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c44020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f7126c59620" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f7126c59620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c599a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c59b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f7126c58620" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f7126c58620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c589a0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c58b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f7126c4f060" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f7126c4f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4f3e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f7126c51840" loc="79:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f7126c51840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c51bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c51d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f7126c53060" loc="74:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f7126c53060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c533e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c53570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f7126c632b0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f7126c632b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f7126c63630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f7126c637c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f7126c63950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f7126c5e6b0" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f7126c5e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f7126c5ed00" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f7126c5ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f7126c48480" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f7126c48480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c48800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c48990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f7126c5d490" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f7126c5d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f7126c44480" loc="103:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f7126c44480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c44800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c44990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f7126c5f9c0" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f7126c5f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f7126c4a840" loc="92:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f7126c4a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4abc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f7126c59e00" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f7126c59e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c581c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c58350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f7126c5ae00" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f7126c5ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c591c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c59350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f7126c622f0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f7126c622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c62670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f7126c4b840" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f7126c4b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f7126c4c060" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f7126c4c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f7126c4a060" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f7126c4a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f7126c42480" loc="107:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f7126c42480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c42800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c42990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f7126c43480" loc="105:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f7126c43480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c43800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c43990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f7126c50060" loc="80:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f7126c50060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c503e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c50570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f7126c4c840" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f7126c4c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f7126c45480" loc="101:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f7126c45480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c45800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c45990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f7126c52060" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f7126c52060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c523e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c52570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f7126c40480" loc="111:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f7126c40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126c40800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126c40990"/>
        <function-ref name="write" scoped="" ref="0x7f7126c40b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126c40cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126c40e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f7126c63c20" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f7126c63c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f7126c5be00" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f7126c5be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c5a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c5a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f7126c58e00" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f7126c58e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c571c0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c57350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f7126c4f840" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f7126c4f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4fbc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f7126c53840" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f7126c53840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c53bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c53d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f7126c4d060" loc="85:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f7126c4d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4d3e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f7126c56060" loc="70:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f7126c56060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c563e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c56570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f7126c60020" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f7126c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f7126c56840" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f7126c56840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c56bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c56d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126c64520" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126c64520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126c648a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126c64a30"/>
        <function-ref name="request" scoped="" ref="0x7f7126c64bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126c64d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126c63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f7126c5dae0" loc="57:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f7126c5dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f7126c5b7b0" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f7126c5b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f7126c46c60" loc="100:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f7126c46c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c45020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f7126c46480" loc="99:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f7126c46480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c46800"/>
        <function-ref name="write" scoped="" ref="0x7f7126c46990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f7126c5e060" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f7126c5e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f7126c48c60" loc="96:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f7126c48c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c46020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f7126c43c60" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f7126c43c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c42020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f7126c50840" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f7126c50840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c50bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c50d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f7126c4b060" loc="89:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f7126c4b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c4b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c4b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f7126c60670" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f7126c60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c609f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f7126c5f370" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f7126c5f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f7126c52840" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f7126c52840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c52bc0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c52d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f7126c5b160" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f7126c5b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f7126c5b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f7126c51060" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f7126c51060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c513e0"/>
        <function-ref name="write" scoped="" ref="0x7f7126c51570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f7126c49840" loc="94:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f7126c49840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7126c48020"/>
        <function-ref name="write" scoped="" ref="0x7f7126c481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f7126c3f160" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f7126c3f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f7126c3f4e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7126c3f670"/>
        <function-ref name="write" scoped="" ref="0x7f7126c3f800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f7126c3f990"/>
        <function-ref name="readDone" scoped="" ref="0x7f7126c3fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f7126c16a20" loc="46:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f7126c16a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f7126c16da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f7126c13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f7126c14920" loc="45:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f7126c14920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126c16560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126c1a9a0" loc="44:/home/ly/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126c1a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126c1ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f7126c0fa20" loc="48:/home/ly/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f7126c0fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f7126c0fda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f7126c0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f7126c10940" loc="47:/home/ly/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f7126c10940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126c0f560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126c10080" loc="46:/home/ly/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126c10080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126c10400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f7126c18aa0" loc="67:/home/ly/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f7126c18aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7126c18e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7126c11020"/>
        <function-ref name="isState" scoped="" ref="0x7f7126c111b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7126c11340"/>
        <function-ref name="requestState" scoped="" ref="0x7f7126c114d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f7126c11660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126bf8020" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126bf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126bf83a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bf8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126bf86c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126bf8850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126bf89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126bf9220" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126bf9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126bf95a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bf9730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126bf98c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126bf9a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126bf9be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126bf3e60" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126bf3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126bf2210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bf23a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126bf2530"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126bf26c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126bf2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126bf6a20" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126bf6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126bf6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bf3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126bf31b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126bf3340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126bf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f7126bf18f0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f7126bf18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f7126bf1c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f7126bf1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126bf3750" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126bf3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126bf3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126bf0170" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126bf0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bf04f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126bf0680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126bf0810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f7126bf2ae0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f7126bf2ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7126bf2e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7126bf1020"/>
        <function-ref name="isState" scoped="" ref="0x7f7126bf11b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7126bf1340"/>
        <function-ref name="requestState" scoped="" ref="0x7f7126bf14d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f7126bf1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f7126bf4690" loc="67:/home/ly/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f7126bf4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7126bf4a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7126bf4ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f7126bf4d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7126bdb020"/>
        <function-ref name="requestState" scoped="" ref="0x7f7126bdb1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f7126bdb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126bd5950" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126bd5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126bd8aa0" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126bd8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f7126bd5200" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f7126bd5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd5580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126bd03f0" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126bd03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd0770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126bd1b70" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126bd1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126bd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126bd4e30" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126bd4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd11e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126bd0a70" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126bd0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126bd0df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126bcf020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126bcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f7126bd1570" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f7126bd1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126bd18f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126ba1020" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126ba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126ba13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126ba16b0" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126ba16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126ba1a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126ba1bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126ba1d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126ba0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126ba01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126ba6960" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126ba6960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126ba6ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126ba6e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126ba4030"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126ba41c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126ba4350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f7126ba4ca0" loc="68:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f7126ba4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126ba30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126ba3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126ba33c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126ba3550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126ba36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126ba45f0" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126ba45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126ba4970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126ba7cb0" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126ba7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126ba60a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126ba6230"/>
        <function-ref name="request" scoped="" ref="0x7f7126ba63c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7126ba6550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126ba66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f7126ba3a50" loc="69:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f7126ba3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126ba3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f7126ba2170" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f7126ba2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126ba24f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7126ba2680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126ba2810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126ba29a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7126ba2b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126b96d70" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126b96d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b95180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b95310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b954a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b95630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b957c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126b95b10" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126b95b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f7126b67db0" loc="184:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f7126b67db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7126b66180"/>
        <function-ref name="runTask" scoped="" ref="0x7f7126b66310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f7126b942f0" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126b942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126b94670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126b94800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126b94990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126b94b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126b94cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126b94e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f7126b99a20" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f7126b99a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b99da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b97020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b971b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b97340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7126b93b70" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f7126b93b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7126b92020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7126b921b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7126b92340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7126b924d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126b93170" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126b93170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b934f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126b93680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126b93810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f7126b99370" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f7126b99370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b996f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7126b9b7b0" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f7126b9b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126b9bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126b9bcc0"/>
        <function-ref name="request" scoped="" ref="0x7f7126b9be50"/>
        <function-ref name="granted" scoped="" ref="0x7f7126b9a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126b9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f7126b9a4d0" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f7126b9a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b9a850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b9a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b9ab70"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b9ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f7126b97840" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f7126b97840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b97bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f7126b96020" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f7126b96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126b963a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7126b96530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b966c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b96850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7126b969e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7126b47dd0" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f7126b47dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7126b46180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f7126b46410" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f7126b46410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7126b46790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7126b46920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7126b46ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7126b46c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7126b3ab80" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f7126b3ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7126b39020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7126b391b0"/>
        <function-ref name="start" scoped="" ref="0x7f7126b39340"/>
        <function-ref name="stop" scoped="" ref="0x7f7126b394d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126b38860" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126b38860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b38be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b38d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b37020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b371b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b37340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126b37690" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126b37690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b37a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126b3fcf0" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126b3fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b3c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b3c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b3c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b3c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b3c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f7126b3a080" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f7126b3a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f7126b3a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f7126b3a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f7126b3a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f7126b3a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f7126b39800" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f7126b39800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7126b39b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7126b39d10"/>
        <function-ref name="isState" scoped="" ref="0x7f7126b38020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7126b381b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f7126b38340"/>
        <function-ref name="forceState" scoped="" ref="0x7f7126b384d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f7126b37d90" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f7126b37d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7126b36180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7126b36310"/>
        <function-ref name="start" scoped="" ref="0x7f7126b364a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7126b36630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126b3c980" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126b3c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b3cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f7126b332d0" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f7126b332d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f7126b33650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f7126b337e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f7126b33970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f7126b33b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f7126b35580" loc="67:/home/ly/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f7126b35580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f7126b35900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f7126b35a90"/>
        <function-ref name="isState" scoped="" ref="0x7f7126b35c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f7126b35db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f7126b34020"/>
        <function-ref name="forceState" scoped="" ref="0x7f7126b341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126b26d70" loc="45:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126b26d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b25180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b25310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b254a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b25630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126b29350" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126b29350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b296d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b29860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b299f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b29b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b29d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f7126b26020" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f7126b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f7126b263a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f7126b26530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f7126b266c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f7126b26850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f7126b269e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f7126b211c0" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7126b211c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7126b21540"/>
        <function-ref name="noAck" scoped="" ref="0x7f7126b216d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7126b21860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f7126b24410" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f7126b24410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f7126b24790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f7126b24920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f7126b24ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f7126b24c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f7126b24dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7126b01690" loc="59:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f7126b01690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b01a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7126b02860" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f7126b02860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b02be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b02d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b01020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b011b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b01340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f7126aff610" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f7126aff610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f7126aff990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f7126affb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f7126affcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f7126affe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f7126afe020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f7126afe1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7126afe340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f7126afe4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f7126afe660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f7126afe7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f7126afe980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f7126afeb10"/>
        <function-ref name="sync" scoped="" ref="0x7f7126afeca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7126afd020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f7126afd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f7126b038b0" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f7126b038b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f7126b03c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f7126b03dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f7126b02020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f7126b021b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f7126b02340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f7126b024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f7126b05ce0" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f7126b05ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f7126b030a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f7126afc1f0" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f7126afc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f7126afc570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f7126afc700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f7126afc890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f7126afca20"/>
        <function-ref name="setCca" scoped="" ref="0x7f7126afcbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f7126afcd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f7126b06a80" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f7126b06a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7126b06e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7126b05020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b051b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b05340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7126b054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f7126b09020" loc="48:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f7126b09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126b093a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126b09530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126b096c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126b09850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126b099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f7126b08df0" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f7126b08df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b071c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f7126b01ce0" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f7126b01ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f7126b000a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f7126b00230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f7126b003c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f7126b00550"/>
        <function-ref name="getPower" scoped="" ref="0x7f7126b006e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f7126b00870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f7126afd4d0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f7126afd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f7126afd950"/>
        <function-ref name="changed" scoped="" ref="0x7f7126afdae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f7126afdc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f7126afde00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f7126b00b70" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f7126b00b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f7126aff020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f7126aff1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f7126aff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7126b08210" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f7126b08210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7126b08590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7126afbd30" loc="67:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f7126afbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7126afa0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7126afa270"/>
        <function-ref name="led1On" scoped="" ref="0x7f7126afa400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7126afa590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7126afa720"/>
        <function-ref name="get" scoped="" ref="0x7f7126afa8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7126afaa40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7126af91b0"/>
        <function-ref name="set" scoped="" ref="0x7f7126afabd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f7126afad60"/>
        <function-ref name="led2On" scoped="" ref="0x7f7126af9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f7126b07470" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f7126b07470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7126b077f0"/>
        <function-ref name="source" scoped="" ref="0x7f7126b07980"/>
        <function-ref name="address" scoped="" ref="0x7f7126b07b10"/>
        <function-ref name="destination" scoped="" ref="0x7f7126b07ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f7126b07e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f7126b06020"/>
        <function-ref name="type" scoped="" ref="0x7f7126b061b0"/>
        <function-ref name="setType" scoped="" ref="0x7f7126b06340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7126b064d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7126b06660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f7126b067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f7126afb0f0" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f7126afb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7126afb470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7126afb600"/>
        <function-ref name="request" scoped="" ref="0x7f7126afb790"/>
        <function-ref name="granted" scoped="" ref="0x7f7126afb920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7126afbab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f71269e9020" loc="49:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f71269e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71269e93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269e9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269e96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71269e9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71269e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f71269e9c30" loc="50:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71269e9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71269e8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71269e81b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269e8340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269e84d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f71269e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f71269e88b0" loc="51:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f71269e88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71269e8c30"/>
        <function-ref name="source" scoped="" ref="0x7f71269e8dc0"/>
        <function-ref name="address" scoped="" ref="0x7f71269e7020"/>
        <function-ref name="destination" scoped="" ref="0x7f71269e71b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f71269e7340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f71269e74d0"/>
        <function-ref name="type" scoped="" ref="0x7f71269e7660"/>
        <function-ref name="setType" scoped="" ref="0x7f71269e77f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f71269e7980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f71269e7b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f71269e7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f71269e6020" loc="52:/home/ly/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f71269e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f71269e63a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f71269e6530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f71269e66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f7125e8bb60" loc="49:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f7125e8bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7125e8a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7125e8a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7125e8a340"/>
        <function-ref name="cancel" scoped="" ref="0x7f7125e8a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7125e8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f7125e8a8b0" loc="50:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f7125e8a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7125e8ac30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7125e8adc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7125e89020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7125e891b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7125e89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f7125e89590" loc="51:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f7125e89590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7125e89910"/>
        <function-ref name="source" scoped="" ref="0x7f7125e89aa0"/>
        <function-ref name="address" scoped="" ref="0x7f7125e89c30"/>
        <function-ref name="destination" scoped="" ref="0x7f7125e89dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f7125e88020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f7125e881b0"/>
        <function-ref name="type" scoped="" ref="0x7f7125e88340"/>
        <function-ref name="setType" scoped="" ref="0x7f7125e884d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7125e88660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7125e887f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f7125e88980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f7125e88c10" loc="52:/home/ly/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f7125e88c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7125e87020"/>
        <function-ref name="noAck" scoped="" ref="0x7f7125e871b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7125e87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f7125e7e640" loc="44:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f7125e7e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7125e7e9c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7125e7eb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7125e7ece0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7125e7ee70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7125e7d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f7125e7d2e0" loc="46:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7125e7d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7125e7d660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7125e7d7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7125e7d980"/>
        <function-ref name="cancel" scoped="" ref="0x7f7125e7db10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7125e7dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f7125e7c020" loc="47:/home/ly/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SensorAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f7125e7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7125e7c3a0"/>
        <function-ref name="source" scoped="" ref="0x7f7125e7c530"/>
        <function-ref name="address" scoped="" ref="0x7f7125e7c6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f7125e7c850"/>
        <function-ref name="setSource" scoped="" ref="0x7f7125e7c9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f7125e7cb70"/>
        <function-ref name="type" scoped="" ref="0x7f7125e7cd00"/>
        <function-ref name="setType" scoped="" ref="0x7f7125e7b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7125e7b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7125e7b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f7125e7b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7126a4b940" loc="43:/home/ly/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f7126a4b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7126a4bcc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7126a4be50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7126a48020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7126a481b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7126a48340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f71269fd400" loc="48:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f71269fd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71269fd7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269fd930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269fdac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f71269fdc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71269fdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f71269fe4b0" loc="46:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f71269fe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f71269fe850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269fe9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269feb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f71269fed00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f71269fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f71269fb720" loc="50:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71269fb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71269fbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71269fbc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269fbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269fa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f71269fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f71269fa480" loc="169:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f71269fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71269fa800"/>
        <function-ref name="runTask" scoped="" ref="0x7f71269fa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f71269fac60" loc="126:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f71269fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f71269f9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f71269f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f71269fc060" loc="49:/home/ly/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f71269fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71269fc3e0"/>
        <function-ref name="source" scoped="" ref="0x7f71269fc570"/>
        <function-ref name="address" scoped="" ref="0x7f71269fc700"/>
        <function-ref name="destination" scoped="" ref="0x7f71269fc890"/>
        <function-ref name="setSource" scoped="" ref="0x7f71269fca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f71269fcbb0"/>
        <function-ref name="type" scoped="" ref="0x7f71269fcd40"/>
        <function-ref name="setType" scoped="" ref="0x7f71269fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f71269fb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f71269fb340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f71269fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f71269dc020" loc="46:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f71269dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f71269dc3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f71269dc530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f71269dc6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f71269dc850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f71269dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f71269e2910" loc="45:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f71269e2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f71269e2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f71269dcc30" loc="47:/home/ly/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="SensorAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f71269dcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f71269db020"/>
        <function-ref name="source" scoped="" ref="0x7f71269db1b0"/>
        <function-ref name="address" scoped="" ref="0x7f71269db340"/>
        <function-ref name="destination" scoped="" ref="0x7f71269db4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f71269db660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f71269db7f0"/>
        <function-ref name="type" scoped="" ref="0x7f71269db980"/>
        <function-ref name="setType" scoped="" ref="0x7f71269dbb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f71269dbca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f71269dbe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f71269da020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f71284eac80" loc="113:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f71284eaa00" loc="113:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f71284e72a0" loc="138:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f71284e7020" loc="138:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f71284ea020" loc="104:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f71284e9520" loc="130:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f712858a190" loc="60:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f712850fe80" loc="65:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712850fc00" loc="65:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f712850c020" loc="78:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712850dc90" loc="78:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f7128508490" loc="126:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7128509e50" loc="126:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71285081c0" loc="126:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f7128509560" loc="106:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f712850b5e0" loc="94:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712850b020" loc="94:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f712850b350" loc="94:/home/ly/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f71284f3020" loc="80:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f71284f45e0" loc="80:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f71284f4960" loc="80:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71284f4c90" loc="80:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f71284ef660" loc="135:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71284ef060" loc="135:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71284ef390" loc="135:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f71284ee790" loc="123:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f71284f2390" loc="96:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71284f2110" loc="96:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f71284f08b0" loc="110:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71284f02d0" loc="110:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f71284f0620" loc="110:/home/ly/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/ly/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f712856ce40" loc="49:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856ce40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7128566720" loc="55:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f71285655d0" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856ce40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7128565020" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7128565340" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856ce40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f71284e5670" loc="78:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
              <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71284f5cc0" loc="78:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f71284e5060" loc="78:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71284e5390" loc="78:/home/ly/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f712856fcb0" loc="52:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856fcb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f712856be10" loc="67:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f712856b5f0" loc="59:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f712856a840" loc="74:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856fcb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f712856a5c0" loc="74:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712856fcb0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/home/ly/tinyos-main/tos/interfaces/Get.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f712857b6a0" loc="49:/home/ly/tinyos-main/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712857b6a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f712856d020" loc="55:/home/ly/tinyos-main/tos/interfaces/Get.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f712857b6a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f71285777b0" loc="61:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f7128575020" loc="67:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f7128575800" loc="72:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f71285747d0" loc="83:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f7128572020" loc="100:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7128572830" loc="117:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f7128574020" loc="77:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f71285703f0" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f7128570170" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f7128577020" loc="56:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f7128573020" loc="89:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f71285737b0" loc="94:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f71284f9d30" loc="177:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71284f9ab0" loc="177:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f7128503a10" loc="88:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f7128503790" loc="88:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f712855fe50" loc="68:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f7128506950" loc="78:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71285066d0" loc="78:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f71285003a0" loc="121:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f7128502d70" loc="121:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f7128500110" loc="121:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f7128501e50" loc="103:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f7128501870" loc="103:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f7128501bc0" loc="103:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f71284fd810" loc="147:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71284fd590" loc="147:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f71284fbb90" loc="162:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71284fb5e0" loc="162:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f71284fb900" loc="162:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f71285201b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f71284fe600" loc="136:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71284fe380" loc="136:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f71284f82f0" loc="187:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f71284facf0" loc="187:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f71284f8060" loc="187:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f71284f6190" loc="195:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/ly/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7128589350" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7128589350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f71285811f0" loc="136:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7128586a60" loc="83:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f7128584820" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7128584250" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7128584590" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f7128585a60" loc="98:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f7128580270" loc="151:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f7128581980" loc="144:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f7128585270" loc="92:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f7128587020" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7128589c40" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f7128582820" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7128582250" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7128582590" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f7128587ae0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7128587860" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7128586350" loc="78:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/ly/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f71284b31f0" loc="62:/home/ly/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f7128485420" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f7128487700" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f7128486ce0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f7128487020" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f7128487e70" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f71284890e0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f71284897c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f71284865c0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f7128612020" loc="62:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f7128978dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f7128433020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f7128435cc0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f7128437390" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f712847eec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f712847d940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f7128433890" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f71284327b0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f7128435560" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f7128432020" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f7128437b30" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f7128436350" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f7128436da0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f712847eec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f712847d940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7128436b20" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f712847eec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f712847d940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f71284260e0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f7128423730" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f71284234b0" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f71284222e0" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f7128422060" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f7128424ca0" loc="73:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f71284243e0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f7128426a90" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f7128426810" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f712842d3e0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f712842dd60" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f712842dae0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f712842b790" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f712842b510" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f712842a2a0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f712842a020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f712842a990" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f712843d810" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f712843a2a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f712843a020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f712843c020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7128443ab0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f712843c760" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f71284409b0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f712843d120" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f7128440270" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f712843e0e0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f712843e9f0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f712843e770" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f712843acb0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f712843aa30" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f71283ff9f0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f71285d6a80" loc="85:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f71285d51f0" loc="86:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f71285d62b0" loc="79:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f71287ef830" loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f7128a31020" loc="57:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f7128a30020" loc="72:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f7128a31790" loc="65:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f7128a25350" loc="67:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f7128a25ba0" loc="75:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f71282d4e30" loc="44:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f71282d35c0" loc="45:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f71282d4020" loc="42:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f71282d1480" loc="47:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f71282d4720" loc="43:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f71282d3ce0" loc="46:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f71282d5120" loc="40:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f71282d57f0" loc="41:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f71282a7020" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f71282a7770" loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f71282a22e0" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f71282a2060" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f71282a9770" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f71282a5780" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f71282a2bd0" loc="117:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f71282a5020" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f71282a8820" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f71282a3020" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f71282a8020" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f71282ac8c0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f71282a4020" loc="92:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f71282a37c0" loc="101:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f71282a47e0" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f71282a9020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7128058c40" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7128058c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f71280555a0" loc="61:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f712804f5d0" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f712804f5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f712804f810" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f712804a390" loc="109:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f712804d3b0" loc="78:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f712804c9d0" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f712804c400" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f712804c740" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f712804db90" loc="88:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f712804ab80" loc="116:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f712804e390" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f712804e110" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712804f810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f712804ebc0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7127fdf4f0" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7127fdf4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7127fdf730" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7127fdf730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f7127fde070" loc="64:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7127fdf730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f7127fdc190" loc="76:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f7127fde8f0" loc="71:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7127fdc8f0" loc="82:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f7127eba020" loc="95:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7127eba830" loc="105:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f7127eaf390" loc="49:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f7127eaf110" loc="49:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f7127eb52a0" loc="50:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f7127eb5020" loc="50:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f7127eb5ae0" loc="59:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f7127eb49a0" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f7127eb43b0" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f7127eb4710" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f7127eb2840" loc="79:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f7127ea20c0" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7127ea5a70" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127ea5db0" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f7127e9fda0" loc="79:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f7127e9fb20" loc="79:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f7127e9dba0" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7127e9d5d0" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127e9d910" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f7127e9e9d0" loc="65:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f7127e9b610" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7127e9ab60" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127e9b020" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f7127e9b370" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f7127e9f350" loc="72:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f7127ea1990" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7127ea1060" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127ea13a0" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f7127ea16f0" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f7127e40270" loc="53:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f7127e40ba0" loc="61:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f7127e3b070" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f7127e64450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f7127e64870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7127e439c0" loc="120:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f7127e44990" loc="97:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f7127e44020" loc="88:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7127e431f0" loc="102:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7127e42470" loc="128:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f7127e35510" loc="65:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f7127e38cc0" loc="59:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f7127e2c2a0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7127e2c020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f7127e2d780" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f7127e07af0" loc="213:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f7127e12790" loc="143:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f7127e1f530" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e93420"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f7127e93c60"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7127e1f2b0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e93420"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f7127e93c60"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f7127e15870" loc="123:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f7127e1da40" loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e8e3d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f7127e8ec10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7127e1d7c0" loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e8e3d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f7127e8ec10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f7127e0ce70" loc="180:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f7127e08480" loc="197:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f7127e1d020" loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e91360"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f7127e91af0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f7127e1b270" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e8e3d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f7127e8ec10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f7127e17020" loc="97:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f7127e19d30" loc="97:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f7127e19610" loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f7127e0c740" loc="179:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f7127e1e780" loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e91360"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f7127e91af0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7127e1e500" loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e91360"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f7127e91af0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f7127e1a420" loc="85:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f7127e0b5d0" loc="181:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f7127e1ae00" loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f7127e1ab80" loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f7127e16910" loc="113:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f7127e150e0" loc="118:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f7127e0d840" loc="177:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f7127e10790" loc="163:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f7127e147e0" loc="133:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f7127e0c020" loc="178:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f7127e11020" loc="148:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f7127e0bcf0" loc="182:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f7127e17800" loc="103:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f7127ea3390"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f7127e96ae0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f7127e0a4c0" loc="187:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f7127e07350" loc="207:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f7127e1bc10" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f7127e1b990" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f7127e064d0" loc="224:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7127e06250" loc="224:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f7127e1fd10" loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127e93420"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f7127e93c60"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f7127e14020" loc="128:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f7127e11770" loc="153:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f7127e0d020" loc="174:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f7127e64450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f7127e64870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127e0fcf0" loc="174:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f7127e64450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f7127e64870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f7127e0f2a0" loc="168:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f7127e77420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f7127e77840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127e0f020" loc="168:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f7127e77420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f7127e77840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f7127e06d90" loc="231:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f7127e0acb0" loc="192:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f7127e16070" loc="108:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f7127e08be0" loc="202:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f7127e10020" loc="158:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f7127e12020" loc="138:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f7127d8e860" loc="95:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7127d8d0e0" loc="105:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f7127ce7020" loc="90:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f7127ce7880" loc="98:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f7127cd14a0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7127cb7900" loc="56:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f7127cb6a20" loc="73:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7127cb7070" loc="46:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7127cb61f0" loc="65:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f7127cb5390" loc="81:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f7127caa4c0" loc="79:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7127cb3b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7127caa240" loc="79:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7127cb3b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f7127cac3b0" loc="53:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f7127cab020" loc="62:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7127cb3b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7127cacc30" loc="62:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7127cb3b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f7127cab930" loc="70:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f7127cb3b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f7127c3d770" loc="62:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f7127bf3b40" loc="41:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f7127bdc910" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127bdc340" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7127bdc680" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f7127bdb190" loc="92:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f7127bddb50" loc="76:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f7127bde4e0" loc="61:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f7127bd9aa0" loc="109:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f7127bd9820" loc="109:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7127be0270" loc="47:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f7127bd85c0" loc="116:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127bd8340" loc="116:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f7127bd9020" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127bdb9c0" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7127bdbcf0" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f7127be0c40" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127be09c0" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f7127bdd2f0" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127bdecd0" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7127bdd060" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f7127b96b10" loc="68:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7127b96350" loc="61:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f7127b97b70" loc="54:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f7127b972b0" loc="53:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f7127adc7b0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7127ada2b0" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7127adc020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f7127adba60" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f7127adb7e0" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f7127ae0830" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f7127adb020" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f7127978c00" loc="57:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127978c00"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f7127971020" loc="89:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127978c00"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127972650" loc="89:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f71279729d0" loc="90:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127978c00"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f7127972d30" loc="90:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f7127975b10" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127978c00"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7127975520" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127978c00"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f7127975880" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f7127973d90" loc="78:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f7127973b10" loc="78:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7127970660" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127970020" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f71279703d0" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f7127950d30" loc="45:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f7127950d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f712794d730" loc="58:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f7127950d30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f7127945390" loc="52:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127945390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7127945c90" loc="58:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7127944a20" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127945390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7127944470" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7127944790" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7127945390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f7127927df0" loc="189:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f7127939aa0" loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127939820" loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f7127936020" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127937990" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f7127937d00" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f7127928a70" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f71279297e0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f71279280d0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f7127928450" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f71279287c0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f7127923770" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f71279230d0" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f7127923460" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f712792b3c0" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127935150" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f71279359f0" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f7127935d80" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f712792b110" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f7127926ad0" loc="206:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7127926850" loc="206:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f71278d4ce0" loc="97:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f71278d4020" loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127967110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f71279675e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f71278d7970" loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f71279684e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f7127969b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f71278d7d60" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127967110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f71279675e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f71278d5110" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f71278d54b0" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f71278d5860" loc="88:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f71278d5bd0" loc="88:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f71278d3d40" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f71278d3720" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f71278d3ab0" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f71278d1780" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f71278cf020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f71278b8190" loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127956ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f71279557a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f71278b62e0" loc="82:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127967110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f71279675e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f71278b6060" loc="82:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f71278b3950" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f71278b2b50" loc="118:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f71278b2390" loc="112:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f71278b2110" loc="112:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f71278b89b0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127954e20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f7127953770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f71278b77c0" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127967110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f71279675e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f71278b7170" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f71278b7530" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7127967110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f71279675e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f71278b1be0" loc="128:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f71278bde50" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127956ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f71279557a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f71278bdbd0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127956ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f71279557a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f71278b6db0" loc="89:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f71278b6b30" loc="89:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f71278b48d0" loc="95:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f71278b4650" loc="95:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f71278b3190" loc="101:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f71278b1350" loc="123:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f71278af3b0" loc="133:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f71278b98f0" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127954e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f7127953770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f71278b9670" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f7127954e20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f7127953770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f712751f1e0" loc="35:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f712751f1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f712751f420" loc="35:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712751f420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f712751a2a0" loc="63:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712751f420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712751a020" loc="63:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f7127519430" loc="70:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71275191b0" loc="70:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f712751b020" loc="49:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712751fd60" loc="49:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7127518740" loc="78:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712751f420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7127518150" loc="78:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f71275184b0" loc="78:/home/ly/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f712751f420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f712750cb50" loc="65:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712750c530" loc="65:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f712750c8c0" loc="65:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f7127509d00" loc="71:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7127509a80" loc="71:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f712750dc60" loc="57:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f712750d2a0" loc="52:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f712750d020" loc="52:/home/ly/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f71275225f0" loc="59:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7127522370" loc="59:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f71275217d0" loc="71:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7127521550" loc="71:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f712751e940" loc="85:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712751e6c0" loc="85:/home/ly/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f71274e3980" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274e3700" loc="95:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f71274e5c30" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274e59b0" loc="81:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f71274e7350" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f71274e70d0" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f71274e9800" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f71274e9580" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f71274e7d80" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f71274e7b00" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f71274e4b10" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274e4890" loc="88:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f71274d62b0" loc="59:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f71274e1c60" loc="59:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f71274d6020" loc="59:/home/ly/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f71274f2810" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274f2230" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f71274f2580" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f71274eee20" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274ee820" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f71274eeb90" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f71274f1350" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f712947b110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274f10d0" loc="64:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f71274efd30" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274efab0" loc="75:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f71274f39c0" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274f3740" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f71274f1e80" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274f1c00" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f71274dab30" loc="65:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274da8b0" loc="65:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f71274dfc10" loc="46:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274df5f0" loc="46:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f71274df980" loc="46:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f71274deb00" loc="59:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274de880" loc="59:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f71274de050" loc="53:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274dda10" loc="53:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f71274ddda0" loc="53:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f71274d9b70" loc="71:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274d98f0" loc="71:/home/ly/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/ly/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f71274ea780" loc="47:/home/ly/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274ea500" loc="47:/home/ly/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/ly/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f71274d0dd0" loc="75:/home/ly/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274d0810" loc="75:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71274d0b40" loc="75:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f71274c9620" loc="125:/home/ly/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/ly/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274c9020" loc="125:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71274c9350" loc="125:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f71274c8660" loc="112:/home/ly/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/ly/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f71274cc2a0" loc="89:/home/ly/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/ly/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274cc020" loc="89:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f71274cb750" loc="100:/home/ly/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f71274cb170" loc="100:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f71274cb4c0" loc="100:/home/ly/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f71274aaca0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274aa6e0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f71274aaa10" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f71274a8020" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f71274a5930" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f71274a6ab0" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f71274a5360" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f71274a5690" loc="84:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f71274a62b0" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f71274a8bb0" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f71274a6020" loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f71274a9780" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f71274a9500" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/ly/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f71274a2b50" loc="52:/home/ly/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f71274a2350" loc="46:/home/ly/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f712749b020" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712749cc90" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f712749c490" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f712855c960"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f712855a390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712749c190" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f712749a360" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f712855ae90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f71285577e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f712749a060" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f71274b06e0" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f71274ae840" loc="97:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f71274ae070" loc="90:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f71274b4e20" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f71274b1e80" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f71274af020" loc="76:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f71274af840" loc="83:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f71274b16c0" loc="56:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/ly/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f7127495a70" loc="71:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f7127496020" loc="56:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f71274952a0" loc="66:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f7127495020" loc="66:/home/ly/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f7127496790" loc="61:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f712749eca0" loc="45:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f712749ea20" loc="45:/home/ly/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f71274977a0" loc="51:/home/ly/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f7127497520" loc="51:/home/ly/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f7127438640" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f7127438060" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f71274383b0" loc="106:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f7127439020" loc="93:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f712743b690" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f712743b020" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f712743b400" loc="87:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f7127441a40" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f71274417c0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f71274398a0" loc="98:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f712743d540" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f712743d2c0" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f7127440b90" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7127440910" loc="61:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f71274378a0" loc="117:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f712743c6b0" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f712743c430" loc="78:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f7127437070" loc="112:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f712743e350" loc="66:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f7127506020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f7127506780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f712743eb40" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f7127441020" loc="54:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f71274401f0" loc="60:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f712743dce0" loc="77:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f712741acf0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f712741aa70" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f71274137f0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7127413570" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/ly/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/ly/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f712742aac0" loc="48:/home/ly/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f7127506020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f7127506780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f712741c860" loc="50:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f712741b7d0" loc="60:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f712741b070" loc="55:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f712741c020" loc="45:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f712741f990" loc="45:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7128520590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f712741fce0" loc="45:/home/ly/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7128520970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f712740fe50" loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f7127417020" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f7127419110" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7127419980" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f7127419cd0" loc="52:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7127416780" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f71274178f0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7127416190" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71274164e0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f7127303bb0" loc="54:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7127301d70" loc="66:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f71273015c0" loc="61:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f7127301340" loc="61:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f7127303350" loc="53:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f71272d0120" loc="24:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f71272d0970" loc="31:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f71272ce1f0" loc="39:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f71272a8b60" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71272a8580" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71272a88d0" loc="62:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f71272a3dd0" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71272a3490" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71272a37e0" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f71272a3b30" loc="91:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f71272a56b0" loc="82:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71272a50d0" loc="82:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71272a5420" loc="82:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f71272aa730" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f71285619e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71272aa150" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71272aa4a0" loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f71272a62c0" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71272a7930" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f71272a7c80" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f71272a6020" loc="71:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f7127289df0" loc="76:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f7127289480" loc="76:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f7127289810" loc="76:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127289b50" loc="76:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f71272873c0" loc="88:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f71272856a0" loc="88:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f7127285a30" loc="88:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7127285d70" loc="88:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f7127287110" loc="89:/home/ly/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/ly/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f712728dc90" loc="45:/home/ly/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/ly/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f712728da10" loc="45:/home/ly/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f71271f0120" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f7127e77420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f7127e77840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f71271f8d70" loc="62:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71271f8af0" loc="62:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f71271f32a0" loc="74:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71271f3020" loc="74:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f71271f4610" loc="68:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f71271f3d30" loc="81:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f71271f3ab0" loc="81:/home/ly/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f712714e9d0" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f7127160420" loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f7127155620" loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f71271553a0" loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f7127169af0" loc="11:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f7127152c50" loc="71:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f712715a5e0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f7127161540" loc="28:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f712715f2d0" loc="34:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f7127163500" loc="25:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f7127163280" loc="25:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f7127165a10" loc="21:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f712715c070" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f7127153550" loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f712714e270" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f7127156c30" loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f7127149350" loc="91:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f71271459d0" loc="100:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f7127168980" loc="14:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f712715d8b0" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f712715b1f0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f7127163dc0" loc="27:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f712716a8c0" loc="7:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f7127156460" loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f71271561e0" loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f712716a190" loc="6:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f71271524d0" loc="69:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f712714d190" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f7127148b00" loc="94:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f7127145270" loc="97:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f7127151b90" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f712714d8c0" loc="83:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f7127155db0" loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f712714a390" loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f71271660e0" loc="15:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f71271587e0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f712714c7b0" loc="86:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f712714fac0" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f712715bde0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f712715bb60" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f71271472d0" loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f7127157a60" loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f7127151420" loc="72:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f7127169390" loc="8:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f7127e50240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f7127e50660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f7127169110" loc="8:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f7127e50240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f7127e50660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f712715d190" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f71271652a0" loc="19:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f7127165020" loc="19:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f712715c9d0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f712715c750" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f712714ab60" loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f7127164b50" loc="24:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f7127166850" loc="18:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f71271572a0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f7127157020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f712947a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f7127168270" loc="12:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f712714c020" loc="84:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f712714f350" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f7127153cc0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f7127158020" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f712715ad30" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f712715f9f0" loc="35:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f7127161c80" loc="29:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f7127147a40" loc="96:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f71271643c0" loc="22:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f7127164140" loc="22:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f7127149b10" loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f7127160b50" loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f7127148350" loc="93:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/ly/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/ly/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f7126ee8620" loc="13:/home/ly/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7126ee83a0" loc="13:/home/ly/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f7126ed5bc0" loc="10:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f7126ed5280" loc="10:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f7126ed55f0" loc="10:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7126ed5920" loc="10:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7126ed4960" loc="11:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f7126ed43a0" loc="11:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7126ed46d0" loc="11:/home/ly/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7126ebd730" loc="59:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7126ebd730"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7126ebd970" loc="59:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7126ebd970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f7126eba4d0" loc="66:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7126ebd970"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7126eba250" loc="66:/home/ly/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7126ebd970"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f7126e595e0" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f7126e269e0" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f7126e26020" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f7126e26750" loc="63:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f7126e277f0" loc="55:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f7126e27020" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f7126e2cd40" loc="49:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f712947a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f7126e3d3d0" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f712947a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7126e3d150" loc="58:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f7126e3e3d0" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7128a35090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7126e3e150" loc="50:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f7126e3a350" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7126e3a0d0" loc="72:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7126e3c390" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7126e3c110" loc="65:/home/ly/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f7128511e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f712850f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/ly/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f7126c175f0" loc="53:/home/ly/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7126c175f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f7126c142a0" loc="64:/home/ly/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7128a2ccb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7126c175f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f7126c14020" loc="64:/home/ly/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7126c175f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
