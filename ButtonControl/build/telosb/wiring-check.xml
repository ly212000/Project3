<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:ButtonControlAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f86c307a0d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f86c3036510"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f86c3036510"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f86c2e74590"/></to>
    </wire>
    <wire loc="10:ButtonControlAppC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f86c3079aa0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f86c3034ab0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x7f86c3034ab0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f86c2af3380"/></to>
    </wire>
    <wire loc="11:ButtonControlAppC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f86c3074540"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f86c2e5bcf0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f86c2e5bcf0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f86c2af2640"/></to>
    </wire>
    <wire loc="16:ButtonControlAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f86c3065020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2936370"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2936370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:ButtonControlAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7f86c3060630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2930c90"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2930c90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:ButtonControlAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7f86c305bba0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c29296d0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c29296d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:ButtonControlAppC.nc">
      <from><interface-ref name="MoodTimer" scoped="" ref="0x7f86c3069a00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2922b00"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2922b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ButtonControlAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f86c3049a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f86c2918260"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f86c2918260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f86c2914bc0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f86c30319d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c2ad19a0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f86c2e74c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f86c35123a0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f86c35123a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f86c30bd420"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f86c2e676c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c3033890"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c3033890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c302fa80"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f86c2e67dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f86c30319d0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f86c302b1c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f86c300e020"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f86c300e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c300b020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f86c302b8a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c302ec80"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f86c302a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c28f1920"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c300b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c2ff5cb0"/></to>
    </wire>
    <wire loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f86c30046c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f86c2ff43d0"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f86c30f39e0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f86c2ff3680"/></to>
    </wire>
    <wire loc="113:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f86c2fae5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2eec6d0"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f86c2f9c020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ee5b30"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f86c2fa5700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ef1160"/></to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f86c2f8aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ecbcb0"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f86c2facaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ef3480"/></to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f86c2f90020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ecb020"/></to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f86c2f87a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2eb4cb0"/></to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f86c2f975a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ec5220"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f86c2fb0b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2f429d0"/></to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f86c2f8ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2eda2f0"/></to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f86c2f923e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2edb610"/></to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f86c2f9b5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2edc220"/></to>
    </wire>
    <wire loc="115:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f86c2fa4700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2eea7a0"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f86c2f89a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ec32f0"/></to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f86c2f9abe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ed56d0"/></to>
    </wire>
    <wire loc="114:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f86c2fab890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2eebac0"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f86c2fbf120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f51c80"/></to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f86c2f90da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ec4610"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f86c2faf0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ef4020"/></to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f86c2f96a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ebd6d0"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f86c2fa06d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2efaa90"/></to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f86c2f8ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ed37a0"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f86c2fa8cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2efbde0"/></to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f86c2f911f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ed4ac0"/></to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f86c2f88a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ebb7a0"/></to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f86c2f980c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2ecdb30"/></to>
    </wire>
    <wire loc="120:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f86c2f8fb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ebcac0"/></to>
    </wire>
    <wire loc="128:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f86c2f8da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f86c2ee3cb0"/></to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f86c2f8ea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2eb4020"/></to>
    </wire>
    <wire loc="127:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f86c2f93570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f86c2ee3020"/></to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f86c2f94020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f86c2eb6b30"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f86c2f4fc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f4f5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f86c2f4d2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f86c2eaeaa0"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f86c2f4d940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f86c2eab260"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ef9930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f51c80"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ef7020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f4f5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ef0020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f51c80"/></to>
    </wire>
    <wire loc="110:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2eef7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f4f5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ee9610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f51c80"/></to>
    </wire>
    <wire loc="117:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ee8c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f4f5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f86c2f47c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f86c2f462f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f86c2eab9f0"/></to>
    </wire>
    <wire loc="123:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f86c2f46940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f86c2eaa240"/></to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ee1b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2edf2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ed9160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ed87a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ed1610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="144:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ed0c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ecab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ec82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2ec1160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2ec07a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2eba610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2eb9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f86c2eb3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f86c2eb02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f86c35814f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f86c30bc320"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f86c30b7880"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f86c32f0930"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f86c2af98f0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f86c2e4bb20"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f86c2e4bb20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f86c2b23490"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2afa660"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2e54020"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2e54020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2b3a250"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="GetLower" scoped="" ref="0x7f86c2aef370"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x7f86c2afeb10"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f86c2aee690"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f86c2afcca0"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c2b29480"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f86c2e20020"/></to>
    </wire>
    <wire loc="456:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f86c2e20020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d37740"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f86c2b16020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f86c2c20020"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f86c2c20020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f86c2c0dbc0"/></to>
    </wire>
    <wire loc="442:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f86c2e37020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d6b100"/></to>
    </wire>
    <wire loc="455:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f86c2e22020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d3cd10"/></to>
    </wire>
    <wire loc="531:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f86c2dd9560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d2dd10"/></to>
    </wire>
    <wire loc="551:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f86c2db4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ca2100"/></to>
    </wire>
    <wire loc="532:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f86c2dd7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d28740"/></to>
    </wire>
    <wire loc="460:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f86c2e1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d31100"/></to>
    </wire>
    <wire loc="473:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f86c2e0a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d02e00"/></to>
    </wire>
    <wire loc="486:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f86c2df5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cd2740"/></to>
    </wire>
    <wire loc="497:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f86c2de5200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cacd10"/></to>
    </wire>
    <wire loc="535:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f86c2dd1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d1fd10"/></to>
    </wire>
    <wire loc="545:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f86c2dc0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cbe100"/></to>
    </wire>
    <wire loc="557:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f86c2dac580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2c9dd10"/></to>
    </wire>
    <wire loc="445:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f86c2e31020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d5d100"/></to>
    </wire>
    <wire loc="536:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f86c2dce580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d1a740"/></to>
    </wire>
    <wire loc="450:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f86c2e2c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d53740"/></to>
    </wire>
    <wire loc="463:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f86c2e18020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d23100"/></to>
    </wire>
    <wire loc="476:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f86c2e04200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cf4d10"/></to>
    </wire>
    <wire loc="489:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f86c2def200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cc3740"/></to>
    </wire>
    <wire loc="500:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f86c2ddf200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2c9dd10"/></to>
    </wire>
    <wire loc="440:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f86c2e3b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d75d10"/></to>
    </wire>
    <wire loc="453:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f86c2e26020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d45860"/></to>
    </wire>
    <wire loc="466:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f86c2e12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d15100"/></to>
    </wire>
    <wire loc="530:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f86c2ddb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d2dd10"/></to>
    </wire>
    <wire loc="548:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f86c2dba570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cb0100"/></to>
    </wire>
    <wire loc="555:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f86c2dae570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2c9dd10"/></to>
    </wire>
    <wire loc="541:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f86c2dc6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cd7d10"/></to>
    </wire>
    <wire loc="471:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f86c2e0e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d0ba60"/></to>
    </wire>
    <wire loc="484:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f86c2df9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cdb100"/></to>
    </wire>
    <wire loc="495:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f86c2de9200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cb5740"/></to>
    </wire>
    <wire loc="549:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f86c2db8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cacd10"/></to>
    </wire>
    <wire loc="538:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f86c2dcc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ce5d10"/></to>
    </wire>
    <wire loc="443:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f86c2e35020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d67d10"/></to>
    </wire>
    <wire loc="493:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f86c2ded200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cbe100"/></to>
    </wire>
    <wire loc="461:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f86c2e1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d2dd10"/></to>
    </wire>
    <wire loc="474:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f86c2e08200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cfd740"/></to>
    </wire>
    <wire loc="487:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f86c2df3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ccd100"/></to>
    </wire>
    <wire loc="498:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f86c2de3200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ca7740"/></to>
    </wire>
    <wire loc="540:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f86c2dc8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cdb100"/></to>
    </wire>
    <wire loc="438:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f86c2e480a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d7f6d0"/></to>
    </wire>
    <wire loc="451:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f86c2e2a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d4e100"/></to>
    </wire>
    <wire loc="464:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f86c2e16020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d1fd10"/></to>
    </wire>
    <wire loc="477:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f86c2e02200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cef740"/></to>
    </wire>
    <wire loc="542:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f86c2dc4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d15100"/></to>
    </wire>
    <wire loc="546:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f86c2dbe570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cbad10"/></to>
    </wire>
    <wire loc="552:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f86c2db2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2c9dd10"/></to>
    </wire>
    <wire loc="482:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f86c2dfd200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ce5d10"/></to>
    </wire>
    <wire loc="543:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f86c2dc2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d11d10"/></to>
    </wire>
    <wire loc="441:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f86c2e39020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d70740"/></to>
    </wire>
    <wire loc="454:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f86c2e24020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d40270"/></to>
    </wire>
    <wire loc="467:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f86c2e10020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d11d10"/></to>
    </wire>
    <wire loc="539:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f86c2dca580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ce0740"/></to>
    </wire>
    <wire loc="550:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f86c2db6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ca7740"/></to>
    </wire>
    <wire loc="472:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f86c2e0c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d06460"/></to>
    </wire>
    <wire loc="485:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f86c2df7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cd7d10"/></to>
    </wire>
    <wire loc="496:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f86c2de7200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cb0100"/></to>
    </wire>
    <wire loc="444:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f86c2e33020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d62740"/></to>
    </wire>
    <wire loc="494:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f86c2deb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cbad10"/></to>
    </wire>
    <wire loc="449:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f86c2e2e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d58d10"/></to>
    </wire>
    <wire loc="462:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f86c2e1a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d28740"/></to>
    </wire>
    <wire loc="475:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f86c2e06200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cf8100"/></to>
    </wire>
    <wire loc="488:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f86c2df1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cc9d10"/></to>
    </wire>
    <wire loc="499:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f86c2de1200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ca2100"/></to>
    </wire>
    <wire loc="439:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f86c2e3d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d79100"/></to>
    </wire>
    <wire loc="452:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f86c2e28020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d4ad10"/></to>
    </wire>
    <wire loc="465:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f86c2e14020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d1a740"/></to>
    </wire>
    <wire loc="478:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f86c2dff200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ce9100"/></to>
    </wire>
    <wire loc="534:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f86c2dd3560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d23100"/></to>
    </wire>
    <wire loc="547:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f86c2dbc570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cb5740"/></to>
    </wire>
    <wire loc="533:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f86c2dd5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d23100"/></to>
    </wire>
    <wire loc="483:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f86c2dfb200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ce0740"/></to>
    </wire>
    <wire loc="554:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f86c2db0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2ca2100"/></to>
    </wire>
    <wire loc="558:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f86c2daa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2cc3740"/></to>
    </wire>
    <wire loc="529:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f86c2ddd1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f86c2d31100"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f86c2c2b020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f86c2c18bc0"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f86c2c21020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f86c2c0ebc0"/></to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f86c2c28020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f86c2c15bc0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f86c2c26020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f86c2c13bc0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f86c2c2d020"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f86c2c1bc40"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f86c2c23020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f86c2c10bc0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f86c2c2a020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f86c2c17bc0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f86c2c34120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f86c2c1fd40"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f86c2c25020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f86c2c12bc0"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f86c2c2c020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f86c2c1abc0"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f86c2c22060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f86c2c0fc40"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f86c2c29020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f86c2c16bc0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f86c2c27020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f86c2c14bc0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f86c2c32060"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f86c2c1cc80"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f86c2c24020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f86c2c11bc0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f86c2af8480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f86c35814f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ace790"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ace790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c2956150"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c2ad19a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c29d3020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f86c2ac71a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f86c2948790"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c29d3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c2401490"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f86c2951640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f86c29a62f0"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f86c29a1850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f86c29d3870"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f86c29d3870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f86c23fb140"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f86c2947a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f86c2a4cb50"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f86c2a4cb50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f86c2a2fcf0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c2401490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c23e6e60"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f86c23f5b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f86c2401ce0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f86c2401ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f86c23e5720"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f86c23f7690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f86c2a4cb50"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c23e1910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c23ecc50"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c23ecc50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c23df020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c23e92b0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c23e92b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c23de440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c23e85d0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c23e85d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f86c2f9c020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f86c2f93570"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f86c2f9abe0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f86c2f911f0"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f86c2f980c0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f86c2f90020"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f86c2f975a0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f86c2f90da0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f86c2f96a50"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f86c2f8fb80"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f86c2f94020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f86c2f8ea20"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f86c2a110f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f86c2a4ab80"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f86c2a4ab80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f86c2a43b80"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2a35c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f86c299d9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f86c35814f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f86c294ba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f86c35814f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f86c28f1920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f86c29145c0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f86c29123c0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f86c28f4060"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f86c28f4060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28ee140"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f86c2911660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f86c28f3380"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f86c28f3380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28eab90"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f86c2910980"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f86c28f26a0"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f86c28f26a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28e5710"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28ed2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f86c2df5200"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28e9de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f86c2df3200"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28e4930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f86c2df1200"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ButtonControlC" loc="3:ButtonControlC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/ly/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/ly/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/ly/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/ly/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UserButtonC" loc="47:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="41(UserButtonC.SwitchToggleC):/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ButtonControlAppC.Timer0" loc="44(ButtonControlAppC.Timer0):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ButtonControlAppC.Timer1" loc="44(ButtonControlAppC.Timer1):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ButtonControlAppC.Timer2" loc="44(ButtonControlAppC.Timer2):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ButtonControlAppC.MoodTimerC" loc="44(ButtonControlAppC.MoodTimerC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="45:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/ly/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/ly/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f86c2f81230" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f86c2f815d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f86c2f81980" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f86c2f81d00" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f86c2f800d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f86c2f80440" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f86c2f807d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f86c2f80b60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f86c2f7f020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f86c2f44960" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f86c2f44d30" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f86c2da5a10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f86c2da5dc0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f86c2da41a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f86c2da4550" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f86c2da48c0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosb/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/ly/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f86c2a813b0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f86c2a813b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f86c2a44c80" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f86c2a44c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f86c2a2e570" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f86c2a2e570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f86c2a2ed40" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f86c2a2ed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f86c2a2d160" loc="57:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f86c2a2d160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f86c2a2d940" loc="58:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f86c2a2d940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f86c2a2dd10" loc="59:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f86c2a2b540" loc="60:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f86c2a2b540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f86c2a516e0" loc="52:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f86c2a516e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f86c2a0a020" loc="53:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f86c2a0a020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f86c2a0a410" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f86c2a0a410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f86c2a0abf0" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f86c2a0abf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f86c2a09020" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c29cecd0" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c29cecd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c2997230" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c2997230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f86c2997560" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c2949de0" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c2949de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer0" ref="0x7f86c3065020" loc="9:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x7f86c3065020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c3061630"/>
        <function-ref name="fired" scoped="" ref="0x7f86c3064a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c3063920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c30634a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c3060020"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c3061ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c3063020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c3065c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c3061020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c3064110"/>
        <function-ref name="stop" scoped="" ref="0x7f86c30645e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f86c307a0d0" loc="5:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f86c307a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f86c307a450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7f86c3060630" loc="10:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x7f86c3060630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c305cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c305e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c305c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c305eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c305b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c305b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c305e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c305f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c305c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c305f860"/>
        <function-ref name="stop" scoped="" ref="0x7f86c305fd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x7f86c3074540" loc="7:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f86c3074540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f86c307b5f0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c307b170"/>
        <function-ref name="notify" scoped="" ref="0x7f86c307ba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x7f86c3079aa0" loc="6:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f86c3079aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c307c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f86c3049a80" loc="12:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f86c3049a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f86c3049e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f86c3054020"/>
        <function-ref name="led1On" scoped="" ref="0x7f86c30541b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f86c3054340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f86c30544d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c3054660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f86c30547f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f86c3054e30"/>
        <function-ref name="set" scoped="" ref="0x7f86c3054980"/>
        <function-ref name="led0On" scoped="" ref="0x7f86c3054b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f86c3054ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7f86c305bba0" loc="11:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x7f86c305bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c3056110"/>
        <function-ref name="fired" scoped="" ref="0x7f86c3059630"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c30574a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c3057020"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c3056a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c3056590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c3059ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c305a7b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c3057ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c305ac80"/>
        <function-ref name="stop" scoped="" ref="0x7f86c30591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoodTimer" ref="0x7f86c3069a00" loc="8:ButtonControlC.nc">
      <component-ref qname="ButtonControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoodTimer" scoped="" ref="0x7f86c3069a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c3066020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c3072510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c3068300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c3072e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c3066920"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c30664a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c3072990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c3073670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c3068910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c3073b40"/>
        <function-ref name="stop" scoped="" ref="0x7f86c3072090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f86c30319d0" loc="58:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f86c30319d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c3031d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f86c3036510" loc="57:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f86c3036510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f86c3036890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c3033890" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c3033890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c3033c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f86c302b8a0" loc="6:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f86c302b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c302bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c302fa80" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c302fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c302fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f86c302b1c0" loc="5:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f86c302b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c302b540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f86c302a020" loc="7:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f86c302a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c302a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c302ec80" loc="2:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c302ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c30240a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f86c300e020" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f86c300e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c300e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f86c30046c0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f86c30046c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f86c300a660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f86c3004bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f86c3004d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f86c300a020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f86c3004a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f86c300a1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f86c300a340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f86c300a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c300b020" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c300b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c300b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f86c2ff43d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f86c2ff43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f86c2ff3340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f86c2ff48e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f86c2ff4a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f86c2ff4c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f86c2ff4750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f86c2ff4d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f86c2ff3020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f86c2ff31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f86c2ff3680" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f86c2ff3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f86c2ff3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c2ff5cb0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c2ff5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2ff40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f86c2fae5a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f86c2fae5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2fae920"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2faeab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2faec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2faedd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2fad020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2fad1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2fad340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2fad4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2fad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f86c2f9c020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f86c2f9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f9c3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f9c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f9c6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f9c850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f9c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f9cb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f9cd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f9b020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f86c2fa5700" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f86c2fa5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2fa5a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2fa5c10"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2fa5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2fa4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2fa41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2fa4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f86c2f8aa20" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f86c2f8aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f89020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f891b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f89340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f894d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f86c2facaa0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f86c2facaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2face20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2fab020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2fab1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2fab340"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2fab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f86c2f90020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f86c2f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f903a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f90530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f906c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f90850"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f909e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f86c2f87a20" loc="71:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f86c2f87a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f87da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f86020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f861b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f86340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f864d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f86c2f975a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f86c2f975a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f97920"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f97ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f97c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f97dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f96020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f961b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f96340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f964d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f96660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f86c2fb0b10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f86c2fb0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2fb7020"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2fb71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2fb7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2fb74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2fb7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2fb77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2fb7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2fb7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2fb7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f86c2f8ca20" loc="66:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f86c2f8ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f8b020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f8b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f8b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f8b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f86c2f923e0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f86c2f923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f92760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f928f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f92a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f92c10"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f92da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f86c2f9b5a0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f86c2f9b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f9ba20"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f9bbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f9bd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f9a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f9a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f9a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f9a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f9a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f86c2fa4700" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f86c2fa4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2fa4a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2fa4c10"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2fa4da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f9e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f9e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f86c2f89a20" loc="69:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f86c2f89a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f89da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f88020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f881b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f88340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f884d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f86c2f9abe0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f86c2f9abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f99020"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f991b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f99340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f994d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f99660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f997f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f99980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f99b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f99ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f86c2fab890" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f86c2fab890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2fabc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2fabda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2fa7020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2fa71b0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2fa7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f86c2fbf120" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f86c2fbf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2fbf4a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2fbf630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2fbf7c0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2fbf950"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2fbfae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2fbfc70"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2fbfe00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2fbe020"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2fbe1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2fbe340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2fbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f86c2f90da0" loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f86c2f90da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8f180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f8f310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f8f4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f8f630"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f8f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f86c2faf0c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f86c2faf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2faf440"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2faf5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2faf760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2faf8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2fafa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2fafc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2fafda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2fae020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2fae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f86c2f96a50" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f86c2f96a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f96dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f95020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f951b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f95340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f954d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f95660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f957f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f95980"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f95b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f86c2fa06d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f86c2fa06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2fa0a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2fa0be0"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2fa0d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2fa5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2fa51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2fa5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f86c2f8ba20" loc="67:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f86c2f8ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f8a020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f8a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f8a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f8a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f86c2fa8cf0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f86c2fa8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2fac0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2fac230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2fac3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2fac550"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2fac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f86c2f911f0" loc="60:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f86c2f911f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f91570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f91700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f91890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f91a20"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f91bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f86c2f88a20" loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f86c2f88a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f88da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f87020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f871b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f87340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f874d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f86c2f980c0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f86c2f980c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f98440"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f985d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f98760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f988f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f98a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f98c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f98da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f97020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f86c2f9e6c0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f86c2f9e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2f9ea40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2f9ebd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f9ed60"/>
        <function-ref name="get" scoped="" ref="0x7f86c2f9d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f9d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f9d340"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2f9d4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f9d660"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2f9d7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2f9d980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2f9db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f86c2f8fb80" loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f86c2f8fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f8e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f8e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f8e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f86c2f8da20" loc="65:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f86c2f8da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2f8c020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2f8c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f8c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f8c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2f8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f86c2f8ea20" loc="64:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f86c2f8ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f8d020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f8d1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f8d340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f8d4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f86c2f93570" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f86c2f93570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2f938f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2f93a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2f93c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2f93da0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2f92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f86c2f94020" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f86c2f94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f943a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2f94530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f946c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2f94850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2f949e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f94b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2f94d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2f93020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2f931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f86c2f4d2f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f86c2f4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f4d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f86c2f4fc20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f86c2f4fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f86c2f4d940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f86c2f4d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f4dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f86c2f4f5b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2f4f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f4f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2f51c80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2f51c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2f500a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2f50230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f503c0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2f50550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f506e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f50870"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2f50a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f50b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2f50d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2f4f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2f4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f86c2f462f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f86c2f462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f46670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f86c2f47c20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f86c2f47c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f86c2f46940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f86c2f46940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f46cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f86c2f475b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2f475b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2f47950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2f49c80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2f49c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2f480a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2f48230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2f483c0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2f48550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2f486e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2f48870"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2f48a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2f48b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2f48d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2f47020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2f471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2efaa90" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2efaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2efae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ef9020"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ef91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ef9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ef94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ef9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2f429d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2f429d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2f42d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2efb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2efb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2efb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2efb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2efb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2efb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2efb980"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2efbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ef7020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ef73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2efbde0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2efbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2efa180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2efa310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2efa4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2efa630"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2efa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ef9930" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ef9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ef9cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ef9e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ef8020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ef81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ef8340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ef84d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ef8660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ef87f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ef8980"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ef8b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ef8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ef1160" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ef1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ef14e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ef1670"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ef1800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ef1990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ef1b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ef1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ef4020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ef4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ef43a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ef4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ef46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ef4850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ef49e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ef4b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ef4d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2ef3020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2ef31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2eef7a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2eef7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eefb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ef3480" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ef3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ef3800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ef3990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ef3b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ef3cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ef3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ef0020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ef0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ef03a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ef0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ef06c0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ef0850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ef09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ef0b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ef0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eef020"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2eef1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2eef340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2eef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2eea7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2eea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eeab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2eeacb0"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2eeae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ee9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ee91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ee9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2eec6d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2eec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2eeca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2eecbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2eecd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2eeb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2eeb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2eeb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2eeb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2eeb660"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2eeb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ee8c50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ee8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ee7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2eebac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2eebac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eebe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2eea020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2eea1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2eea340"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2eea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ee9610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ee9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ee9990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ee9b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ee9cb0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ee9e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ee8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ee81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ee8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ee84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ee8660"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ee87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ee8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ee3cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ee3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ee10a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ee1230"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ee13c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ee1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ee16e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ee1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ee5b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ee5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ee4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ee41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ee4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ee44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ee4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ee47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ee4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2ee4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2ee4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2edf2f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2edf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2edf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ee3020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ee3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ee33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ee3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ee36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ee3850"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ee39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ee1b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ee1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ee0020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ee01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ee0340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ee04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ee0660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ee07f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ee0980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ee0b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ee0ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ee0e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2edf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2eda2f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2eda2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eda670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2eda800"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2eda990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2edab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2edacb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2edae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2edc220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2edc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2edc5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2edc730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2edc8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2edca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2edcbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2edcd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2edb020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2edb1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2edb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ed87a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ed87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ed8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2edb610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2edb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2edb990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2edbb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2edbcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2edbe40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2eda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ed9160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ed9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ed94e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ed9670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ed9800"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ed9990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ed9b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ed9cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ed9e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ed8020"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ed81b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ed8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ed84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ed37a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ed37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ed3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ed3cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ed3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ed1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ed11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ed1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ed56d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ed56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ed5a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ed5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ed5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ed4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ed41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ed4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ed44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2ed4660"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2ed47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ed0c50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ed0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ecf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ed4ac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ed4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ed4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ed3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ed31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ed3340"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ed34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ed1610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ed1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ed1990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ed1b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ed1cb0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ed1e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ed0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ed01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ed0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ed04d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ed0660"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ed07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ed0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ecbcb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ecbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eca0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2eca230"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2eca3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2eca550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eca6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2eca870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ecdb30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ecdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ecc020"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ecc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ecc340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ecc4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ecc660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ecc7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ecc980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2eccb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2eccca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ec82f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ec82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ec8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ecb020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ecb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ecb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ecb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ecb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ecb850"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ecb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ecab40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ecab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ec9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ec91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ec9340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ec94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ec9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ec97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ec9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ec9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ec9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ec9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ec8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ec32f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ec32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ec3670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ec3800"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ec3990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ec3b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ec3cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2ec3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ec5220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ec5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ec55a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ec5730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ec58c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ec5a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ec5be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ec5d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ec4020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2ec41b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2ec4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2ec07a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2ec07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2ec0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ec4610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ec4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ec4990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ec4b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ec4cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ec4e40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ec3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2ec1160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2ec1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2ec14e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ec1670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ec1800"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ec1990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ec1b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2ec1cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2ec1e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2ec0020"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2ec01b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2ec0340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2ec04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2ebb7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2ebb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ebbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2ebbcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2ebbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2eba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eba1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2eba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2ebd6d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2ebd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2ebda50"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2ebdbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ebdd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2ebc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2ebc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2ebc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2ebc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2ebc660"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2ebc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2eb9c50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2eb9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2ebcac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2ebcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2ebce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2ebb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2ebb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2ebb340"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ebb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2eba610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2eba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2eba990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2ebab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2ebacb0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ebae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2eb9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2eb91b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2eb9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eb94d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2eb9660"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2eb97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2eb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f86c2eb4cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f86c2eb4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eb30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f86c2eb3230"/>
        <function-ref name="captured" scoped="" ref="0x7f86c2eb33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2eb3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eb36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f86c2eb3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f86c2eb6b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f86c2eb6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2eb5020"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2eb51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2eb5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2eb54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2eb5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2eb57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2eb5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2eb5b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2eb5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f86c2eb02f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f86c2eb02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eb0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f86c2eb4020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f86c2eb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2eb43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2eb4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2eb46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2eb4850"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2eb49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f86c2eb3b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2eb3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2eb1020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2eb11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2eb1340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2eb14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2eb1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2eb17f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2eb1980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2eb1b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2eb1ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2eb1e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f86c2eaa240" loc="7:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f86c2eaa240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eaa5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f86c2eaeaa0" loc="4:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f86c2eaeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eaee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f86c2eab260" loc="5:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f86c2eab260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f86c2eab9f0" loc="6:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f86c2eab9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2eabd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f86c30f39e0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f86c30f39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f86c30f3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f86c32f0930" loc="51:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f86c32f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f86c32f0cb0"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f86c32f0e40"/>
        <function-ref name="sleep" scoped="" ref="0x7f86c340d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f86c32331e0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f86c32331e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f86c3233560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f86c300cb50" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f86c300cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f86c2e73b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f86c2e731b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f86c2e73340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f86c2e734d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f86c2e73020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f86c2e73660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f86c2e737f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f86c2e73980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f86c2e67dc0" loc="60:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f86c2e67dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2e66180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f86c2e74590" loc="57:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f86c2e74590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f86c2e74910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f86c2e676c0" loc="59:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f86c2e676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2e67a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f86c2e74c00" loc="58:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f86c2e74c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2e67020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f86c2e671b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f86c2e67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f86c35814f0" loc="48:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f86c35814f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f86c3581870"/>
        <function-ref name="runTask" scoped="" ref="0x7f86c3581a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f86c35123a0" loc="47:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f86c35123a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c3512720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f86c35128b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f86c3512a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f86c30bc320" loc="56:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f86c30bc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f86c30bc6a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f86c30bc830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f86c30b7880" loc="57:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f86c30b7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f86c30b7c00"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f86c30b7d90"/>
        <function-ref name="sleep" scoped="" ref="0x7f86c30ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f86c30bd420" loc="55:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f86c30bd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c30bd7a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f86c30bd930"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f86c30bdac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f86c2e5bcf0" loc="49:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f86c2e5bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f86c2e5adc0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2e5a940"/>
        <function-ref name="notify" scoped="" ref="0x7f86c2e592a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f86c3034ab0" loc="48:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f86c3034ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2e5b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f86c2e4bb20" loc="41:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f86c2e4bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2e4e020"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2e4e1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f86c2e4e340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f86c2e4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f86c2e54020" loc="40:/home/ly/tinyos-main/tos/platforms/telosb/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e54530"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e54850"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e54b70"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e54d00"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f86c2e37020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f86c2e37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e37530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e37850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e37b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e37d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e36020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e36340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e36660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e36a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e36c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f86c2e22020" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f86c2e22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e22530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e226c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e22850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e229e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e22b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e22d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e21340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e21660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e21a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e21c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f86c2dd9560" loc="145:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f86c2dd9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dd98e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dd9a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dd9c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dd9d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dd81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dd8340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dd84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dd8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dd87f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dd8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dd8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dd8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dd7020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f86c2db4570" loc="165:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f86c2db4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2db48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2db4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2db4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2db4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2db3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2db31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2db3340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2db34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2db3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2db37f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2db3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2db3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2db3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2db2020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2db21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f86c2dd7580" loc="146:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f86c2dd7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dd7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dd7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dd7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dd7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dd6340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dd6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dd67f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dd6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dd6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dd6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f86c2e1e020" loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f86c2e1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e1e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e1e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e1e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e1e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e1eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e1ed00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e1d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e1d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e1d340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e1d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e1d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e1d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e1da80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e1dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f86c2e0a200" loc="84:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f86c2e0a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e0a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e0a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e0a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e0aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e0abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e0ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e09020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e09340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e094d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e09660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e09980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e09c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e09da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f86c2df5200" loc="97:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f86c2df5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2df5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2df5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2df58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2df5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2df5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2df5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2df4020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2df41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2df4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2df44d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2df4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2df47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2df4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2df4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2df4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f86c2de5200" loc="108:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f86c2de5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2de5580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2de5710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2de58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2de5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2de5bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2de5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2de4020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2de41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2de4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2de44d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2de4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2de47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2de4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2de4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2de4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f86c2dd1580" loc="149:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f86c2dd1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dd1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dd1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dd1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dd1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dcf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dcf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dcf340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dcf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dcf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dcf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dcf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dcfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dcfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dce020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f86c2dc0570" loc="159:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f86c2dc0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dc08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dc0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dc0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dc0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dbf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dbf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dbf340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dbf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dbf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dbf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dbf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dbfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dbfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dbe020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f86c2dac580" loc="171:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f86c2dac580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dac900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2daca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dacc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dacdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dab020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dab340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dab660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dab7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dab980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dabb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dabca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2daa020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2daa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f86c2e31020" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f86c2e31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e31530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e31850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e31b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e31d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e30340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e30660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e30a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e30c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f86c2dce580" loc="150:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f86c2dce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dce900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dcea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dcec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dcedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dcd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dcd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dcd340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dcd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dcd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dcd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dcd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dcdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dcdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dcc020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f86c2e2c020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f86c2e2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e2c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e2c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e2c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e2c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e2c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e2cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e2cd00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e2b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e2b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e2b340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e2b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e2b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e2b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e2ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e2bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f86c2e18020" loc="74:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f86c2e18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e18530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e18850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e189e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e18b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e18d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e17020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e171b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e17340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e174d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e17660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e177f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e17a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e17c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f86c2e04200" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f86c2e04200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e04580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e04710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e04a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e04bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e04d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e03020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e03340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e034d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e03660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e03980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e03c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e03da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f86c2def200" loc="100:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f86c2def200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2def580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2def710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2def8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2defa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2defbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2defd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dee020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dee1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dee340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dee4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dee660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dee7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dee980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2deec10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2deeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f86c2ddf200" loc="111:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f86c2ddf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ddf580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ddf710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ddf8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ddfa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ddfbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ddfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dde020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dde1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dde340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dde4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dde660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dde7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dde980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ddec10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ddeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f86c2e3b020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f86c2e3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e3b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e3b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e3b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e3b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e3b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e3bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e3bd00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e3a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e3a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e3a340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e3a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e3a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e3a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e3aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e3ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f86c2e26020" loc="64:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f86c2e26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e264a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e26630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e267c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e26950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e26ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e26c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e26e00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e25020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e251b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e25340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e254d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e25660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e257f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e25a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e25c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f86c2e12020" loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f86c2e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e12530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e126c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e12850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e12b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e12d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e111b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e11340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e114d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e11660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e117f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e11a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e11c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f86c2ddb580" loc="144:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f86c2ddb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ddb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ddba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ddbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ddbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dda020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dda340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dda4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dda660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dda7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dda980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ddab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ddaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dd9020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f86c2dba570" loc="162:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f86c2dba570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dba8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dbaa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dbac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dbada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2db9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2db91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2db9340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2db94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2db9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2db97f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2db9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2db9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2db9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2db8020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2db81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f86c2dae570" loc="169:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f86c2dae570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dae8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2daea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2daec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2daeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dad340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dad7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dadb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dadca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dac020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f86c2dc6580" loc="155:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f86c2dc6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dc6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dc6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dc6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dc6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dc5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dc51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dc5340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dc54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dc5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dc57f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dc5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dc5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dc5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dc4020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dc41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f86c2e0e020" loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f86c2e0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e0e5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e0e730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e0e8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e0ea50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e0ebe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e0ed70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e0d020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e0d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e0d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e0d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e0d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e0d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e0d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e0dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e0dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f86c2df9200" loc="95:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f86c2df9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2df9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2df9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2df98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2df9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2df9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2df9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2df8020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2df81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2df8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2df84d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2df8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2df87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2df8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2df8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2df8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f86c2de9200" loc="106:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f86c2de9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2de9580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2de9710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2de98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2de9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2de9bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2de9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2de8020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2de81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2de8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2de84d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2de8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2de87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2de8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2de8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2de8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f86c2db8570" loc="163:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f86c2db8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2db88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2db8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2db8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2db8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2db7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2db71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2db7340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2db74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2db7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2db77f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2db7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2db7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2db7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2db6020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2db61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f86c2dcc570" loc="152:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f86c2dcc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dcc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dcca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dccc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dcb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dcb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dcb340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dcb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dcb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dcb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dcb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dcbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dcbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dca020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f86c2e35020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f86c2e35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e35530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e35850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e35b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e35d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e34020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e34340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e34660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e34a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e34c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f86c2e20020" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f86c2e20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e20530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e206c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e20850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e209e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e20b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e20d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e1f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e1f340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e1f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e1f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e1f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e1fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f86c2ded200" loc="104:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f86c2ded200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ded580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ded710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ded8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2deda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dedbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dedd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dec020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dec4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2decc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2decda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f86c2e1c020" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f86c2e1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e1c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e1c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e1c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e1c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e1c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e1cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e1cd00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e1b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e1b340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e1b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e1b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e1b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e1ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e1bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f86c2e08200" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f86c2e08200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e08580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e08710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e08a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e08bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e08d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e07020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e07340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e074d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e07660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e07980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e07c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e07da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f86c2df3200" loc="98:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f86c2df3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2df3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2df3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2df38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2df3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2df3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2df3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2df2020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2df21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2df2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2df24d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2df2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2df27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2df2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2df2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2df2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f86c2de3200" loc="109:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f86c2de3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2de3580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2de3710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2de38a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2de3a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2de3bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2de3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2de2020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2de21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2de2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2de24d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2de2660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2de27f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2de2980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2de2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2de2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f86c2dc8580" loc="154:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f86c2dc8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dc8900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dc8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dc8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dc8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dc7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dc71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dc7340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dc74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dc7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dc77f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dc7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dc7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dc7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dc6020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f86c2e480a0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f86c2e480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e48420"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e485b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e48740"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e488d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e48a60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e48bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e48d80"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e47340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e47a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f86c2e2a020" loc="62:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f86c2e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e2a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e2a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e2a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e2a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e2a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e2ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e2ad00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e29020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e291b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e29340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e294d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e29660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e297f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e29a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e29c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f86c2e16020" loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f86c2e16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e163a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e16530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e166c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e16850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e169e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e16b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e16d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e15020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e15340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e15660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e15a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e15c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f86c2e02200" loc="88:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f86c2e02200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e02580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e02710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e02a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e02bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e02d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e01020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e01340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e014d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e01660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e01980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e01c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e01da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f86c2dc4580" loc="156:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f86c2dc4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dc4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dc4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dc4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dc4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dc3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dc31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dc3340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dc34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dc3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dc37f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dc3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dc3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dc3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dc2020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f86c2dbe570" loc="160:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f86c2dbe570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dbe8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dbea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dbec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dbeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dbd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dbd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dbd340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dbd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dbd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dbd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dbd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dbdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dbdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dbc020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f86c2db2570" loc="166:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f86c2db2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2db28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2db2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2db2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2db2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2db1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2db11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2db1340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2db14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2db1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2db17f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2db1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2db1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2db1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2db0020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2db01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f86c2dfd200" loc="93:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f86c2dfd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dfd580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dfd710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dfd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dfda30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dfdbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dfdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dfc020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dfc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dfc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dfc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dfc660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dfc7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dfc980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dfcc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dfcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f86c2dc2580" loc="157:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f86c2dc2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dc2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dc2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dc2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dc2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dc1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dc11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dc1340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dc14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dc1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dc17f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dc1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dc1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dc1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dc0020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f86c2e39020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f86c2e39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e39530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e39850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e39b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e39d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e38340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e38a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f86c2e24020" loc="65:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f86c2e24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e24530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e246c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e24850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e249e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e24b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e24d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e23340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e23660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e23a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f86c2e10020" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f86c2e10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e10530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e106c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e10850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e10b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e10d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e0f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e0f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e0f340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e0f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e0f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e0f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e0fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e0fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f86c2dca580" loc="153:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f86c2dca580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dca900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dcaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dcac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dcadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dc9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dc91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dc9340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dc94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dc9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dc97f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dc9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dc9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dc9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dc8020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f86c2db6570" loc="164:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f86c2db6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2db68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2db6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2db6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2db6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2db5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2db51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2db5340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2db54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2db5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2db57f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2db5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2db5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2db5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2db4020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2db41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f86c2e0c200" loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f86c2e0c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e0c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e0c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e0c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e0ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e0cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e0cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e0b020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e0b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e0b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e0b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e0b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e0b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e0b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e0bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e0bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f86c2df7200" loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f86c2df7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2df7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2df7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2df78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2df7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2df7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2df7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2df6020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2df61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2df6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2df64d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2df6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2df67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2df6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2df6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2df6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f86c2de7200" loc="107:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f86c2de7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2de7580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2de7710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2de78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2de7a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2de7bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2de7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2de6020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2de61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2de6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2de64d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2de6660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2de67f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2de6980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2de6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2de6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f86c2e33020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f86c2e33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e33530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e33850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e33b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e33d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e32020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e32340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e32660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e32a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e32c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f86c2deb200" loc="105:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f86c2deb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2deb580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2deb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2deb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2deba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2debbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2debd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dea020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dea340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dea4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dea660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dea7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dea980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2deac10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2deada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f86c2e2e020" loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f86c2e2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e2e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e2e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e2e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e2e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e2e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e2eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e2ed00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e2d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e2d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e2d340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e2d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e2d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e2d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e2da80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e2dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f86c2e1a020" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f86c2e1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e1a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e1a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e1a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e1a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e1a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e1ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e1ad00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e19020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e19340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e19660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e19a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e19c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f86c2e06200" loc="86:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f86c2e06200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e06580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e06710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e06a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e06bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e06d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e05020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e05340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e054d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e05660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e05980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e05c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e05da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f86c2df1200" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f86c2df1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2df1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2df1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2df18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2df1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2df1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2df1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2df0020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2df01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2df0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2df04d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2df0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2df07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2df0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2df0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2df0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f86c2de1200" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f86c2de1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2de1580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2de1710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2de18a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2de1a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2de1bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2de1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2de0020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2de01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2de0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2de04d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2de0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2de07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2de0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2de0c10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2de0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f86c2e3d020" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f86c2e3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e3d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e3d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e3d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e3d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e3d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e3db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e3dd00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e3c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e3c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e3c340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e3c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e3c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e3c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e3ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e3cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f86c2e28020" loc="63:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f86c2e28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e28530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e286c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e28850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e289e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e28b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e28d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e27020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e271b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e27340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e274d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e27660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e277f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e27a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e27c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f86c2e14020" loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f86c2e14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2e143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2e14530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2e146c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2e14850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2e149e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2e14b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2e14d00"/>
        <function-ref name="get" scoped="" ref="0x7f86c2e13020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2e131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2e13340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2e134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2e13660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2e137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2e13a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2e13c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f86c2dff200" loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f86c2dff200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dff580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dff710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dff8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dffa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dffbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dffd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dfe020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dfe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dfe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dfe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dfe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dfe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dfe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dfec10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dfeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f86c2dd3560" loc="148:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f86c2dd3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dd38e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dd3a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dd3c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dd3d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dd2340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dd27f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dd2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dd2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f86c2dbc570" loc="161:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f86c2dbc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dbc8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dbca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dbcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dbcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dbb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dbb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dbb340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dbb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dbb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dbb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dbb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dbbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dbbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dba020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f86c2dd5580" loc="147:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f86c2dd5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dd5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dd5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dd4340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dd44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dd47f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dd4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dd4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dd4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dd3020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f86c2dfb200" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f86c2dfb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2dfb580"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dfb710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dfb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2dfba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2dfbbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2dfbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2dfa020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2dfa1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2dfa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2dfa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2dfa660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dfa7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dfa980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dfac10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dfada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f86c2db0570" loc="168:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f86c2db0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2db08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2db0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2db0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2db0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2daf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2daf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2daf340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2daf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2daf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2daf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2daf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2dafb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2dafca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2dae020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2dae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f86c2daa580" loc="172:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f86c2daa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2daa900"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2daaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2daac20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2daadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2da9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2da91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2da9340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2da94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2da9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2da97f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2da9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2da9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2da9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2da8020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2da81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f86c2ddd1f0" loc="143:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f86c2ddd1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ddd970"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2dddb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2dddc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ddde20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ddc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ddc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ddc340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ddc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ddc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ddc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ddc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ddcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ddcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ddb020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ddb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d7f6d0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d7f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d7fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d7fbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d7fd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d7d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d7d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d7d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d7d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d7d980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d7db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d7dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d7de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d7c120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d7c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d79100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d79100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d79480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d79610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d797a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d79930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d79ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d79c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d79de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d78340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d78660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d78a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d78c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d75d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d75d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d740e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d74270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d74400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d74590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d74720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d748b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d74a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d74bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d74d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d73020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d73340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d73760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d70740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d70740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d70ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d70c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d70de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d6f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d6f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d6f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d6f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d6f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d6f980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d6fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d6fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d6fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d6e120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d6e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d6b100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d6b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d6b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d6b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d6b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d6b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d6bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d6bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d6bde0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d6a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d6a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d6a340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d6a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d6a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d6a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d6aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d6ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d67d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d67d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d660e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d66270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d66400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d66590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d66720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d668b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d66a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d66bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d66d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d65020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d65340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d65760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d62740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d62740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d62ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d62c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d62de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d61020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d61340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d614d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d61660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d61980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d61b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d61ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d61e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d60120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d5d100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d5d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d5d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d5d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d5d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d5d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d5dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d5dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d5dde0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d5c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d5c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d5c340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d5c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d5c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d5c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d5ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d58d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d58d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d570e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d57270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d57400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d57590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d57720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d578b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d57a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d57bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d57d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d56020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d56340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d56760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d53740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d53740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d53ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d53c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d53de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d52020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d52340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d524d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d52660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d527f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d52980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d52b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d52ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d52e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d51120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d4e100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d4e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d4e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d4e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d4e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d4e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d4eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d4ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d4ede0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d4d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d4d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d4d340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d4d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d4d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d4d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d4da80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d4ad10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d4ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d490e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d49270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d49400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d49590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d49720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d498b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d49a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d49bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d49d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d48020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d48340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d48760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d45860" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d45860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d45be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d45d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d44020"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d44340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d44660"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d447f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d44980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d44b10"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d44ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d44e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d43020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d432b0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d43440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d40270" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d40270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d405f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d40780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d40910"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d40aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d40c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d40dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d3f020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d3f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d3f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d3f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d3f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d3f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d3f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d3fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d3fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d3cd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d3cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d3b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d3b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d3b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d3b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d3b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d3b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d3ba40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d3bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d3bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d3a020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d3a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d3a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d3a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d3a760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d3a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d37740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d37740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d37ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d37c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d37de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d35020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d35340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d354d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d35660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d35980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d35b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d35ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d35e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d34120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d31100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d31100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d31480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d31610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d317a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d31930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d31ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d31c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d31de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d30340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d30660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d30a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d30c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d2dd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d2dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d2c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d2c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d2c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d2c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d2c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d2c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d2ca40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d2cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d2cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d2b020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d2b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d2b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d2b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d2b760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d2b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d28740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d28740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d28ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d28c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d28de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d27020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d271b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d27340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d274d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d27660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d277f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d27980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d27b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d27ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d27e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d26120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d23100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d23100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d23480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d23610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d237a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d23930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d23ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d23c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d23de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d22020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d22340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d22660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d22a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d22c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d1fd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d1fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d1e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d1e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d1e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d1e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d1e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d1e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d1ea40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d1ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d1ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d1d020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d1d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d1d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d1d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d1d760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d1d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d1a740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d1a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d1aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d1ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d1ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d19020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d19340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d194d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d19660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d19980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d19b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d19ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d19e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d18120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d15100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d15100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d15480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d15610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d157a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d15930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d15ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d15c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d15de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d14020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d14340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d14660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d14a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d14c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d11d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d11d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d0f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d0f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d0f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d0f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d0f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d0f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d0fa40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d0fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d0fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d0e020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d0e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d0e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d0e760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d0ba60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d0ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d0bde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d0a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d0a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d0a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d0a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d0a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d0a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d0a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d0ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d0aca0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d0ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d09020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d09440"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d06460" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d06460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d067e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d06970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d06b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d06c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d06e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d051b0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d05340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d054d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d05660"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d057f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d05980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d05b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d05da0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2d02e00" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2d02e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2d011c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2d01350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2d014e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2d01670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2d01800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2d01990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2d01b20"/>
        <function-ref name="get" scoped="" ref="0x7f86c2d01cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2d01e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2d00020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2d001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2d00340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2d004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2d00760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2d008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cfd740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cfd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cfdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cfdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cfdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cfc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cfc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cfc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cfc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cfc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cfc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cfc980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cfcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cfcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cfce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cfb120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cfb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cf8100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cf8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cf8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cf8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cf87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cf8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cf8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cf8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cf8de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cf7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cf71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cf7340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cf74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cf7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cf77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cf7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cf7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cf4d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cf4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cf30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cf3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cf3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cf3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cf3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cf38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cf3a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cf3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cf3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cf2020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cf21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cf2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cf24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cf2760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cf28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cef740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cefac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cefc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cefde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cee980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ceeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ceeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ceee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ced120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ced2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ce9100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ce9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ce9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ce9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ce97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ce9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ce9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ce9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ce9de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ce8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ce81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ce8340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ce84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ce8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ce87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ce8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ce8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ce5d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ce5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ce40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ce4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ce4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ce4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ce4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ce48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ce4a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ce4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ce4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ce3020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ce31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ce3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ce34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ce3760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ce38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ce0740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ce0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ce0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ce0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ce0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cdf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cdf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cdf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cdf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cdf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cdf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cdf980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cdfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cdfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cdfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cde120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cde2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cdb100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cdb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cdb480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cdb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cdb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cdb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cdbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cdbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cdbde0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cda020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cda1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cda340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cda4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cda660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cda7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cdaa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cdac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cd7d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cd7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cd60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cd6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cd6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cd6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cd6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cd68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cd6a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cd6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cd6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cd5020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cd51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cd5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cd54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cd5760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cd58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cd2740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cd2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cd2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cd2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cd2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cd11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cd1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cd14d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cd1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cd17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cd1980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cd1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cd1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cd1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cd0120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cd02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ccd100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ccd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ccd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ccd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ccd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ccd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ccdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ccdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ccdde0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ccc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ccc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ccc340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ccc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ccc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ccc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ccca80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cc9d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cc9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cc70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cc7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cc7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cc7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cc7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cc78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cc7a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cc7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cc7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cc6020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cc61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cc6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cc64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cc6760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cc68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cc3740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cc3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cc3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cc3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cc3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cc2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cc21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cc2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cc24d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cc2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cc27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cc2980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cc2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cc2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cc2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cc1120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cc12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cbe100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cbe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cbe480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cbe610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cbe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cbe930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cbeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cbec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cbede0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cbd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cbd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cbd340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cbd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cbd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cbd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cbda80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cbdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cbad10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cbad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cb90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cb9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cb9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cb9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cb9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cb98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cb9a40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cb9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cb9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cb8020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cb81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cb8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cb84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cb8760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cb88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cb5740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cb5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cb5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cb5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cb5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cb4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cb41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cb4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cb44d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cb4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cb47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2cb4980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2cb4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2cb4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2cb4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cb3120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cb0100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cb0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cb0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cb0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cb07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cb0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cb0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cb0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2cb0de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2caf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2caf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2caf340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2caf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2caf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2caf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2cafa80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2cafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2cacd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2cacd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2cab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2cab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2cab400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2cab590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2cab720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2cab8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2caba40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2cabbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2cabd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2caa020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2caa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2caa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2caa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2caa760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2caa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ca7740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ca7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ca7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ca7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ca7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ca6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ca61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ca6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ca64d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ca6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ca67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ca6980"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ca6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ca6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ca6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ca5120"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ca52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2ca2100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2ca2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2ca2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2ca2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2ca27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2ca2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2ca2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2ca2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2ca2de0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2ca0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2ca01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2ca0340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2ca04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2ca0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2ca07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2ca0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2ca0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f86c2c9dd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f86c2c9dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2c9c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2c9c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2c9c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2c9c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2c9c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2c9c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2c9ca40"/>
        <function-ref name="get" scoped="" ref="0x7f86c2c9cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2c9cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2c9b020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2c9b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2c9b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2c9b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2c9b760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2c9b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f86c2c2b020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f86c2c2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c2b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c2b530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c2b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c2b850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c2b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c2bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f86c2c21020" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f86c2c21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c213a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c21530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c216c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c21850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c219e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c21b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f86c2c28020" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f86c2c28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c283a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c28530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c286c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c28850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c289e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c28b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f86c2c26020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f86c2c26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c263a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c26530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c266c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c26850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c269e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c26b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f86c2c2d020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f86c2c2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c2d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c2d530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c2d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c2d850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c2d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c2db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f86c2c23020" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f86c2c23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c234a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c23630"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c237c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c23950"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c23ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c23c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f86c2c2a020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f86c2c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c2a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c2a530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c2a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c2a850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c2a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c2ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f86c2c20020" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f86c2c20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c203a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c20530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c206c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c20850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c209e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c20b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f86c2c34120" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f86c2c34120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c344a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c34630"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c347c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c34950"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c34ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c34c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f86c2c25020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f86c2c25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c253a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c25530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c256c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c25850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c259e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c25b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f86c2c2c020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f86c2c2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c2c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c2c530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c2c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c2c850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c2c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c2cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f86c2c22060" loc="57:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f86c2c22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c223e0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c22570"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c22700"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c22890"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c22a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c22bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f86c2c29020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f86c2c29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c293a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c29530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c296c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c29850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c299e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c29b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f86c2c27020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f86c2c27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c273a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c27530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c276c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c27850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c279e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c27b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f86c2c32060" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f86c2c32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c323e0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c32570"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c32700"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c32890"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c32a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c32bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f86c2c24020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f86c2c24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c243a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c24530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c246c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c24850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c249e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c24b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f86c2c18bc0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f86c2c18bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c17020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c171b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c17340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c174d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c17660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f86c2c0ebc0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f86c2c0ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c0d020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c0d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c0d340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c0d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c0d660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c0d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f86c2c15bc0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f86c2c15bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c14020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c141b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c14340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c144d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c14660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f86c2c13bc0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f86c2c13bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c12020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c121b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c12340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c124d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c12660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f86c2c1bc40" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f86c2c1bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c1a020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c1a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c1a340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c1a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c1a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c1a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f86c2c10bc0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f86c2c10bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c0f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c0f230"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c0f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c0f550"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c0f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c0f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f86c2c17bc0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f86c2c17bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c16020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c161b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c16340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c164d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c16660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f86c2c0dbc0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f86c2c0dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c0c020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c0c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c0c340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c0c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c0c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c0c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f86c2c1fd40" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f86c2c1fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c1c0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c1c270"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c1c400"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c1c590"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c1c720"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c1c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f86c2c12bc0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f86c2c12bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c11020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c111b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c11340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c114d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c11660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c117f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f86c2c1abc0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f86c2c1abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c18020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c181b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c18340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c184d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c18660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f86c2c0fc40" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f86c2c0fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c0e020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c0e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c0e340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c0e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c0e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c0e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f86c2c16bc0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f86c2c16bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c15020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c151b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c15340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c154d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c15660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f86c2c14bc0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f86c2c14bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c13020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c131b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c13340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c134d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c13660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f86c2c1cc80" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f86c2c1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c1b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c1b230"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c1b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c1b550"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c1b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c1b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f86c2c11bc0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f86c2c11bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2c10020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2c101b0"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2c10340"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2c104d0"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2c10660"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2c107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f86c2b29480" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c2b29480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2b29800"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2b29990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c2b29b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2b29cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2b29e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c2b27020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2b271b0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2b27340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c2b274d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c2b27660"/>
        <function-ref name="set" scoped="" ref="0x7f86c2b277f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c2b27980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c2b27b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c2b27da0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2b26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f86c2b3a250" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2b3a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2b3a5d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2b3a760"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2b3a8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2b3aa80"/>
        <function-ref name="get" scoped="" ref="0x7f86c2b3ac10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2b3ada0"/>
        <function-ref name="set" scoped="" ref="0x7f86c2b29020"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2b291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f86c2b16020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f86c2b16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2b163a0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2b16530"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2b166c0"/>
        <function-ref name="edge" scoped="" ref="0x7f86c2b16850"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2b169e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f86c2b16b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f86c2b23490" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f86c2b23490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2b23810"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2b239a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f86c2b23b30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f86c2b23cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f86c2af8480" loc="51:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f86c2af8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f86c2af8800"/>
        <function-ref name="runTask" scoped="" ref="0x7f86c2af8990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f86c2af98f0" loc="46:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f86c2af98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f86c2af9c70"/>
        <function-ref name="disable" scoped="" ref="0x7f86c2af9e00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f86c2af8020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f86c2af81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f86c2afcca0" loc="43:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f86c2afcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f86c2afbd40"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2afb8c0"/>
        <function-ref name="notify" scoped="" ref="0x7f86c2afa1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f86c2afeb10" loc="42:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f86c2afeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2afc750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f86c2afa660" loc="45:/home/ly/tinyos-main/tos/platforms/telosb/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c2afa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2afa9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2afab70"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2afad00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2af9020"/>
        <function-ref name="get" scoped="" ref="0x7f86c2af91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2af9340"/>
        <function-ref name="set" scoped="" ref="0x7f86c2af94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2af9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GetLower" ref="0x7f86c2aef370" loc="45:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GetLower" scoped="" ref="0x7f86c2aef370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2aee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f86c2af2640" loc="43:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f86c2af2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f86c2af0810"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2af0390"/>
        <function-ref name="notify" scoped="" ref="0x7f86c2af0c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f86c2aee690" loc="46:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f86c2aee690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f86c2aed810"/>
        <function-ref name="enable" scoped="" ref="0x7f86c2aed390"/>
        <function-ref name="notify" scoped="" ref="0x7f86c2aedc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x7f86c2af3380" loc="42:/home/ly/tinyos-main/tos/platforms/telosb/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Get" scoped="" ref="0x7f86c2af3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f86c307f4d0"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f86c307fdf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2af2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2936370" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonControlAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2936370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c2932870"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2935e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c2933c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c2933780"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c29311e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c2932cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c2933300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2935020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c2932260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c29354f0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c29359c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f86c2ad9d80" loc="49:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ad9d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c2ad2220"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2ad57f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c2ad45b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c2ad4130"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c2ad2b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c2ad26a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c2ad5c70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2ad69a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c2ad4bc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c2ad6e70"/>
        <function-ref name="stop" scoped="" ref="0x7f86c2ad5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f86c2ace790" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f86c2ace790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c2acac40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2acb220"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c2aca020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c2acbb20"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c2ac9590"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c2ac9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c2acb6a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2acc3b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c2aca630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c2acc880"/>
        <function-ref name="stop" scoped="" ref="0x7f86c2accd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f86c2ac71a0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f86c2ac71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2ac7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c2ad19a0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c2ad19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2ad1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f86c29d3870" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f86c29d3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c29cf090"/>
        <function-ref name="fired" scoped="" ref="0x7f86c29d1090"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c29d1a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c29d1550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c29cf550"/>
        <function-ref name="start" scoped="" ref="0x7f86c29d26a0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c29d2bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c29d3020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c29d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c29d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f86c2401ce0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f86c2401ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c23fe670"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23ff550"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c23fe020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c23ffa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c23feb30"/>
        <function-ref name="start" scoped="" ref="0x7f86c2400b60"/>
        <function-ref name="stop" scoped="" ref="0x7f86c23ff090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c2401490" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c2401490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2401810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f86c23e85d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c23e85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c23e8950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c23e8ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c23e8c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c23e8e00"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f86c23ecc50" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c23ecc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c23ea020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c23ea1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c23ea340"/>
        <function-ref name="get" scoped="" ref="0x7f86c23ea4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c23ea660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c23ea7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c23ea980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c23eab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c23eaca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c23eae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c23e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f86c23e92b0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c23e92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c23e9630"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c23e97c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c23e9950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c23e9ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c23e9c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c23e9e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c23e8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c23e81b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c23e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f86c2aa1210" loc="52:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c2aa1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c2aa1590"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c2aa1720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c2aa18b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c2aa1a40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2aa1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f86c2aa8c00" loc="50:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2aa8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2aa5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2aa51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2aa5340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2aa54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2aa5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2aa57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2aa5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2aa5b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2aa5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2aa5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2aa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f86c2aa48b0" loc="51:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c2aa48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c2aa4c30"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c2aa4dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2aa2020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c2aa21b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c2aa2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2aa24d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c2aa2660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c2aa27f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c2aa2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f86c23de440" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f86c23de440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f86c23de7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f86c23de950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f86c23deae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f86c23dec70"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23dee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f86c23e1910" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c23e1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c23e1c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c23e1e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c23e0020"/>
        <function-ref name="get" scoped="" ref="0x7f86c23e01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c23e0340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c23e04d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c23e0660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c23e07f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c23e0980"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c23e0b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c23e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f86c23e5720" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f86c23e5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c23e1020"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23e2020"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c23e29a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c23e24e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c23e14e0"/>
        <function-ref name="start" scoped="" ref="0x7f86c23e45b0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c23e4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c23e6e60" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c23e6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c23e5210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f86c23df020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f86c23df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f86c23df3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f86c23df530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c23df6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f86c23df850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f86c23df9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c23dfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f86c23dfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f86c23de020"/>
        <function-ref name="setControl" scoped="" ref="0x7f86c23de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f86c2a4cb50" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f86c2a4cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2a509b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a4f360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a50e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a4f820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f86c2a4ab80" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f86c2a4ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2a479b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a46360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a47e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a46820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f86c2a35c50" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f86c2a35c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f86c2a33020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f86c2a331b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f86c2a33340"/>
        <function-ref name="get" scoped="" ref="0x7f86c2a334d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f86c2a33660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a337f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f86c2a33980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a33b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a33ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f86c2a33e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f86c2a32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f86c2a43b80" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f86c2a43b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2a429b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a35360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a42e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a35820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f86c2a110f0" loc="63:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f86c2a110f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2a10020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a109a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a104e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a10e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f86c2a2fcf0" loc="62:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f86c2a2fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c2a14b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c2a12550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c2a12090"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c2a12a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f86c23fb140" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f86c23fb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c23f8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23f99f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c23f84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c23f8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c23f7020"/>
        <function-ref name="start" scoped="" ref="0x7f86c23f9020"/>
        <function-ref name="stop" scoped="" ref="0x7f86c23f9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f86c23f5b90" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f86c23f5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3080640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f86c30809b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c23f14e0"/>
        <function-ref name="fired" scoped="" ref="0x7f86c23f24e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c23f2e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c23f29a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c23f19a0"/>
        <function-ref name="start" scoped="" ref="0x7f86c23f39d0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c23f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f86c23f7690" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f86c23f7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c23f65b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c23f5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c23f6a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c23f54e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f86c299d9c0" loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f86c299d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f86c299dd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f86c299c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f86c29a1850" loc="49:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f86c29a1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c299d090"/>
        <function-ref name="fired" scoped="" ref="0x7f86c299e090"/>
        <function-ref name="startAt" scoped="" ref="0x7f86c299ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c299e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f86c299d550"/>
        <function-ref name="start" scoped="" ref="0x7f86c299f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c299fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c29a62f0" loc="48:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c29a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c29a2870"/>
        <function-ref name="fired" scoped="" ref="0x7f86c29a4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c29a3c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c29a3780"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c29a11e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c29a2cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c29a3300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c29a4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c29a2260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c29a44f0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c29a49c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f86c294ba00" loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f86c294ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f86c294bd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f86c294a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f86c2951640" loc="49:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f86c2951640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c294dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c294e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c294d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c294eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c294b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c294b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c294e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c294f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c294d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c294f860"/>
        <function-ref name="stop" scoped="" ref="0x7f86c294fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2956150" loc="48:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2956150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c2952700"/>
        <function-ref name="fired" scoped="" ref="0x7f86c2955c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c2954a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c29545b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c2951090"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c2952ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c2954110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2956d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c29520d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c29552a0"/>
        <function-ref name="stop" scoped="" ref="0x7f86c2955790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f86c2948790" loc="48:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f86c2948790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c29473f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f86c2947a60" loc="49:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f86c2947a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f86c293d890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f86c293c260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f86c293dd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f86c293c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2930c90" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonControlAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2930c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c292b170"/>
        <function-ref name="fired" scoped="" ref="0x7f86c292d720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c292c510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c292c090"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c292ba70"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c292b5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c292dba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c292f8a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c292cb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c292fd70"/>
        <function-ref name="stop" scoped="" ref="0x7f86c292d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c29296d0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonControlAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c29296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c2925c40"/>
        <function-ref name="fired" scoped="" ref="0x7f86c29261e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c2925020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c2926ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c2924590"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c2924110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c2926660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2928390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c2925630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c2928860"/>
        <function-ref name="stop" scoped="" ref="0x7f86c2928d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f86c2922b00" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="ButtonControlAppC.MoodTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f86c2922b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f86c3081a30"/>
            <typename><typedef-ref name="TMilli" ref="0x7f86c3080200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f86c291d110"/>
        <function-ref name="fired" scoped="" ref="0x7f86c291f5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f86c291e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f86c291e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f86c291da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f86c291d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f86c291fa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f86c2920750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f86c291eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f86c2920c20"/>
        <function-ref name="stop" scoped="" ref="0x7f86c291f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f86c2918260" loc="46:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f86c2918260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f86c29185e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f86c2918770"/>
        <function-ref name="led1On" scoped="" ref="0x7f86c2918900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f86c2918a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f86c2918c20"/>
        <function-ref name="get" scoped="" ref="0x7f86c2918db0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f86c2917020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f86c2917660"/>
        <function-ref name="set" scoped="" ref="0x7f86c29171b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f86c2917340"/>
        <function-ref name="led2On" scoped="" ref="0x7f86c29174d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f86c29123c0" loc="50:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f86c29123c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2912740"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c29128d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2912a60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2912bf0"/>
        <function-ref name="get" scoped="" ref="0x7f86c2912d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2911020"/>
        <function-ref name="set" scoped="" ref="0x7f86c29111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2911340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f86c29145c0" loc="46:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c29145c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c2914940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f86c2911660" loc="51:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f86c2911660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c29119e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c2911b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c2911d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c2910020"/>
        <function-ref name="get" scoped="" ref="0x7f86c29101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c2910340"/>
        <function-ref name="set" scoped="" ref="0x7f86c29104d0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c2910660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f86c2914bc0" loc="47:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f86c2914bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f86c2913020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f86c29131b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f86c2913340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f86c29134d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f86c2913660"/>
        <function-ref name="get" scoped="" ref="0x7f86c29137f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f86c2913980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f86c2912020"/>
        <function-ref name="set" scoped="" ref="0x7f86c2913b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f86c2913ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f86c2913e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f86c2910980" loc="52:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f86c2910980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c2910d00"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c290f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c290f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c290f340"/>
        <function-ref name="get" scoped="" ref="0x7f86c290f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c290f660"/>
        <function-ref name="set" scoped="" ref="0x7f86c290f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c290f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f86c28f4060" loc="41:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f86c28f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28f43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28f4570"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28f4700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28f4890"/>
        <function-ref name="get" scoped="" ref="0x7f86c28f4a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28f4bb0"/>
        <function-ref name="set" scoped="" ref="0x7f86c28f4d40"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f86c28f3380" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f86c28f3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28f3700"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28f3890"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28f3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28f3bb0"/>
        <function-ref name="get" scoped="" ref="0x7f86c28f3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28f2020"/>
        <function-ref name="set" scoped="" ref="0x7f86c28f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f86c28f1920" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f86c28f1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f86c28f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f86c28f26a0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f86c28f26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28f2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28f2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28f2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28f1020"/>
        <function-ref name="get" scoped="" ref="0x7f86c28f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28f1340"/>
        <function-ref name="set" scoped="" ref="0x7f86c28f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28f1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f86c28ed2f0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28ed670"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28ed800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c28ed990"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28edb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28edcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c28ede40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28ec020"/>
        <function-ref name="get" scoped="" ref="0x7f86c28ec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c28ec340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c28ec4d0"/>
        <function-ref name="set" scoped="" ref="0x7f86c28ec660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c28ec7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c28ec980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c28ecc10"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f86c28ee140" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28ee140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28ee4c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28ee650"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28ee7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28ee970"/>
        <function-ref name="get" scoped="" ref="0x7f86c28eeb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28eec90"/>
        <function-ref name="set" scoped="" ref="0x7f86c28eee20"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f86c28e9de0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28e9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28e8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28e8310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c28e84a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28e8630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28e87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c28e8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28e8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f86c28e8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c28e8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c28e7020"/>
        <function-ref name="set" scoped="" ref="0x7f86c28e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c28e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c28e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c28e7760"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f86c28eab90" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28eab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28e9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28e94d0"/>
        <function-ref name="get" scoped="" ref="0x7f86c28e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28e97f0"/>
        <function-ref name="set" scoped="" ref="0x7f86c28e9980"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28e9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f86c28e4930" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f86c28e4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28e4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28e4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f86c28e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28e3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f86c28e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28e3660"/>
        <function-ref name="get" scoped="" ref="0x7f86c28e37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f86c28e3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f86c28e3b10"/>
        <function-ref name="set" scoped="" ref="0x7f86c28e3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f86c28e3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f86c28e2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f86c28e22b0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28e2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f86c28e5710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f86c28e5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f86c28e5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f86c28e5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f86c28e5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f86c28e4020"/>
        <function-ref name="get" scoped="" ref="0x7f86c28e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f86c28e4340"/>
        <function-ref name="set" scoped="" ref="0x7f86c28e44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f86c28e4660"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c30786b0" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c30786b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f86c306b420" loc="136:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f86c306fd60" loc="83:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f86c306db10" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f86c306d540" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f86c306d880" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f86c306ed60" loc="98:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f86c3069460" loc="151:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f86c306bbb0" loc="144:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f86c306e570" loc="92:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f86c30712a0" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f86c3071020" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f86c306caa0" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f86c306c4d0" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f86c306c810" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f86c3071d60" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f86c3071ae0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f86c306f650" loc="78:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f86c307dc90" loc="60:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f86c3077390" loc="52:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f86c3077390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f86c30764b0" loc="67:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f86c3077c60" loc="59:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f86c3074020" loc="74:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f86c3077390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f86c3076c40" loc="74:/home/ly/tinyos-main/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f86c3077390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/home/ly/tinyos-main/tos/interfaces/Get.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f86c307ace0" loc="49:/home/ly/tinyos-main/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f86c307ace0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f86c30795c0" loc="55:/home/ly/tinyos-main/tos/interfaces/Get.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f86c307ace0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f86c3050a60" loc="61:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f86c304f270" loc="67:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f86c304fa50" loc="72:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f86c304da20" loc="83:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f86c304b1f0" loc="100:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f86c304ba00" loc="117:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f86c304d270" loc="77:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f86c30495a0" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f86c3049320" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f86c30502d0" loc="56:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f86c304c270" loc="89:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f86c304ca00" loc="94:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/ly/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f86c3031520" loc="62:/home/ly/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f86c3004420" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f86c3006700" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f86c3005ce0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f86c3006020" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f86c3006e70" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f86c30070e0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f86c30077c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f86c30055c0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f86c30f3540" loc="62:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f86c3459670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f86c2fb1020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f86c2fb2cc0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f86c2fb5390" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f86c2ffcec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f86c2ffb940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f86c2fb1890" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f86c2fb07b0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f86c2fb2560" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f86c2fb0020" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f86c2fb5b30" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f86c2fb4350" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f86c2fb4da0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f86c2ffcec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f86c2ffb940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f86c2fb4b20" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f86c2ffcec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f86c2ffb940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f86c2fa30e0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f86c2fa1730" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f86c2fa14b0" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f86c2fa02e0" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f86c2fa0060" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f86c2fa2ca0" loc="73:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f86c2fa23e0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f86c2fa3a90" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f86c2fa3810" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f86c2faa3e0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f86c2faad60" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f86c2faaae0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f86c2fa9790" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f86c2fa9510" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f86c2fa82a0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f86c2fa8020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f86c2fa8990" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f86c2fbba80" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f86c2fb8350" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f86c2fb80d0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f86c2fb91f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f86c2fc0cb0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f86c2fb9930" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f86c2fbdc10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f86c2fbb390" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f86c2fbd4d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f86c2fbc350" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f86c2fbcc60" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f86c2fbc9e0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f86c2fb8d60" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f86c2fb8ae0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f86c3f5c520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f86c2f7d9f0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f86c30b8e70" loc="85:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f86c30b75e0" loc="86:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f86c30b86a0" loc="79:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f86c340ddc0" loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f86c3513020" loc="57:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f86c3512020" loc="72:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f86c3513790" loc="65:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f86c3507350" loc="67:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f86c3507ba0" loc="75:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f86c2e4b7e0" loc="68:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f86c2e4b020" loc="61:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f86c2e4c720" loc="54:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f86c2e53dc0" loc="53:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f86c2e51730" loc="44:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f86c2e51e60" loc="45:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f86c2e527d0" loc="42:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f86c2e50cf0" loc="47:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f86c2e51020" loc="43:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f86c2e505b0" loc="46:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f86c2e559c0" loc="40:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f86c2e520e0" loc="41:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f86c2e433b0" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f86c2e43b00" loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f86c2e3e390" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f86c350ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f86c2e3e110" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f86c2e46c10" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f86c2e429d0" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f86c2e3ec80" loc="117:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f86c2e42270" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f86c2e44be0" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f86c2e3f0e0" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f86c2e443e0" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f86c3f5c160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f86c2e49d50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f86c2e41190" loc="92:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f86c2e3f880" loc="101:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f86c2e41950" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f86c2e464c0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f86c2c30270" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f86c2c2fd10" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f86c2c31a50" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f86c2c2f4f0" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f86c2c2f270" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f86c2c312b0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f86c2c30a70" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c2ac5350" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c2ac5350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f86c2ac5c70" loc="61:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f86c3f5c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c2ac2c80" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c2ac2c80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f86c2abe020" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f86c2abbc50" loc="109:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f86c2abdba0" loc="78:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f86c2abb2b0" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f86c2abcbd0" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f86c2abb020" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f86c2abc3b0" loc="88:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f86c2ab9480" loc="116:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f86c2abeb80" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f86c2abe900" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2abe020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f86c2abd3e0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f86c2a4e100" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f86c2a4e100"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f86c2a4e340" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2a4e340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f86c2a4ec60" loc="64:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f86c2a4e340"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f86c2a4dd70" loc="76:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f86c2a4d510" loc="71:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f86c3517090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f86c2a4c500" loc="82:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
