<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TempTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb770ebd640"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb770e860c0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb770e860c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb770cc6590"/></to>
    </wire>
    <wire loc="10:TempTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb770ea48d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb770e605a0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb770e605a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb770ca9020"/></to>
    </wire>
    <wire loc="11:TempTestAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770eb3770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770896370"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770896370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:TempTestAppC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x7fb770e9f330"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fb77034f310"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7fb77034f310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7fb76f8968d0"/></to>
    </wire>
    <wire loc="18:TempTestAppC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x7fb770ea3c70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb770346750"/></to>
    </wire>
    <wire loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fb770346750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb76f7a9bd0"/></to>
    </wire>
    <wire loc="20:TempTestAppC.nc">
      <from><interface-ref name="HumidityRead" scoped="" ref="0x7fb770e9e530"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fb77034a240"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7fb77034a240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7fb76f893790"/></to>
    </wire>
    <wire loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770013150"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f774060"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770299c60"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f7fc1b0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb7705cccd0"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f8d9020"/></to>
    </wire>
    <wire loc="45:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770886e10"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770a2e400"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb770cc6c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb7713613a0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb7713613a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb770f0c140"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fb770cb96c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770e85470"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb770e85470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770e816a0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770cb9dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb770e81db0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fb770e7fbf0"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb770e7fbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770e5fb60"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fb770e7d4e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770e80a20"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fb770e7dbc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770c80c40"/></to>
    </wire>
    <wire loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb770e5fb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770e46940"/></to>
    </wire>
    <wire loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb770e552c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb770e45020"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb770f434c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb770e44360"/></to>
    </wire>
    <wire loc="113:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fb770e015a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d3e6d0"/></to>
    </wire>
    <wire loc="126:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fb770def020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d37b30"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fb770df8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d44160"/></to>
    </wire>
    <wire loc="149:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fb770ddca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d1dcb0"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb770dffaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d45480"/></to>
    </wire>
    <wire loc="148:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fb770de2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d1d020"/></to>
    </wire>
    <wire loc="170:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fb770dd9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d06cb0"/></to>
    </wire>
    <wire loc="154:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fb770dea5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d17220"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb770e02b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d949d0"/></to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fb770ddea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d2c2f0"/></to>
    </wire>
    <wire loc="134:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fb770de43e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d2d610"/></to>
    </wire>
    <wire loc="133:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fb770dee5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d2e220"/></to>
    </wire>
    <wire loc="115:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fb770df7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d3c7a0"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fb770ddba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d152f0"/></to>
    </wire>
    <wire loc="140:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fb770dedbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d276d0"/></to>
    </wire>
    <wire loc="114:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fb770dfe890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d3dac0"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb770e12120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770da3c80"/></to>
    </wire>
    <wire loc="155:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fb770de2da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d16610"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb770e080c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d46020"/></to>
    </wire>
    <wire loc="161:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fb770de8a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d106d0"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fb770df26d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d4ca90"/></to>
    </wire>
    <wire loc="142:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fb770ddda20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d257a0"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb770dfacf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d4dde0"/></to>
    </wire>
    <wire loc="141:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fb770de31f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d26ac0"/></to>
    </wire>
    <wire loc="163:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fb770ddaa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d0d7a0"/></to>
    </wire>
    <wire loc="147:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fb770deb0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d1fb30"/></to>
    </wire>
    <wire loc="120:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="162:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fb770de1b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d0eac0"/></to>
    </wire>
    <wire loc="128:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fb770ddfa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb770d35cb0"/></to>
    </wire>
    <wire loc="169:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fb770de0a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d06020"/></to>
    </wire>
    <wire loc="127:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fb770de5570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb770d35020"/></to>
    </wire>
    <wire loc="168:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fb770de6020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb770d08b30"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb770da1c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770da15b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb770da02f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb770d01aa0"/></to>
    </wire>
    <wire loc="96:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb770da0940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb770cfd260"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d4b930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770da3c80"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d49020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770da15b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d43020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770da3c80"/></to>
    </wire>
    <wire loc="110:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d427a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770da15b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d3b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770da3c80"/></to>
    </wire>
    <wire loc="117:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d3ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770da15b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb770d99c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb770d982f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb770cfd9f0"/></to>
    </wire>
    <wire loc="123:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb770d98940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb770cfc240"/></to>
    </wire>
    <wire loc="129:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d34b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="130:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d322f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d2b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="137:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d2a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d24610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="144:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d23c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d1cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="151:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d1a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d14160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="158:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d137a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d0c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="165:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d0bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770d05b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></to>
    </wire>
    <wire loc="172:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb770d032f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb770f0a040"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fb770f06490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fb7712f83b0"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb770c80c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770cac8e0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb770ca07b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fb770c84360"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb770c84360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a69020"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb770ca7980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fb770c836a0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb770c836a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a55b90"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb770ca5ca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fb770c819c0"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb770c819c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a4f710"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a582f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fb770c29200"/></to>
    </wire>
    <wire loc="486:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fb770c29200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b05740"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a53de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fb770c27200"/></to>
    </wire>
    <wire loc="487:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fb770c27200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b00100"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a4e930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fb770c25200"/></to>
    </wire>
    <wire loc="488:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fb770c25200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770afcd10"/></to>
    </wire>
    <wire loc="442:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb770c6a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b9f100"/></to>
    </wire>
    <wire loc="455:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb770c56020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b6fd10"/></to>
    </wire>
    <wire loc="531:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fb770c0c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b61d10"/></to>
    </wire>
    <wire loc="551:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fb770be7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad5100"/></to>
    </wire>
    <wire loc="532:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fb770c0a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b5c740"/></to>
    </wire>
    <wire loc="460:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fb770c52020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b65100"/></to>
    </wire>
    <wire loc="473:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fb770c3d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b36e00"/></to>
    </wire>
    <wire loc="497:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb770c18200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770adfd10"/></to>
    </wire>
    <wire loc="535:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fb770c04580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b52d10"/></to>
    </wire>
    <wire loc="545:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fb770bf4570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770af2100"/></to>
    </wire>
    <wire loc="557:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fb770bdf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad1d10"/></to>
    </wire>
    <wire loc="445:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb770c64020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b90100"/></to>
    </wire>
    <wire loc="536:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fb770c02580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b4d740"/></to>
    </wire>
    <wire loc="450:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb770c60020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b87740"/></to>
    </wire>
    <wire loc="463:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fb770c4c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b57100"/></to>
    </wire>
    <wire loc="476:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fb770c37200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b27d10"/></to>
    </wire>
    <wire loc="489:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fb770c23200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770af7740"/></to>
    </wire>
    <wire loc="500:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb770c12200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad1d10"/></to>
    </wire>
    <wire loc="440:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb770c6e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ba9d10"/></to>
    </wire>
    <wire loc="453:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb770c5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b78860"/></to>
    </wire>
    <wire loc="466:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fb770c45020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b48100"/></to>
    </wire>
    <wire loc="530:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fb770c0e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b61d10"/></to>
    </wire>
    <wire loc="548:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fb770bee570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ae3100"/></to>
    </wire>
    <wire loc="555:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fb770be1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad1d10"/></to>
    </wire>
    <wire loc="541:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fb770bfa580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b0ad10"/></to>
    </wire>
    <wire loc="471:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fb770c41020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b3fa60"/></to>
    </wire>
    <wire loc="484:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fb770c2d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b0f100"/></to>
    </wire>
    <wire loc="495:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb770c1d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ae9740"/></to>
    </wire>
    <wire loc="549:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fb770bec570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770adfd10"/></to>
    </wire>
    <wire loc="538:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fb770c00570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b19d10"/></to>
    </wire>
    <wire loc="443:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb770c68020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b9ad10"/></to>
    </wire>
    <wire loc="456:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb770c54020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b6a740"/></to>
    </wire>
    <wire loc="493:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb770c21200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770af2100"/></to>
    </wire>
    <wire loc="461:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fb770c50020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b61d10"/></to>
    </wire>
    <wire loc="474:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fb770c3b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b31740"/></to>
    </wire>
    <wire loc="498:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb770c16200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ada740"/></to>
    </wire>
    <wire loc="540:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fb770bfc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b0f100"/></to>
    </wire>
    <wire loc="438:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb770c7b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770bb26d0"/></to>
    </wire>
    <wire loc="451:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb770c5e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b82100"/></to>
    </wire>
    <wire loc="464:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fb770c49020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b52d10"/></to>
    </wire>
    <wire loc="477:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fb770c35200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b22740"/></to>
    </wire>
    <wire loc="542:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fb770bf8580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b48100"/></to>
    </wire>
    <wire loc="546:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fb770bf2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770aeed10"/></to>
    </wire>
    <wire loc="552:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fb770be5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad1d10"/></to>
    </wire>
    <wire loc="482:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fb770c31200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b19d10"/></to>
    </wire>
    <wire loc="543:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fb770bf6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b44d10"/></to>
    </wire>
    <wire loc="441:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb770c6c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ba4740"/></to>
    </wire>
    <wire loc="454:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb770c58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b73270"/></to>
    </wire>
    <wire loc="467:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fb770c43020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b44d10"/></to>
    </wire>
    <wire loc="539:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fb770bfe580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b14740"/></to>
    </wire>
    <wire loc="550:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fb770be9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ada740"/></to>
    </wire>
    <wire loc="472:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fb770c3f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b3a460"/></to>
    </wire>
    <wire loc="485:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fb770c2b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b0ad10"/></to>
    </wire>
    <wire loc="496:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb770c1a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ae3100"/></to>
    </wire>
    <wire loc="444:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb770c66020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b95740"/></to>
    </wire>
    <wire loc="494:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb770c1f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770aeed10"/></to>
    </wire>
    <wire loc="449:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb770c62020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b8cd10"/></to>
    </wire>
    <wire loc="462:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fb770c4e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b5c740"/></to>
    </wire>
    <wire loc="475:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fb770c39200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b2b100"/></to>
    </wire>
    <wire loc="499:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb770c14200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad5100"/></to>
    </wire>
    <wire loc="439:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb770c70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770bad100"/></to>
    </wire>
    <wire loc="452:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb770c5c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b7ed10"/></to>
    </wire>
    <wire loc="465:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fb770c47020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b4d740"/></to>
    </wire>
    <wire loc="478:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fb770c33200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b1d100"/></to>
    </wire>
    <wire loc="534:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fb770c06560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b57100"/></to>
    </wire>
    <wire loc="547:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fb770bf0570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ae9740"/></to>
    </wire>
    <wire loc="533:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fb770c08580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b57100"/></to>
    </wire>
    <wire loc="483:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fb770c2f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b14740"/></to>
    </wire>
    <wire loc="554:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fb770be3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770ad5100"/></to>
    </wire>
    <wire loc="558:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fb770bdd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770af7740"/></to>
    </wire>
    <wire loc="529:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fb770c101f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb770b65100"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a2d1d0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a2d1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb7708b6150"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb770a2e400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb770933020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fb770a25a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb7708a8790"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb770933020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f9fb380"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fb7708b0640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb7709052f0"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb770900850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb770933870"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb770933870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f9f4020"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb7708a7a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb7709ab8c0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb7709ab8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb77098fcf0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76f9fb380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f9e0a30"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76f9ee780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f9fbbd0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76f9fbbd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f9df340"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76f9f13d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb7709ab8c0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f9db4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f9e57b0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f9e57b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f9daa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f9e4da0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f9e4da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f9d9da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f9e20c0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f9e20c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fb770def020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fb770de5570"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fb770dedbe0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fb770de31f0"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fb770deb0c0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fb770de2020"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fb770dea5a0"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fb770de2da0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fb770de8a50"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fb770de1b80"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fb770de6020"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fb770de0a20"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb7709710f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb7709aa8f0"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb7709aa8f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb7709a3b80"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770994c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fb7708fd9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fb7708aba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb770889900"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb770886680"/></to>
    </wire>
    <wire loc="48:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x7fb77088ba90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb770888680"/></to>
    </wire>
    <wire loc="17:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb770888680"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb7705db0c0"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb770882990"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb770873d30"/></to>
    </wire>
    <wire loc="14:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb770873d30"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb7705e0440"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb7705cd080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb77087e5f0"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb7705e0440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb770806d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb77086ad20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb7705e1440"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb7705e1440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb770807670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7705df020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7705db920"/></to>
    </wire>
    <wire loc="19:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7705d9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7705e2020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7705e2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb77080cc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb7705e2c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f958c70"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f958c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb7706aad50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7707ff1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7705df020"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f952d70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7708038e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb770802e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f958020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76f958020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7706aba60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb7707fb710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76f9525d0"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76f9525d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb7706aece0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7708038e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb770775e70"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fb770806d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fb770773890"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fb770807670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fb770774790"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb77080cc90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7707750d0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7707713e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7707ff1d0"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb7707725b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb770802e50"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb77076b5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb7707fb710"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb770771a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb77075cd30"/></to>
    </wire>
    <wire loc="88:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb77075cd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb770754550"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb77076a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb7706c6110"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb7706c6110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb7709aa8f0"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb770768120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb770e605a0"/></to>
    </wire>
    <wire loc="89:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb770758860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb77074f130"/></to>
    </wire>
    <wire loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb77075c500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb770757bc0"/></to>
    </wire>
    <wire loc="91:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb77074fa00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fb770bfe580"/></to>
    </wire>
    <wire loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb77074d990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fb770bfc580"/></to>
    </wire>
    <wire loc="93:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb77074b990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fb770bfa580"/></to>
    </wire>
    <wire loc="94:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb770749990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fb770bf6580"/></to>
    </wire>
    <wire loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb770747990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fb770bf8580"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76f957be0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb77075cd30"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f957440"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7706a8590"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7706a8590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb770616060"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7706a7370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f952d70"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb7706aad50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb770618bf0"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb770618bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f8d56c0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb7706aece0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb7706a45c0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7706aba60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb770619e60"/></to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb770619e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f8d7850"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb770616060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f8d4a70"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb770692690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb770758860"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb770616930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7706a7370"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7706914b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb770616060"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb7705fb9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb770617400"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb770617400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f8d5e40"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb770610b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb77075c500"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f8d3400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb770616930"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76f8d3bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76f8d9630"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb76f8d1de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76f8a0470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb770610b20"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76f8a0bd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb7705fb400"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f89f270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb7705fb9d0"/></to>
    </wire>
    <wire loc="85:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f89fe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7705fa720"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fb7705c9380"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fb7705cd080"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb770349900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb76f893020"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb77034caa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb76f896160"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7fb76f892e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb770573020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7fb76f8907b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7705722c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7fb76f891af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb770573020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7fb76f88fc50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7705722c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7705722c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7704f6c90"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb770573020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7704e31d0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7704e31d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7703a0b60"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb7704f42f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7fb7704e2020"/></to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb7704e2020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704dd330"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7fb7704f2480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7fb7704e1370"/></to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fb7704e1370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704d9d60"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fb7704f1610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7fb7704e0730"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7fb7704e0730"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb7703b0a30"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb7704f0240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb77035f1e0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb77035f1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb7704eb450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb770e605a0"/></to>
    </wire>
    <wire loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7fb7704e92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7fb7704eaac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7703a0b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f7fa970"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704dc490"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb770c68020"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704d7020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb770c66020"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704d3de0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb770c64020"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7fb7704c26d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704d4b60"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7fb7704c19c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704dd330"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fb7704c0cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704d9d60"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb7704cb2c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb7704b35a0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb7704b35a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb7703af610"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb7704a1710"/></to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb7704a1710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb77048d710"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb770398280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb7704c6630"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77036c020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77039ee80"/></to>
    </wire>
    <wire loc="108:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77039ee80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f7f8c30"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77036d2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77039e270"/></to>
    </wire>
    <wire loc="107:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77039e270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f7f8020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fb7704be740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb7704a2710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb77048e710"/></to>
    </wire>
    <wire loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb7704988a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fb7704848a0"/></to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb77049f710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb77048b710"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb77049d710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fb770489710"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb7704a8710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fb770490710"/></to>
    </wire>
    <wire loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb77049a710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb770486710"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb7704978a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb7704838a0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb7704a4660"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb7704926b0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb77049c710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fb770488710"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb7704a3710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb77048f710"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb7704998a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fb7704858a0"/></to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb7704a0710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb77048c710"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb77049e710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fb77048a710"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb7704a9710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fb770491710"/></to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb77049b710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fb770487710"/></to>
    </wire>
    <wire loc="106:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb77039f9e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f7f9850"/></to>
    </wire>
    <wire loc="109:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f7f7590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb77039d770"/></to>
    </wire>
    <wire loc="111:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76f7f7d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76f7fc7c0"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb76f7f3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb76f7c30f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb770398280"/></to>
    </wire>
    <wire loc="81:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76f7c3b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb770398d00"/></to>
    </wire>
    <wire loc="83:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f7c1270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77036d2f0"/></to>
    </wire>
    <wire loc="84:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f7c1e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77036c020"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fb76f7c0680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7fb76f7c0e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fb76f7a9bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fb770314410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb76fecb020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb76f7a5840"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb76f7a5840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb77001f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb770346020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb76fed68b0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a74a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76fed3300"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a15c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76fed3300"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb770307020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a74a0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb770305450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f79b730"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f79b730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb77029e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fb77030b640"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f79caf0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76f79caf0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb770107d30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7999a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a74a0"/></to>
    </wire>
    <wire loc="136:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fb7702dae40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb76f79a720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb77029d960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb76f799060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb77029c920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb7701021d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7702a2cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fb76f788300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7999a0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb770101740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fb76f78a060"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fb77029d960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb7702941d0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fb77029a760"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fb770291020"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb77029c920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb7702921d0"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb77029e1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb770296980"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb7702a2cd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb770120520"/></to>
    </wire>
    <wire loc="98:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb770120520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f7726c0"/></to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fb770291940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77011fb20"/></to>
    </wire>
    <wire loc="100:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77011fb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f771cb0"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fb7702836b0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fb7701b0020"/></to>
    </wire>
    <wire loc="62:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb77027c140"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7fb770c21200"/></to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb77027a200"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7fb770c1f200"/></to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb770278200"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7fb770c1d200"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb770276200"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7fb770c1a200"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb770274200"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7fb770c18200"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb770272200"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7fb770c16200"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb770270200"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7fb770c14200"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb77026e200"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7fb770c12200"/></to>
    </wire>
    <wire loc="74:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb77028e5f0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fb770e12120"/></to>
    </wire>
    <wire loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb770282d30"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7fb770e02b10"/></to>
    </wire>
    <wire loc="76:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb770280160"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fb770e080c0"/></to>
    </wire>
    <wire loc="77:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb77027f530"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7fb770dfacf0"/></to>
    </wire>
    <wire loc="78:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb77027d3a0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7fb770dffaa0"/></to>
    </wire>
    <wire loc="99:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb77011f3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f771530"/></to>
    </wire>
    <wire loc="101:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f76f610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb77011d570"/></to>
    </wire>
    <wire loc="103:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb76f76fdd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fb76f774670"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb76f76e900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fb770107d30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb77009ccb0"/></to>
    </wire>
    <wire loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb770098030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fb7701021d0"/></to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb770095020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fb770101740"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb770098d80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb7700fd280"/></to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb7700979c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb7700fde40"/></to>
    </wire>
    <wire loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fb7700f9a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb7700634e0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb7700634e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fb7700f3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb77005c020"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb77005c020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fb7700e96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb770056b40"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb770056b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fb7700fc9c0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fb7701b0020"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fb7700927f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f732280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a15c0"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb77001b5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a15c0"/></to>
    </wire>
    <wire loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb770018280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb76f736360"/></to>
    </wire>
    <wire loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76f736360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fb770107d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb77001ac90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f735020"/></to>
    </wire>
    <wire loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f735020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fb77029e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fb77001f1d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb76ff1ccb0"/></to>
    </wire>
    <wire loc="32:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fb77000db10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb77001b5e0"/></to>
    </wire>
    <wire loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb76feed8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb770018280"/></to>
    </wire>
    <wire loc="35:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fb76fef1bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fb770013e70"/></to>
    </wire>
    <wire loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fb77000e1d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb77001ac90"/></to>
    </wire>
    <wire loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb77000a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76ff24970"/></to>
    </wire>
    <wire loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76ff24970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f71f020"/></to>
    </wire>
    <wire loc="156:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fb76ff60380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fb76fff0aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fb76ffe9100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76ff24120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f726450"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb76f726450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb76f70aca0"/></to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76f719780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f726ca0"/></to>
    </wire>
    <wire loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb76f726ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb76f7095b0"/></to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb76f71b3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb7709ab8c0"/></to>
    </wire>
    <wire loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f706710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f710880"/></to>
    </wire>
    <wire loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f710880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f705da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f70e020"/></to>
    </wire>
    <wire loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f70e020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f7020c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f70c440"/></to>
    </wire>
    <wire loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f70c440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb76f734020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fb77029d960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb76f734910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fb77029c920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fb7701021d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb7702a2cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fb76f6c0120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f732280"/></to>
    </wire>
    <wire loc="67:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fb770101740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fb76f6c2dc0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TempTestC" loc="6:TempTestC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/ly/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/ly/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/ly/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/ly/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/ly/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/ly/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TempTestAppC.TimerMilliC" loc="44(TempTestAppC.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TempTestAppC.TempSensor" loc="45(TempTestAppC.TempSensor):/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempTestAppC.TempSensor.SensirionSht11ReaderP" loc="45(TempTestAppC.TempSensor.SensirionSht11ReaderP):/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempTestAppC.LightSensor" loc="40(TempTestAppC.LightSensor):/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadClientC" loc="47(TempTestAppC.LightSensor.AdcReadClientC):/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient" loc="43(TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadStreamClientC" loc="47(TempTestAppC.LightSensor.AdcReadStreamClientC):/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fb770dd4230" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fb770dd45d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fb770dd4980" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fb770dd4d00" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fb770dd30d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fb770dd3440" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fb770dd37d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fb770dd3b60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fb770dd1020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fb770d96960" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fb770d96d30" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/ly/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fb770bd8a10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fb770bd8dc0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fb770bd71a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fb770bd7550" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fb770bd78c0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/ly/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb7709e6cc0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb7709e6cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb7709a4a40" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb7709a4a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb77098e570" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb77098e570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb77098ed40" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb77098ed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb77098c160" loc="57:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb77098c160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb77098c940" loc="58:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb77098c940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb77098cd10" loc="59:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fb77098b540" loc="60:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fb77098b540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb7709b16e0" loc="52:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb7709b16e0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb77096a020" loc="53:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb77096a020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb77096a410" loc="54:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb77096a410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb77096abf0" loc="55:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb77096abf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb770968020" loc="56:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb77092ecd0" loc="46:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb77092ecd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb7708f7230" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb7708f7230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fb7708f7560" loc="46:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb7708a9de0" loc="46:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb7708a9de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb77068c020" loc="89:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fb77067f0d0" loc="42:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/ly/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fb770664800" loc="52:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb770179850" loc="83:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fb7701713d0" loc="42:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fb76ff1e670" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fb76ff1e9c0" loc="23:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb76ff1e9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="LightRead" ref="0x7fb770ea3c70" loc="14:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LightRead" scoped="" ref="0x7fb770ea3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb770ea28a0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb770ea2d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb770ebd640" loc="8:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb770ebd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb770ebd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumidityRead" ref="0x7fb770e9e530" loc="15:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityRead" scoped="" ref="0x7fb770e9e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb770e9c170"/>
        <function-ref name="readDone" scoped="" ref="0x7fb770e9c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb770ea48d0" loc="10:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb770ea48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb770ea4c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb770ea4de0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb770eaf020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb770eaf1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb770eaf340"/>
        <function-ref name="get" scoped="" ref="0x7fb770eaf4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb770eaf660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb770eafca0"/>
        <function-ref name="set" scoped="" ref="0x7fb770eaf7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb770eaf980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb770eafb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x7fb770e9f330" loc="13:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempRead" scoped="" ref="0x7fb770e9f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb770ea3020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb770ea34a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770eb3770" loc="9:TempTestC.nc">
      <component-ref qname="TempTestC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770eb3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770eb2c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb770ebe1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770eb2020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770ebeae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb770eb0590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770eb0110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770ebe660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770ebf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770eb2630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb770ebf860"/>
        <function-ref name="stop" scoped="" ref="0x7fb770ebfd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb770e83590" loc="58:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770e83590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e83910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb770e860c0" loc="57:/home/ly/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb770e860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb770e86440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770e85470" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770e85470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fb770e7d4e0" loc="6:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fb770e7d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e7d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770e816a0" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770e816a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e81a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fb770e81db0" loc="5:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb770e81db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e7d180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fb770e7dbc0" loc="7:/home/ly/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fb770e7dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770e80a20" loc="2:/home/ly/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770e80a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e80da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fb770e7fbf0" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb770e7fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb770e552c0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb770e552c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb770e5b1b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb770e557d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb770e55960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb770e55af0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb770e55640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb770e55c80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb770e55e10"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb770e5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770e5fb60" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770e5fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb770e45020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb770e45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb770e44020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb770e45530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb770e456c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb770e45850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb770e453a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb770e459e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb770e45b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb770e45d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fb770e44360" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb770e44360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb770e446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770e46940" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770e46940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770e46cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fb770e015a0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fb770e015a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770e01920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770e01ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770e01c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770e01dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770e00020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770e001b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770e00340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770e004d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770e00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fb770def020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fb770def020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770def3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770def530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770def6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770def850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770def9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770defb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770defd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770dee020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770dee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fb770df8700" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fb770df8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770df8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770df8c10"/>
        <function-ref name="captured" scoped="" ref="0x7fb770df8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770df7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770df71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770df7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fb770ddca20" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fb770ddca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddcda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770ddb020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770ddb1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770ddb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770ddb4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770ddb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fb770dffaa0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb770dffaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770dffe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770dfe020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770dfe1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770dfe340"/>
        <function-ref name="fired" scoped="" ref="0x7fb770dfe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fb770de2020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fb770de2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de2850"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fb770dd9a20" loc="71:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fb770dd9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770dd9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770dd8020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770dd81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770dd8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770dd84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fb770dea5a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fb770dea5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770dea920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770deaab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770deac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770deadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770de8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770de81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770de8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770de84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770de8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fb770e02b10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb770e02b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770e09020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770e091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770e09340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770e094d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770e09660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770e097f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770e09980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770e09b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770e09ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fb770ddea20" loc="66:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fb770ddea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddeda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770ddd020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770ddd1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770ddd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770ddd4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770ddd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fb770de43e0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fb770de43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de4760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de48f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de4a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de4c10"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fb770dee5a0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fb770dee5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770deea20"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770deebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770deed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770ded020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770ded1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770ded340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770ded4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770ded660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770ded7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fb770df7700" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fb770df7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770df7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770df7c10"/>
        <function-ref name="captured" scoped="" ref="0x7fb770df7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770df1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770df11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770df1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fb770ddba20" loc="69:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fb770ddba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddbda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770dda020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770dda1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770dda340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770dda4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770dda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fb770dedbe0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fb770dedbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770dec020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770dec1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770dec340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770dec4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770dec660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770dec7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770dec980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770decb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770decca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fb770dfe890" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fb770dfe890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770dfec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770dfeda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770df9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770df91b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb770df9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fb770e12120" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb770e12120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770e124a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770e12630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770e127c0"/>
        <function-ref name="get" scoped="" ref="0x7fb770e12950"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770e12ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770e12c70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770e12e00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770e11020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770e111b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770e11340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770e114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fb770de2da0" loc="62:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fb770de2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de1630"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fb770e080c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb770e080c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770e08440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770e085d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770e08760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770e088f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770e08a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770e08c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770e08da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770e01020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770e011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fb770de8a50" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fb770de8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770de8dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770de7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770de71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770de7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770de74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770de7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770de77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770de7980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770de7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fb770df26d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fb770df26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770df2a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770df2be0"/>
        <function-ref name="captured" scoped="" ref="0x7fb770df2d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770df8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770df81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770df8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fb770ddda20" loc="67:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fb770ddda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770dddda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770ddc020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770ddc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770ddc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770ddc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770ddc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fb770dfacf0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb770dfacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770dff0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770dff230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770dff3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770dff550"/>
        <function-ref name="fired" scoped="" ref="0x7fb770dff6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fb770de31f0" loc="60:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fb770de31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de3570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de3700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de3890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de3a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fb770ddaa20" loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fb770ddaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770dd9020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770dd91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770dd9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770dd94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770dd9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fb770deb0c0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fb770deb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770deb440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770deb5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770deb760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770deb8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770deba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770debc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770debda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770dea020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770dea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fb770df16c0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fb770df16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770df1a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770df1bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770df1d60"/>
        <function-ref name="get" scoped="" ref="0x7fb770df0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770df01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770df0340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770df04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770df0660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770df07f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770df0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770df0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fb770de1b80" loc="63:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fb770de1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de0020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de04d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fb770ddfa20" loc="65:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fb770ddfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddfda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770dde020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770dde1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770dde340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770dde4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770dde660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fb770de0a20" loc="64:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fb770de0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770ddf020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770ddf1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770ddf340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770ddf4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb770ddf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fb770de5570" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fb770de5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770de58f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770de5a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770de5c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770de5da0"/>
        <function-ref name="fired" scoped="" ref="0x7fb770de4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fb770de6020" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fb770de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770de63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770de6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770de66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770de6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770de69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770de6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770de6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770de5020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770de51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb770da02f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb770da02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770da0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb770da1c20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb770da1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770da0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb770da0940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb770da0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770da0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb770da15b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770da15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770da1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb770da3c80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770da3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770da20a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770da2230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770da23c0"/>
        <function-ref name="get" scoped="" ref="0x7fb770da2550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770da26e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770da2870"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770da2a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770da2b90"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770da2d20"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770da1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770da11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb770d982f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb770d982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d98670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb770d99c20" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb770d99c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d98020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb770d98940" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb770d98940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d98cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb770d995b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d995b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d99950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb770d9bc80" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d9bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d9a0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d9a230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d9a3c0"/>
        <function-ref name="get" scoped="" ref="0x7fb770d9a550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d9a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d9a870"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d9aa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d9ab90"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d9ad20"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d99020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d4ca90" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d4ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d4ce10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d4b020"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d4b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d4b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d4b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d949d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d949d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d94d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d4d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d4d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d4d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d4d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d4d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d4d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d4d980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d4db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d49020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d4dde0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d4dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d4c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d4c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d4c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d4c630"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d4c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d4b930" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d4b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d4bcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d4be40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d4a020"/>
        <function-ref name="get" scoped="" ref="0x7fb770d4a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d4a340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d4a4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d4a660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d4a7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d4a980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d4ab10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d4aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d44160" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d44160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d444e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d44670"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d44800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d44990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d44b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d44cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d46020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d463a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d46530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d466c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d46850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d469e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d46b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d46d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d45020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d427a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d42b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d45480" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d45480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d45800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d45990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d45b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d45cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d45e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d43020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d433a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d43530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d436c0"/>
        <function-ref name="get" scoped="" ref="0x7fb770d43850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d439e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d43b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d43d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d42020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d421b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d42340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d3c7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d3c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d3cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d3ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d3ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d3b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d3b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d3e6d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d3ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d3ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d3ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d3d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d3d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d3d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d3d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d3d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d3ac50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d3ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d3dac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d3dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d3de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d3c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d3c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d3c340"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d3b610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d3b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d3b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d3bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d3bcb0"/>
        <function-ref name="get" scoped="" ref="0x7fb770d3be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d3a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d3a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d3a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d3a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d3a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d3a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d35cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d35cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d340a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d34230"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d343c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d34550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d346e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d34870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d37b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d37b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d36020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d361b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d36340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d364d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d36660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d367f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d36980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d36b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d36ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d322f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d32670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d35020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d353a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d35530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d356c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d35850"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d359e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d34b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d34b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d33020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d331b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d33340"/>
        <function-ref name="get" scoped="" ref="0x7fb770d334d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d33660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d337f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d33980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d33b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d33ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d33e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d2c2f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d2c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d2c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d2c800"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d2c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d2cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d2ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d2ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d2e220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d2e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d2e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d2e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d2e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d2ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d2ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d2ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d2d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d2d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d2d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d2a7a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d2a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d2ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d2d610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d2d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d2db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d2dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d2de40"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d2b160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d2b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d2b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d2b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d2b800"/>
        <function-ref name="get" scoped="" ref="0x7fb770d2b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d2bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d2bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d2be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d2a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d2a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d2a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d2a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d257a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d257a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d25b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d25cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d25e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d24020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d241b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d276d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d27a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d27be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d27d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d26020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d261b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d26340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d264d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d26660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d267f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d23c50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d23c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d26ac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d26ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d26e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d25020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d251b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d25340"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d24610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d24610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d24990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d24b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d24cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb770d24e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d23020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d231b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d23340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d234d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d23660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d237f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d23980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d1dcb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d1dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d1c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d1c230"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d1c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d1c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d1c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d1c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d1fb30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d1fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d1e020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d1e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d1e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d1e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d1e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d1e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d1e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d1eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d1eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d1a2f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d1a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d1d020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d1d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d1d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d1d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d1d850"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d1d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d1cb40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d1cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d1b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d1b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d1b340"/>
        <function-ref name="get" scoped="" ref="0x7fb770d1b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d1b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d1b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d1b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d1bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d1bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d1be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d152f0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d15670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d15800"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d15990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d15b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d15cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d15e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d17220" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d17220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d175a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d17730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d178c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d17a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d17be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d17d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d16020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d161b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d16340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d137a0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d13b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d16610" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d16610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d16990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d16b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d16cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d16e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d14160" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d14160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d144e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d14670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d14800"/>
        <function-ref name="get" scoped="" ref="0x7fb770d14990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d14b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d14cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d14e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d13020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d131b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d13340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d0d7a0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d0d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d0db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d0dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d0de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d0c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d0c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d106d0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d10a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d10be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d10d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d0e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d0e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d0e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d0e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d0e660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d0e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d0bc50" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d0bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d0eac0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d0eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d0ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d0d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d0d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d0d340"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d0c610" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d0c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d0c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d0cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d0ccb0"/>
        <function-ref name="get" scoped="" ref="0x7fb770d0ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d0b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d0b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d0b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d0b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d0b660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d0b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d0b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb770d06cb0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb770d06cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d050a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb770d05230"/>
        <function-ref name="captured" scoped="" ref="0x7fb770d053c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d05550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d056e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb770d05870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb770d08b30" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb770d08b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770d07020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770d071b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d07340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770d074d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770d07660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d077f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770d07980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770d07b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770d07ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb770d032f0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb770d032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d03670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb770d06020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb770d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770d063a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770d06530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770d066c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770d06850"/>
        <function-ref name="fired" scoped="" ref="0x7fb770d069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb770d05b40" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770d05b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770d04020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770d041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770d04340"/>
        <function-ref name="get" scoped="" ref="0x7fb770d044d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770d04660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770d047f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770d04980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770d04b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770d04ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770d04e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770d03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fb770cfc240" loc="7:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb770cfc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770cfc5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fb770d01aa0" loc="4:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb770d01aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770d01e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fb770cfd260" loc="5:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb770cfd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770cfd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fb770cfd9f0" loc="6:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb770cfd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770cfdd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fb770f434c0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb770f434c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb770f43840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fb7712f83b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb7712f83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb7712f8730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb7712f88c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb7712f8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fb771120be0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fb771120be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fb77125c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fb770e5db50" loc="39:/home/ly/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb770e5db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb770cc5b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb770cc51b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb770cc5340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb770cc54d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb770cc5020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb770cc5660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb770cc57f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb770cc5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb770cb9dc0" loc="60:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb770cb9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770cb8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb770cc6590" loc="57:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb770cc6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb770cc6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fb770cb96c0" loc="59:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fb770cb96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770cb9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fb770cc6c00" loc="58:/home/ly/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb770cc6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770cb9020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb770cb91b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb770cb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb7713d04f0" loc="48:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb7713d04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7713d0870"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7713d0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb7713613a0" loc="47:/home/ly/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb7713613a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb771361720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb7713618b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb771361a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb770f0a040" loc="56:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb770f0a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb770f0a3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb770f0a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fb770f06490" loc="57:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb770f06490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb770f06810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb770f069a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb770f06b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb770f0c140" loc="55:/home/ly/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb770f0c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770f0c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb770f0c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb770f0c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb770e605a0" loc="46:/home/ly/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb770e605a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb770e60920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb770e60ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb770e60c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb770e60dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb770cad020"/>
        <function-ref name="get" scoped="" ref="0x7fb770cad1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb770cad340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb770cad980"/>
        <function-ref name="set" scoped="" ref="0x7fb770cad4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb770cad660"/>
        <function-ref name="led2On" scoped="" ref="0x7fb770cad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fb770ca07b0" loc="50:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb770ca07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ca0b30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ca0cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ca0e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ca7020"/>
        <function-ref name="get" scoped="" ref="0x7fb770ca71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ca7340"/>
        <function-ref name="set" scoped="" ref="0x7fb770ca74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ca7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770cac8e0" loc="46:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770cac8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770cacc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fb770ca7980" loc="51:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb770ca7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ca7d00"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ca5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ca51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ca5340"/>
        <function-ref name="get" scoped="" ref="0x7fb770ca54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ca5660"/>
        <function-ref name="set" scoped="" ref="0x7fb770ca57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ca5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb770ca9020" loc="47:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb770ca9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb770ca93a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb770ca9530"/>
        <function-ref name="led1On" scoped="" ref="0x7fb770ca96c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb770ca9850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb770ca99e0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ca9b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb770ca9d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb770ca84d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770ca8020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb770ca81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb770ca8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fb770ca5ca0" loc="52:/home/ly/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb770ca5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c9f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c9f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c9f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c9f550"/>
        <function-ref name="get" scoped="" ref="0x7fb770c9f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c9f870"/>
        <function-ref name="set" scoped="" ref="0x7fb770c9fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c9fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fb770c84360" loc="41:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb770c84360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c846e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c84870"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c84a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c84b90"/>
        <function-ref name="get" scoped="" ref="0x7fb770c84d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c83020"/>
        <function-ref name="set" scoped="" ref="0x7fb770c831b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fb770c836a0" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb770c836a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c83a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c83bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c83d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c81020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c81340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c814d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c81660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fb770c80c40" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770c80c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770c7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fb770c819c0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb770c819c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c81d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c80020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c80340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c80660"/>
        <function-ref name="set" scoped="" ref="0x7fb770c807f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb770c6a020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb770c6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c6a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c6a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c6a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c6a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c6ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c6ad00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c69020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c69340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c69660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c69a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c69c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb770c56020" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb770c56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c56530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c56850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c56b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c56d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c55340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c55a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fb770c0c560" loc="145:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fb770c0c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c0c8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c0ca70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c0cc00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c0cd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c0b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c0b340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c0b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c0b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c0b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c0b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c0bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c0bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c0a020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fb770be7570" loc="165:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fb770be7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770be78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770be7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770be7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770be7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770be6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770be61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770be6340"/>
        <function-ref name="get" scoped="" ref="0x7fb770be64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770be6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770be67f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770be6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770be6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770be6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770be5020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770be51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fb770c0a580" loc="146:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fb770c0a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c0a900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c0aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c0ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c0adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c09020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c09340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c094d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c09660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c097f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c09980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c09b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c09ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c08020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fb770c52020" loc="71:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fb770c52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c52530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c526c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c52850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c52b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c52d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c51020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c51340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c51660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c51a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c51c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fb770c3d200" loc="84:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fb770c3d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c3d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c3d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c3d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c3da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c3dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c3dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c3c020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c3c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c3c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c3c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c3c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c3c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c3c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c3cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c3cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fb770c29200" loc="97:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fb770c29200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c29580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c29710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c298a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c29a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c29bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c29d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c28020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c28340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c284d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c28660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c28980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c28c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c28da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fb770c18200" loc="108:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb770c18200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c18580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c18710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c188a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c18a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c18bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c18d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c17020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c171b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c17340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c174d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c17660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c177f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c17980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c17c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c17da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fb770c04580" loc="149:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fb770c04580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c04900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c04a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c04c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c04db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c03020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c03340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c034d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c03660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c037f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c03980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c03b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c03ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c02020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fb770bf4570" loc="159:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fb770bf4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bf48f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bf4a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bf4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bf4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bf3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bf31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bf3340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bf34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bf3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bf37f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bf3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bf3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bf3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bf2020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bf21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fb770bdf580" loc="171:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fb770bdf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bdf900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bdfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bdfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bdfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bde020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bde1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bde340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bde4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bde660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bde7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bde980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bdeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bdeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bdd020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bdd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb770c64020" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb770c64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c64530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c646c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c64850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c649e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c64b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c64d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c63340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c63a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fb770c02580" loc="150:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fb770c02580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c02900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c02a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c02c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c02db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c01020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c01340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c014d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c01660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c017f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c01980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c01b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c01ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c00020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb770c60020" loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb770c60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c60530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c606c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c60850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c609e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c60b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c60d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c5f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c5f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c5f340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c5f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c5f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c5f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c5fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c5fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fb770c4c020" loc="74:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fb770c4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c4c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c4c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c4c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c4cd00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c4b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c4b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c4b340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c4b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c4b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c4b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c4ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c4bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fb770c37200" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fb770c37200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c37580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c37710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c378a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c37a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c37bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c37d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c36020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c361b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c36340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c364d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c36660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c367f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c36980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c36c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c36da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fb770c23200" loc="100:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fb770c23200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c23580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c23710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c238a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c23a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c23bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c23d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c22020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c221b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c22340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c224d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c22660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c227f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c22980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c22c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c22da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fb770c12200" loc="111:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb770c12200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c12580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c12710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c128a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c12a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c12bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c12d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c11020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c111b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c11340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c114d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c11660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c117f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c11980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c11c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c11da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb770c6e020" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb770c6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c6e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c6e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c6e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c6e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c6e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c6eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c6ed00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c6d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c6d340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c6d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c6d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c6d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c6da80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c6dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb770c5a020" loc="64:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb770c5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c5a4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c5a630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c5a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c5a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c5aae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c5ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c5ae00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c59020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c59340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c59660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c59a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c59c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fb770c45020" loc="77:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fb770c45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c45530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c45850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c45b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c45d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c44020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c44340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c44660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c44a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c44c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fb770c0e580" loc="144:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fb770c0e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c0e900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c0ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c0ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c0edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c0d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c0d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c0d340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c0d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c0d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c0d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c0d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c0db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c0dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c0c020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c0c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fb770bee570" loc="162:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fb770bee570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bee8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770beea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770beec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770beeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bed020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bed340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bed4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bed660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bed7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bed980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bedb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bedca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bec020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fb770be1570" loc="169:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fb770be1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770be18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770be1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770be1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770be1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770be0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770be01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770be0340"/>
        <function-ref name="get" scoped="" ref="0x7fb770be04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770be0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770be07f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770be0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770be0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770be0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bdf020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fb770bfa580" loc="155:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fb770bfa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bfa900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bfaa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bfac20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bfadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bf9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bf91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bf9340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bf94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bf9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bf97f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bf9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bf9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bf9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bf8020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bf81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fb770c41020" loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fb770c41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c415a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c41730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c418c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c41a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c41be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c41d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c40020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c404d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c40660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c40980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c40c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fb770c2d200" loc="95:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fb770c2d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c2d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c2d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c2d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c2da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c2dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c2dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c2c020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c2c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c2c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c2c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c2c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c2c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c2c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c2cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c2cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fb770c1d200" loc="106:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb770c1d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c1d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c1d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c1d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c1da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c1dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c1dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c1c020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c1c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c1c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c1c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c1c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c1c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c1c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c1cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c1cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fb770bec570" loc="163:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fb770bec570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bec8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770beca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770becc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770becda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bea340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bea4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bea660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bea7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bea980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770beab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770beaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770be9020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770be91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fb770c00570" loc="152:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fb770c00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c008f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c00a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c00c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c00da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bff340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bff4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bff660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bff7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bff980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bffb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bffca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bfe020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb770c68020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb770c68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c683a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c68530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c686c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c68850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c689e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c68b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c68d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c67020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c67340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c67660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c67a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c67c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb770c54020" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb770c54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c54530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c546c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c54850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c549e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c54b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c54d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c53020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c53340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c53660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c53a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c53c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fb770c21200" loc="104:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb770c21200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c21580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c21710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c218a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c21a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c21bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c21d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c20020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c201b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c20340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c204d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c20660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c207f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c20980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c20c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c20da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fb770c50020" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fb770c50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c50530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c506c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c50850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c509e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c50b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c50d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c4f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c4f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c4f340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c4f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c4f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c4f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c4fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c4fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fb770c3b200" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fb770c3b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c3b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c3b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c3b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c3ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c3bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c3bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c3a020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c3a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c3a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c3a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c3a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c3a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c3a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c3ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c3ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fb770c27200" loc="98:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fb770c27200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c27580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c27710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c278a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c27a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c27bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c27d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c26020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c26340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c264d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c26660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c267f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c26980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c26c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c26da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fb770c16200" loc="109:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb770c16200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c16580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c16710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c16a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c16bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c16d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c15020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c151b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c15340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c154d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c15660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c157f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c15980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c15c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fb770bfc580" loc="154:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fb770bfc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bfc900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bfca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bfcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bfcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bfb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bfb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bfb340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bfb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bfb660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bfb7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bfb980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bfbb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bfbca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bfa020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb770c7b020" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb770c7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c7b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c7b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c7b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c7b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c7b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c7bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c7bd00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c7a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c7a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c7a340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c7a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c7a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c7a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c7aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c7ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb770c5e020" loc="62:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb770c5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c5e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c5e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c5e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c5e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c5eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c5ed00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c5d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c5d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c5d340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c5d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c5d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c5d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c5da80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c5dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fb770c49020" loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fb770c49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c493a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c49530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c496c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c49850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c499e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c49b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c49d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c48020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c48340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c48660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c48a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c48c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fb770c35200" loc="88:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fb770c35200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c35580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c35710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c358a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c35a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c35bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c35d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c34020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c34340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c344d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c34660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c347f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c34980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c34c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c34da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fb770bf8580" loc="156:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fb770bf8580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bf8900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bf8a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bf8c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bf8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bf7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bf71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bf7340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bf74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bf7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bf77f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bf7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bf7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bf7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bf6020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fb770bf2570" loc="160:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fb770bf2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bf28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bf2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bf2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bf2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bf1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bf11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bf1340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bf14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bf1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bf17f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bf1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bf1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bf1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bf0020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bf01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fb770be5570" loc="166:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fb770be5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770be58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770be5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770be5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770be5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770be4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770be41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770be4340"/>
        <function-ref name="get" scoped="" ref="0x7fb770be44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770be4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770be47f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770be4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770be4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770be4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770be3020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770be31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fb770c31200" loc="93:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fb770c31200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c31580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c31710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c318a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c31a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c31bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c31d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c30020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c301b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c30340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c304d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c30660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c307f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c30980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c30c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fb770bf6580" loc="157:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fb770bf6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bf6900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bf6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bf6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bf6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bf5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bf51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bf5340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bf54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bf5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bf57f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bf5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bf5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bf5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bf4020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bf41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb770c6c020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb770c6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c6c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c6c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c6c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c6c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c6c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c6cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c6cd00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c6b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c6b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c6b340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c6b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c6b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c6b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c6ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c6bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb770c58020" loc="65:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb770c58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c58530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c58850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c589e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c58b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c58d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c57020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c57340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c57660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c57a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c57c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fb770c43020" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fb770c43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c43530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c436c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c43850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c439e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c43b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c43d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c42020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c421b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c42340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c424d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c42660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c427f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c42a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c42c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fb770bfe580" loc="153:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fb770bfe580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bfe900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bfea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bfec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bfedb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bfd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bfd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bfd340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bfd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bfd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bfd7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bfd980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bfdb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bfdca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bfc020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fb770be9570" loc="164:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fb770be9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770be98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770be9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770be9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770be9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770be8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770be81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770be8340"/>
        <function-ref name="get" scoped="" ref="0x7fb770be84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770be8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770be87f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770be8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770be8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770be8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770be7020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770be71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fb770c3f200" loc="83:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fb770c3f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c3f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c3f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c3f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c3fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c3fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c3fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c3e020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c3e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c3e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c3e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c3e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c3e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c3e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c3ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c3eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fb770c2b200" loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fb770c2b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c2b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c2b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c2b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c2ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c2bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c2bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c2a020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c2a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c2a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c2a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c2a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c2a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c2a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c2ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c2ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fb770c1a200" loc="107:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb770c1a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c1a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c1a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c1a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c1aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c1abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c1ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c19020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c191b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c19340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c194d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c19660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c197f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c19980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c19c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c19da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb770c66020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb770c66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c663a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c66530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c666c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c66850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c669e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c66b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c66d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c65020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c651b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c65340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c654d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c65660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c657f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c65a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c65c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fb770c1f200" loc="105:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb770c1f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c1f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c1f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c1f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c1fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c1fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c1fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c1e020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c1e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c1e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c1e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c1e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c1e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c1ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c1eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb770c62020" loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb770c62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c62530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c626c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c62850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c62b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c62d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c61020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c61340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c61660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c61a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c61c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fb770c4e020" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fb770c4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c4e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c4e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c4e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c4e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c4e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c4eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c4ed00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c4d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c4d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c4d340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c4d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c4d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c4d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c4da80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c4dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fb770c39200" loc="86:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fb770c39200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c39580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c39710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c398a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c39a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c39bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c39d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c38020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c38340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c384d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c38660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c387f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c38980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c38c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c38da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fb770c25200" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fb770c25200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c25580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c25710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c258a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c25a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c25bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c25d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c24020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c241b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c24340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c244d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c24660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c247f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c24980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c24c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c24da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fb770c14200" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb770c14200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c14580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c14710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c148a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c14a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c14bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c14d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c13020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c131b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c13340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c134d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c13660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c137f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c13980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c13c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c13da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb770c70020" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb770c70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c70530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c706c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c70850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c70b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c70d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c6f340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb770c5c020" loc="63:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb770c5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c5c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c5c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c5c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c5c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c5c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c5cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c5cd00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c5b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c5b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c5b340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c5b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c5b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c5b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c5ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c5bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fb770c47020" loc="76:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fb770c47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c47530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c476c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c47850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c479e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c47b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c47d00"/>
        <function-ref name="get" scoped="" ref="0x7fb770c46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c46340"/>
        <function-ref name="set" scoped="" ref="0x7fb770c464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c46a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fb770c33200" loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fb770c33200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c33580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c33710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c338a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c33a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c33bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c33d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c32020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c321b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c32340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c324d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c32660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c327f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c32980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c32c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c32da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fb770c06560" loc="148:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fb770c06560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c068e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c06a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c06c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c06d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c05020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c05340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c05660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c057f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c05980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c05b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c05ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c04020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fb770bf0570" loc="161:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fb770bf0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bf08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bf0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bf0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bf0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bef020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bef340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bef4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bef660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bef7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bef980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770befb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770befca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bee020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fb770c08580" loc="147:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fb770c08580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c08900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c08a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c08c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c08db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c07020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c07340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c07660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c077f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c07980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c07b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c07ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c06020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fb770c2f200" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fb770c2f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c2f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c2f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c2f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c2fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c2fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c2fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c2e020"/>
        <function-ref name="get" scoped="" ref="0x7fb770c2e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c2e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c2e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c2e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c2e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c2e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c2ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c2eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fb770be3570" loc="168:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fb770be3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770be38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770be3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770be3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770be3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770be2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770be21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770be2340"/>
        <function-ref name="get" scoped="" ref="0x7fb770be24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770be2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770be27f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770be2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770be2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770be2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770be1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770be11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fb770bdd580" loc="172:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fb770bdd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bdd900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bdda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bdddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bdc340"/>
        <function-ref name="get" scoped="" ref="0x7fb770bdc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bdc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bdc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770bdc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bdcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bdcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bdb020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fb770c101f0" loc="143:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fb770c101f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770c10970"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770c10b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770c10c90"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770c10e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770c0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770c0f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770c0f340"/>
        <function-ref name="get" scoped="" ref="0x7fb770c0f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770c0f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770c0f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770c0f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770c0fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770c0fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770c0e020"/>
        <function-ref name="clr" scoped="" ref="0x7fb770c0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770bb26d0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770bb26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bb2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bb2be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bb2d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bb1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770bb11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770bb1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770bb14d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770bb1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bb17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bb1980"/>
        <function-ref name="set" scoped="" ref="0x7fb770bb1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bb1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bb1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770bb0120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770bad100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770bad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770bad480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770bad610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770bad7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770bad930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770badac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770badc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770badde0"/>
        <function-ref name="get" scoped="" ref="0x7fb770bac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770bac1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770bac340"/>
        <function-ref name="set" scoped="" ref="0x7fb770bac4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770bac660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770bac7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770baca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770bacc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ba9d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ba9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ba80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ba8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ba8400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ba8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ba8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ba88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ba8a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770ba8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ba8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ba7020"/>
        <function-ref name="set" scoped="" ref="0x7fb770ba71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ba7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ba74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ba7760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ba78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ba4740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ba4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ba4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ba4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ba4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ba3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ba31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ba3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ba34d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ba3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ba37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ba3980"/>
        <function-ref name="set" scoped="" ref="0x7fb770ba3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ba3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ba3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ba2120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ba22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b9f100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b9f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b9f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b9f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b9f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b9f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b9fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b9fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b9fde0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b9d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b9d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b9d340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b9d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b9d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b9d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b9da80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b9dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b9ad10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b9ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b990e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b99270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b99400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b99590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b99720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b998b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b99a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b99bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b99d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b98020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b98340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b98760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b95740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b95740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b95ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b95c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b95de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b94340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b944d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b94660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b94980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b94b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b94ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b94e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b93120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b90100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b90100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b90480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b90610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b907a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b90930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b90ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b90c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b90de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b8f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b8f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b8f340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b8f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b8f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b8f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b8fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b8fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b8cd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b8cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b8b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b8b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b8b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b8b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b8b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b8b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b8ba40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b8bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b8bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b8a020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b8a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b8a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b8a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b8a760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b8a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b87740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b87740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b87ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b87c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b87de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b86020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b861b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b86340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b864d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b86660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b867f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b86980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b86b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b86ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b86e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b85120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b82100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b82100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b82480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b82610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b827a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b82930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b82ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b82c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b82de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b81020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b81340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b81660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b81a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b81c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b7ed10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b7ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b7d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b7d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b7d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b7d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b7d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b7d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b7da40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b7dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b7dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b7c020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b7c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b7c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b7c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b7c760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b7c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b78860" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b78860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b78be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b78d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b77020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b77340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b77660"/>
        <function-ref name="get" scoped="" ref="0x7fb770b777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b77980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b77b10"/>
        <function-ref name="set" scoped="" ref="0x7fb770b77ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b77e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b76020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b762b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b76440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b73270" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b73270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b735f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b73780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b73910"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b73aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b73c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b73dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b72020"/>
        <function-ref name="get" scoped="" ref="0x7fb770b721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b72340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b724d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770b72660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b727f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b72980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b72c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b72da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b6fd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b6fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b6e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b6e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b6e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b6e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b6e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b6e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b6ea40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b6ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b6ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b6d020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b6d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b6d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b6d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b6d760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b6d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b6a740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b6a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b6aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b6ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b6ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b69020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b69340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b694d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b69660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b69980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b69b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b69ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b69e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b68120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b65100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b65100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b65480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b65610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b657a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b65930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b65ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b65c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b65de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b64020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b64340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b64660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b64a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b64c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b61d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b61d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b600e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b60270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b60400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b60590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b60720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b60a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b60bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b60d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b5f020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b5f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b5f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b5f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b5f760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b5f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b5c740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b5c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b5cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b5cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b5cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b5b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b5b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b5b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b5b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b5b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b5b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b5b980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b5bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b5bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b5be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b5a120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b5a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b57100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b57100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b57480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b57610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b577a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b57930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b57ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b57c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b57de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b55340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b55a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b52d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b510e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b51270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b51400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b51590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b51720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b51a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b51bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b51d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b50020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b50760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b4d740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b4d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b4dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b4dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b4dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b4c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b4c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b4c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b4c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b4c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b4c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b4c980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b4cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b4cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b4ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b4b120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b48100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b48100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b48480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b48610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b487a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b48930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b48ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b48c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b48de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b47340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b47660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b47a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b47c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b44d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b44d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b43270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b43400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b43590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b43720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b43a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b43bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b43d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b42020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b42340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b42760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b3fa60" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b3fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b3fde0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b3e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b3e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b3e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b3e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b3e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b3e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b3e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b3eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b3eca0"/>
        <function-ref name="set" scoped="" ref="0x7fb770b3ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b3d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b3d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b3d440"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b3d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b3a460" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b3a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b3a7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b3a970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b3ab00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b3ac90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b3ae20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b39020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b391b0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b39340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b394d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b39660"/>
        <function-ref name="set" scoped="" ref="0x7fb770b397f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b39980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b39b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b39da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b36e00" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b36e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b351c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b35350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b354e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b35670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b35800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b35990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b35b20"/>
        <function-ref name="get" scoped="" ref="0x7fb770b35cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b35e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b34020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b34340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b34760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b31740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b31740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b31ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b31c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b31de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b2f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b2f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b2f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b2f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b2f980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b2fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b2fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b2fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b2e120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b2b100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b2b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b2b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b2b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b2b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b2b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b2bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b2bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b2bde0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b2a340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b27d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b27d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b26270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b26400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b26590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b26720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b26a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b26bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b26d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b25020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b25340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b25760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b22740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b22740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b22ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b22c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b22de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b21020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b21340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b214d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b21660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b21980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b21b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b21ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b21e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b20120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b1d100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b1d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b1d480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b1d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b1d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b1d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b1dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b1dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b1dde0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b1c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b1c340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b1c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b1c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b1c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b1ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b1cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b19d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b19d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b180e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b18270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b18400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b18590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b18720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b18a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b18bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b18d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b17020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b17340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b17760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b14740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b14740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b14ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b14c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b14de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b13020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b13340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b134d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b13660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b13980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b13b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b13ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b13e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b12120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b0f100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b0f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b0f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b0f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b0f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b0f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b0fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b0fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b0fde0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b0e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b0e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b0e340"/>
        <function-ref name="set" scoped="" ref="0x7fb770b0e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b0e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b0e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b0ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b0ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b0ad10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b0ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b09270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b09400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b09590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b09720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b09a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770b09bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b09d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b08020"/>
        <function-ref name="set" scoped="" ref="0x7fb770b081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b08760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b05740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b05740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b05ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b05c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b05de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b04020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b04340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b044d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770b04660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770b047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770b04980"/>
        <function-ref name="set" scoped="" ref="0x7fb770b04b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770b04ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770b04e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770b03120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770b032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770b00100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770b00100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770b00480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770b00610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770b007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770b00930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770b00ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770b00c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770b00de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770aff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770aff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770aff340"/>
        <function-ref name="set" scoped="" ref="0x7fb770aff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770aff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770aff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770affa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770affc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770afcd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770afcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770afb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770afb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770afb400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770afb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770afb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770afb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770afba40"/>
        <function-ref name="get" scoped="" ref="0x7fb770afbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770afbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770afa020"/>
        <function-ref name="set" scoped="" ref="0x7fb770afa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770afa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770afa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770afa760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770afa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770af7740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770af7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770af7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770af7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770af7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770af6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770af61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770af6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770af64d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770af6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770af67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770af6980"/>
        <function-ref name="set" scoped="" ref="0x7fb770af6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770af6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770af6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770af5120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770af52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770af2100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770af2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770af2480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770af2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770af27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770af2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770af2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770af2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770af2de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770af1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770af11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770af1340"/>
        <function-ref name="set" scoped="" ref="0x7fb770af14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770af1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770af17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770af1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770af1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770aeed10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770aeed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770aed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770aed270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770aed400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770aed590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770aed720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770aed8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770aeda40"/>
        <function-ref name="get" scoped="" ref="0x7fb770aedbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770aedd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770aec020"/>
        <function-ref name="set" scoped="" ref="0x7fb770aec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770aec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770aec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770aec760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770aec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ae9740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ae9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ae9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ae9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ae9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ae7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ae71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ae7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ae74d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ae7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ae77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ae7980"/>
        <function-ref name="set" scoped="" ref="0x7fb770ae7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ae7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ae7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ae6120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ae62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ae3100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ae3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ae3480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ae3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ae37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ae3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ae3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ae3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ae3de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ae2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ae21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ae2340"/>
        <function-ref name="set" scoped="" ref="0x7fb770ae24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ae2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ae27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ae2a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ae2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770adfd10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770adfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ade0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ade270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ade400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ade590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ade720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ade8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770adea40"/>
        <function-ref name="get" scoped="" ref="0x7fb770adebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770aded60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770add020"/>
        <function-ref name="set" scoped="" ref="0x7fb770add1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770add340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770add4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770add760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770add8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ada740" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ada740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770adaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770adac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770adade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ad9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ad91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ad9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ad94d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ad9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ad97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ad9980"/>
        <function-ref name="set" scoped="" ref="0x7fb770ad9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ad9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ad9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ad8120"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ad82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ad5100" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ad5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ad5480"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ad5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ad57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ad5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ad5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ad5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ad5de0"/>
        <function-ref name="get" scoped="" ref="0x7fb770ad4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ad41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770ad4340"/>
        <function-ref name="set" scoped="" ref="0x7fb770ad44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770ad4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770ad47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770ad4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb770ad4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb770ad1d10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb770ad1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770ad00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770ad0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770ad0400"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770ad0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770ad0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770ad08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770ad0a40"/>
        <function-ref name="get" scoped="" ref="0x7fb770ad0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770ad0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770acf020"/>
        <function-ref name="set" scoped="" ref="0x7fb770acf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770acf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770acf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770acf760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770acf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb770a582f0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a58670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a58800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770a58990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a58b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a58cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770a58e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a57020"/>
        <function-ref name="get" scoped="" ref="0x7fb770a571b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770a57340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770a574d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770a57660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770a577f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770a57980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770a57c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a57da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb770a69020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a69530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a696c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a69850"/>
        <function-ref name="get" scoped="" ref="0x7fb770a699e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a69b70"/>
        <function-ref name="set" scoped="" ref="0x7fb770a69d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb770a53de0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a53de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a52180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a52310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770a524a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a52630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a527c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770a52950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a52ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb770a52c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770a52e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770a51020"/>
        <function-ref name="set" scoped="" ref="0x7fb770a511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770a51340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770a514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770a51760"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb770a55b90" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a55b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a53020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a53340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a534d0"/>
        <function-ref name="get" scoped="" ref="0x7fb770a53660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a537f0"/>
        <function-ref name="set" scoped="" ref="0x7fb770a53980"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a53b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb770a4e930" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb770a4e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a4ecb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a4ee40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb770a4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a4d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770a4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a4d660"/>
        <function-ref name="get" scoped="" ref="0x7fb770a4d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770a4d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770a4db10"/>
        <function-ref name="set" scoped="" ref="0x7fb770a4dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770a4de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770a4c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770a4c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a4c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb770a4f710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb770a4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770a4fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770a4fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770a4fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770a4e020"/>
        <function-ref name="get" scoped="" ref="0x7fb770a4e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770a4e340"/>
        <function-ref name="set" scoped="" ref="0x7fb770a4e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb770a4e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb770896370" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TempTestAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770896370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770892870"/>
        <function-ref name="fired" scoped="" ref="0x7fb770894e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770893c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770893780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7708911e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770892cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770893300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770894020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770892260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7708944f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7708949c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb770a37610" loc="49:/home/ly/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a37610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770a33c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb770a351e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770a33020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770a35ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb770a32590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770a32110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770a35660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770a36390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770a33630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb770a36860"/>
        <function-ref name="stop" scoped="" ref="0x7fb770a36d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb770a2d1d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb770a2d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770a2a630"/>
        <function-ref name="fired" scoped="" ref="0x7fb770a2cc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770a2b9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770a2b550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb770a28020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770a2aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770a2b0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770a2ddc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770a2a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb770a2c2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770a2c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb770a25a80" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb770a25a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb770a276f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770a2e400" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770a2e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770a2e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb770933870" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb770933870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb77092f090"/>
        <function-ref name="fired" scoped="" ref="0x7fb770930090"/>
        <function-ref name="startAt" scoped="" ref="0x7fb770930a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770930550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb77092f550"/>
        <function-ref name="start" scoped="" ref="0x7fb7709316a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770931bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770933020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb7709333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f9fbbd0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f9fbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f9f84e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9f94e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f9f9e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f9f99a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f9f89a0"/>
        <function-ref name="start" scoped="" ref="0x7fb76f9faa80"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f9f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f9fb380" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f9fb380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f9fb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb76f9e20c0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f9e20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76f9e2440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76f9e25d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76f9e2760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76f9e28f0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9e2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb76f9e57b0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f9e57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76f9e5b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76f9e5cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f9e5e50"/>
        <function-ref name="get" scoped="" ref="0x7fb76f9e4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f9e41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f9e4340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76f9e44d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f9e4660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f9e47f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76f9e4980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76f9e4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb76f9e4da0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f9e4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76f9e3180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76f9e3310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f9e34a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76f9e3630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76f9e37c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f9e3950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76f9e3ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76f9e3c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76f9e3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb770a01020" loc="52:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb770a01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb770a013a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb770a01530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb770a016c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb770a01850"/>
        <function-ref name="fired" scoped="" ref="0x7fb770a019e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb770a068b0" loc="50:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770a068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770a06c30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb770a06dc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770a05020"/>
        <function-ref name="get" scoped="" ref="0x7fb770a051b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770a05340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770a054d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770a05660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770a057f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770a05980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770a05b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770a05ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb770a03560" loc="51:/home/ly/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb770a03560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb770a038e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770a03a70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770a03c00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770a03d90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770a02020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770a021b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770a02340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770a024d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770a02660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb76f9d9da0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f9d9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76f9d8180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76f9d8310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76f9d84a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76f9d8630"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9d87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb76f9db4c0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f9db4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76f9db840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76f9db9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f9dbb60"/>
        <function-ref name="get" scoped="" ref="0x7fb76f9dbcf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f9dbe80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f9da030"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76f9da1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f9da350"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f9da4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76f9da670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76f9da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f9df340" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f9df340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f9dcba0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9deb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f9dc550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f9dc090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f9db090"/>
        <function-ref name="start" scoped="" ref="0x7fb76f9de1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f9de6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f9e0a30" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f9e0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f9e0db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb76f9daa90" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f9daa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76f9dae10"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76f9d9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f9d91b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76f9d9340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76f9d94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f9d9660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76f9d97f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76f9d9980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76f9d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb7709ab8c0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb7709ab8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb7709b0700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7709af0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb7709b0bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb7709af590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fb7709aa8f0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb7709aa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb7709a6780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7709a5150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb7709a6c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fb7709a5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb770994c50" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb770994c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770993020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb7709931b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770993340"/>
        <function-ref name="get" scoped="" ref="0x7fb7709934d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770993660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7709937f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770993980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770993b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770993ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb770993e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb7709a3b80" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb7709a3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb7709959b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770994360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770995e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770994820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb7709710f0" loc="63:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb7709710f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb770970020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7709709a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb7709704e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770970e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb77098fcf0" loc="62:/home/ly/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb77098fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb770973b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770972550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770972090"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770972a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f9f4020" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f9f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f9f2870"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9f3840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f9f2220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f9f3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f9f2d30"/>
        <function-ref name="start" scoped="" ref="0x7fb76f9f4e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f9f3380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb76f9ee780" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76f9ee780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f9eb020"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f9ec020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f9ec9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f9ec4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f9eb4e0"/>
        <function-ref name="start" scoped="" ref="0x7fb76f9ed5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f9edae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76f9f13d0" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76f9f13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76f9f0240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f9f0bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f9f0700"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f9ee0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fb7708fd9c0" loc="74:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fb7708fd9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7708fdd40"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7708fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb770900850" loc="49:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb770900850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7708fd090"/>
        <function-ref name="fired" scoped="" ref="0x7fb7708fe090"/>
        <function-ref name="startAt" scoped="" ref="0x7fb7708fea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7708fe550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb7708fd550"/>
        <function-ref name="start" scoped="" ref="0x7fb7708ff6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7708ffbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb7709052f0" loc="48:/home/ly/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7709052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770902870"/>
        <function-ref name="fired" scoped="" ref="0x7fb770904e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770903c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770903780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7709001e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770902cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770903300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770904020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770902260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7709044f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7709049c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fb7708aba00" loc="71:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fb7708aba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7708abd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7708aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fb7708b0640" loc="49:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fb7708b0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7708acc40"/>
        <function-ref name="fired" scoped="" ref="0x7fb7708ae1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7708ac020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7708aeae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7708ab590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7708ab110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7708ae660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7708af390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7708ac630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7708af860"/>
        <function-ref name="stop" scoped="" ref="0x7fb7708afd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb7708b6150" loc="48:/home/ly/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7708b6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7708b2700"/>
        <function-ref name="fired" scoped="" ref="0x7fb7708b5c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7708b3a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7708b35b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7708b0090"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7708b2ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7708b3110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7708b6d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7708b20d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7708b52a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7708b5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb7708a8790" loc="48:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb7708a8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb7708a73f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb7708a7a60" loc="49:/home/ly/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb7708a7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb77089d890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb77089b260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb77089dd50"/>
        <function-ref name="overflow" scoped="" ref="0x7fb77089b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb770889900" loc="38:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb770889900"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb770889c80"/>
        <function-ref name="stop" scoped="" ref="0x7fb770889e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fb77087e5f0" loc="44:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb77087e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb77087e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x7fb770882990" loc="39:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb770882990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb770882d10"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb770886020"/>
        <function-ref name="receive" scoped="" ref="0x7fb7708861b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb770886340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770886e10" loc="43:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770886e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb7708851c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x7fb77088ba90" loc="38:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartControl" scoped="" ref="0x7fb77088ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb77088be10"/>
        <function-ref name="stop" scoped="" ref="0x7fb770887020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb770886680" loc="42:/home/ly/tinyos-main/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb770886680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb770886a00"/>
        <function-ref name="stop" scoped="" ref="0x7fb770886b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb770873d30" loc="6:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb770873d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7708720e0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb770872270"/>
        <function-ref name="receive" scoped="" ref="0x7fb770872400"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb770872590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb77086ad20" loc="5:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb77086ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7708730e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb770873270"/>
        <function-ref name="receive" scoped="" ref="0x7fb770873400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb770873590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb770873720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb7708738b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb770873a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb770888680" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb770888680"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb770888a00"/>
        <function-ref name="stop" scoped="" ref="0x7fb770888b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb7705e2c70" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb7705e2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb7705e1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb7705e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb7705e0440" loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb7705e0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7705e07c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb7705e0950"/>
        <function-ref name="receive" scoped="" ref="0x7fb7705e0ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb7705e0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb7705df020" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7705df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb7705df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb7705e1440" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb7705e1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7705e17c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb7705e1950"/>
        <function-ref name="receive" scoped="" ref="0x7fb7705e1ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb7705e1c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb7705e1e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb7705e0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb7705e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7705e2020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7705e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7705e23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7705e2530"/>
        <function-ref name="request" scoped="" ref="0x7fb7705e26c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb7705e2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7705e29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb7708038e0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7708038e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb770803c60"/>
        <function-ref name="configure" scoped="" ref="0x7fb770803df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb770806d00" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb770806d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7708020a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb770802230"/>
        <function-ref name="receive" scoped="" ref="0x7fb7708023c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb770802550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb7707ff1d0" loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7707ff1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb7707ff550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb770807670" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb770807670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb7708079f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb770807b80"/>
        <function-ref name="receive" scoped="" ref="0x7fb770807d10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb770806020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb7708061b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb770806340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb7708064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb770802e50" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb770802e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770801210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7708013a0"/>
        <function-ref name="request" scoped="" ref="0x7fb770801530"/>
        <function-ref name="granted" scoped="" ref="0x7fb7708016c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770801850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb77080cc90" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb77080cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7708080a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770808230"/>
        <function-ref name="request" scoped="" ref="0x7fb7708083c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb770808550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7708086e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb7707fb710" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb7707fb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb7707fba90"/>
        <function-ref name="txDone" scoped="" ref="0x7fb7707fbc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb770775e70" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb770775e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb770774240"/>
        <function-ref name="configure" scoped="" ref="0x7fb7707743d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fb770773890" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fb770773890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb770773c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fb770773dc0"/>
        <function-ref name="receive" scoped="" ref="0x7fb770772020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fb7707721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fb7707713e0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7707713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb770771780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb770771a50" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb770771a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb770771dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb77076f020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb77076f1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb77076f340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb77076f4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb77076f660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb77076f7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb77076f980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb77076fb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb77076fca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb77076fe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb77076e020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb77076e1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb77076e440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb77076e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb77076e760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb77076e8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb77076ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb77076ec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb77076eda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb77076d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb77076d1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb77076d340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb77076d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb77076d660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb77076d9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb77076db80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb77076dd10"/>
        <function-ref name="tx" scoped="" ref="0x7fb77076c020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb77076c1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb77076c340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb77076c4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb77076c660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb77076c7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fb77076c980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb77076cb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb77076cca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb77076ce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb77076b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb77076b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fb770774790" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fb770774790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb770774b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fb770774cc0"/>
        <function-ref name="receive" scoped="" ref="0x7fb770774e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fb770773020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fb7707731b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fb770773340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb7707734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb77076a020" loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb77076a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb77076ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb770769800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb770769340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770769cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb7707725b0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb7707725b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770772950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770772ae0"/>
        <function-ref name="request" scoped="" ref="0x7fb770772c70"/>
        <function-ref name="granted" scoped="" ref="0x7fb770772e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770771020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7707750d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7707750d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770775470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770775600"/>
        <function-ref name="request" scoped="" ref="0x7fb770775790"/>
        <function-ref name="granted" scoped="" ref="0x7fb770775920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770775ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb77076b5b0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb77076b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb77076b950"/>
        <function-ref name="txDone" scoped="" ref="0x7fb77076bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb770768120" loc="53:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb770768120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb7707684a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb770768630"/>
        <function-ref name="led1On" scoped="" ref="0x7fb7707687c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb770768950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb770768ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb770768c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb770768e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fb7707674d0"/>
        <function-ref name="set" scoped="" ref="0x7fb7707671b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb770767020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb770767340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb770758860" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb770758860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb770758be0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb770758d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb77075c500" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb77075c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb77075c880"/>
        <function-ref name="stop" scoped="" ref="0x7fb77075ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb77075cd30" loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb77075cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb77075e0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb77075e270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb77075e400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb77075e590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb77075e720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb77075e8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb77075ea40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb77075ebd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb77075ed60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb77075b020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb77075b1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb77075b340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb77075b4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb77075b760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb77075b8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb77075ba80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb77075bc10"/>
        <function-ref name="isUart" scoped="" ref="0x7fb77075bda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb77075a020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb77075a1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb77075a340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb77075a4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb77075a660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb77075a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb77075a980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb77075ad10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb770759020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb7707591b0"/>
        <function-ref name="tx" scoped="" ref="0x7fb770759340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb7707594d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb770759660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb7707597f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb770759980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb770759b10"/>
        <function-ref name="rx" scoped="" ref="0x7fb770759ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb770759e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb770758020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb7707581b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb770758340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb7707584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb77074b990" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb77074b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77074bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77074a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77074a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77074a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77074a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77074a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77074a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb77074a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77074ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77074aca0"/>
        <function-ref name="set" scoped="" ref="0x7fb77074ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770749020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7707491b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770749440"/>
        <function-ref name="clr" scoped="" ref="0x7fb7707495d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb77074f130" loc="76:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb77074f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb77074f4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb77074f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb770749990" loc="81:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb770749990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770749d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770748020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7707481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770748340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7707484d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770748660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7707487f0"/>
        <function-ref name="get" scoped="" ref="0x7fb770748980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770748b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770748ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb770748e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770747020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7707471b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770747440"/>
        <function-ref name="clr" scoped="" ref="0x7fb7707475d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb770747990" loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb770747990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770747d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770746020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7707461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770746340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7707464d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770746660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7707467f0"/>
        <function-ref name="get" scoped="" ref="0x7fb770746980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770746b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb770746ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb770746e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb770745020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7707451b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770745440"/>
        <function-ref name="clr" scoped="" ref="0x7fb7707455d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb770754550" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb770754550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb7707548d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb770754a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb770754bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb770754d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb770753020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb7707531b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb770753340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb7707534d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb770753660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb7707537f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb770753980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb770753b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb770753ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb770752020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb7707521b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb770752340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb7707524d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb770752660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb7707527f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb770752980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb770752b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb770752ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb770752e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb770751020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb7707511b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb770751540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb7707516d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb770751860"/>
        <function-ref name="tx" scoped="" ref="0x7fb7707519f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb770751b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb770751d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb770750020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb7707501b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb770750340"/>
        <function-ref name="rx" scoped="" ref="0x7fb7707504d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb770750660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb7707507f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb770750980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb770750b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb770750ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fb770757bc0" loc="74:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb770757bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb770754020"/>
        <function-ref name="stop" scoped="" ref="0x7fb7707541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb77074d990" loc="79:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb77074d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77074dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77074c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77074c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77074c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77074c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77074c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77074c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb77074c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77074cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77074cca0"/>
        <function-ref name="set" scoped="" ref="0x7fb77074ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb77074b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb77074b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb77074b440"/>
        <function-ref name="clr" scoped="" ref="0x7fb77074b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb77074fa00" loc="78:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb77074fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77074fd80"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77074e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77074e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77074e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77074e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77074e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77074e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb77074e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77074eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77074eca0"/>
        <function-ref name="set" scoped="" ref="0x7fb77074ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb77074d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb77074d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb77074d440"/>
        <function-ref name="clr" scoped="" ref="0x7fb77074d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb7706c6110" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb7706c6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb7706c5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7706c59a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb7706c54e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb7706c5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76f958c70" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f958c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76f957020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f9571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76f952d70" loc="48:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f952d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76f951180"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f951310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb76f9525d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb76f9525d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb76f952950"/>
        <function-ref name="txDone" scoped="" ref="0x7fb76f952ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f958020" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f958020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f9583a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f958530"/>
        <function-ref name="request" scoped="" ref="0x7fb76f9586c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f958850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f9589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb76f957be0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb76f957be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb76f956020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb76f9561b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb76f956340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb76f9564d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb76f956660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb76f9567f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb76f956980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb76f956b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb76f956ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb76f956e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb76f955020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb76f9551b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb76f955340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb76f9555d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb76f955760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb76f9558f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb76f955a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fb76f955c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb76f955da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb76f954020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb76f9541b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb76f954340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb76f9544d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb76f954660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76f9547f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb76f954b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb76f954d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb76f953020"/>
        <function-ref name="tx" scoped="" ref="0x7fb76f9531b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb76f953340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb76f9534d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb76f953660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb76f9537f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb76f953980"/>
        <function-ref name="rx" scoped="" ref="0x7fb76f953b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb76f953ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb76f953e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb76f952020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb76f9521b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb76f952340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76f957440" loc="44:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f957440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f9577c0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f957950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb7706aad50" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb7706aad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb7706a8100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb7706a8290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb7706a7370" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb7706a7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb7706a76f0"/>
        <function-ref name="configure" scoped="" ref="0x7fb7706a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb7706aece0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb7706aece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb7706ab0a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb7706ab230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7706aba60" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7706aba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7706abde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7706aa020"/>
        <function-ref name="request" scoped="" ref="0x7fb7706aa1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb7706aa340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7706aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb7706a8590" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7706a8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb7706a8910"/>
        <function-ref name="userId" scoped="" ref="0x7fb7706a8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb7706914b0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7706914b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb770691830"/>
        <function-ref name="userId" scoped="" ref="0x7fb7706919c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb7706a45c0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb7706a45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb7706a4960"/>
        <function-ref name="txDone" scoped="" ref="0x7fb7706a4af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb770692e70" loc="42:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb770692e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb770691220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb770692020" loc="40:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb770692020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb7706923c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb770692690" loc="41:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb770692690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb770692a10"/>
        <function-ref name="txDone" scoped="" ref="0x7fb770692ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb770618bf0" loc="92:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb770618bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb770617020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb7706171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb770616930" loc="96:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb770616930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb770616cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fb770616e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb770617400" loc="93:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb770617400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770617780"/>
        <function-ref name="requested" scoped="" ref="0x7fb770617910"/>
        <function-ref name="granted" scoped="" ref="0x7fb770617aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770617c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb770617dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb770619e60" loc="91:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb770619e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770618230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7706183c0"/>
        <function-ref name="request" scoped="" ref="0x7fb770618550"/>
        <function-ref name="granted" scoped="" ref="0x7fb7706186e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770618870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb770616060" loc="94:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb770616060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb7706163e0"/>
        <function-ref name="userId" scoped="" ref="0x7fb770616570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f8d9020" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f8d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f8d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb76f8d9630" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76f8d9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f8d99b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f8d9b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f8d9cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f8d9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76f8d56c0" loc="55:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f8d56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76f8d5a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f8d5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76f8d3400" loc="60:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f8d3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76f8d37a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f8d3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76f8d3bc0" loc="61:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76f8d3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f8d2020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f8d21b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f8d2340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f8d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76f8d5e40" loc="56:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f8d5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f8d41e0"/>
        <function-ref name="requested" scoped="" ref="0x7fb76f8d4370"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f8d4500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f8d4690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f8d4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76f8d2720" loc="62:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76f8d2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76f8d2aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76f8d2c30"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76f8d2dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76f8d1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76f8d11b0"/>
        <function-ref name="get" scoped="" ref="0x7fb76f8d1340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76f8d14d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76f8d1b10"/>
        <function-ref name="set" scoped="" ref="0x7fb76f8d17f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76f8d1660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76f8d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f8d7850" loc="54:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f8d7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f8d7bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f8d7d80"/>
        <function-ref name="request" scoped="" ref="0x7fb76f8d5020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f8d51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f8d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76f8d4a70" loc="57:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f8d4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f8d4df0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f8d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb76f8d1de0" loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb76f8d1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76f8d0180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76f8d0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb7705fb400" loc="72:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb7705fb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb7705fb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb7705fb9d0" loc="73:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb7705fb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7705fbd50"/>
        <function-ref name="requested" scoped="" ref="0x7fb7705fa020"/>
        <function-ref name="granted" scoped="" ref="0x7fb7705fa1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7705fa340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb7705fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb770610b20" loc="70:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb770610b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb7705fb020"/>
        <function-ref name="stop" scoped="" ref="0x7fb7705fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb7705fa720" loc="74:/home/ly/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb7705fa720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb7705faaa0"/>
        <function-ref name="userId" scoped="" ref="0x7fb7705fac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb76f8a0bd0" loc="62:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76f8a0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb76f89f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb76f89f270" loc="63:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f89f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f89f5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb76f89f780"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f89f910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f89faa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f89fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fb76f8a0470" loc="60:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fb76f8a0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76f8a07f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f8a0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76f89fe80" loc="64:/home/ly/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f89fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f89e220"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f89e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fb7705db920" loc="3:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fb7705db920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb7705dbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb7705d9020" loc="4:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7705d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7705d93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7705d9530"/>
        <function-ref name="request" scoped="" ref="0x7fb7705d96c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb7705d9850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7705d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb7705db0c0" loc="2:/home/ly/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb7705db0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb7705db440"/>
        <function-ref name="stop" scoped="" ref="0x7fb7705db5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb7705cd080" loc="43:/home/ly/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb7705cd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb7705cd400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb7705cccd0" loc="94:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb7705cccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb7705c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fb7705c9380" loc="95:/home/ly/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fb7705c9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fb7705c9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fb770349900" loc="49:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TempTestAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb770349900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb770349c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fb77034a240" loc="48:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TempTestAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fb77034a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb77034ae30"/>
        <function-ref name="readDone" scoped="" ref="0x7fb770349300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fb77034caa0" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TempTestAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb77034caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb77034ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fb77034f310" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TempTestAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fb77034f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb77034c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb77034c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7fb76f88fc50" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7fb76f88fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb76f88e020"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb76f88e1b0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb76f88e340"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb76f88e4d0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb76f88e660"/>
        <function-ref name="reset" scoped="" ref="0x7fb76f88e7f0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb76f88e980"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb76f88eb10"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb76f88eca0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb76f88ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7fb76f893020" loc="48:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7fb76f893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb76f8933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7fb76f893790" loc="49:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7fb76f893790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76f8923b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76f892830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7fb76f896160" loc="46:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7fb76f896160"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb76f8964e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7fb76f892e30" loc="51:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7fb76f892e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f8911e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f891370"/>
        <function-ref name="request" scoped="" ref="0x7fb76f891500"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f891690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f891820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7fb76f8907b0" loc="53:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7fb76f8907b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb76f890b30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb76f890cc0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb76f890e50"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb76f88f020"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb76f88f1b0"/>
        <function-ref name="reset" scoped="" ref="0x7fb76f88f340"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb76f88f4d0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb76f88f660"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb76f88f7f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb76f88f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7fb76f891af0" loc="52:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7fb76f891af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f891e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f890030"/>
        <function-ref name="request" scoped="" ref="0x7fb76f8901c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f890350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f8904e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7fb76f8968d0" loc="47:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TempTestAppC.TempSensor.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7fb76f8968d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76f895560"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76f8959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fb7705722c0" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7705722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb770572640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb7705727d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb770572960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb770572af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb770572c80"/>
        <function-ref name="reset" scoped="" ref="0x7fb770572e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb770570020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb7705701b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb770570340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb7705704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb770573020" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb770573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7705733a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770573530"/>
        <function-ref name="request" scoped="" ref="0x7fb7705736c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb770573850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7705739e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7fb7704f1610" loc="58:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fb7704f1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb7704f1990"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704f1b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb7704f1cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb7704f1e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7fb7704e92f0" loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7fb7704e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7704e9670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7704e9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7fb7704eaac0" loc="103:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7fb7704eaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7704eae40"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7704e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7fb7704f2480" loc="57:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7fb7704f2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704f2800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704f2990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704f2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704f2cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb7704f2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704f1020"/>
        <function-ref name="set" scoped="" ref="0x7fb7704f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7fb7704f6c90" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7fb7704f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7fb7704f50a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7fb7704f5230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7fb7704f53c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7fb7704f5550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7fb7704f56e0"/>
        <function-ref name="reset" scoped="" ref="0x7fb7704f5870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7fb7704f5a00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7fb7704f5b90"/>
        <function-ref name="resetDone" scoped="" ref="0x7fb7704f5d20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7fb7704f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fb7704f42f0" loc="56:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb7704f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704f4670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704f4800"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704f4990"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704f4b20"/>
        <function-ref name="get" scoped="" ref="0x7fb7704f4cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704f4e40"/>
        <function-ref name="set" scoped="" ref="0x7fb7704f2020"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb7704eb450" loc="62:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb7704eb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb7704eb7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb7704eb960"/>
        <function-ref name="led1On" scoped="" ref="0x7fb7704ebaf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb7704ebc80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb7704ebe10"/>
        <function-ref name="get" scoped="" ref="0x7fb7704ea020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb7704ea1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb7704ea7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb7704ea4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb7704ea340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb7704ea660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb7704f0240" loc="60:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7704f0240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7704ed6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704efc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7704eea70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7704ee5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7704eb020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7704edb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7704ee170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7704f0e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7704ed0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7704ef340"/>
        <function-ref name="stop" scoped="" ref="0x7fb7704ef810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7fb7704e0730" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7fb7704e0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb7704e0ab0"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704e0c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb7704e0dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb7704df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7fb7704e1370" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fb7704e1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704e16f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704e1880"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704e1a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704e1ba0"/>
        <function-ref name="get" scoped="" ref="0x7fb7704e1d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704e0020"/>
        <function-ref name="set" scoped="" ref="0x7fb7704e01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7fb7704e2020" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb7704e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704e2850"/>
        <function-ref name="get" scoped="" ref="0x7fb7704e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704e2b70"/>
        <function-ref name="set" scoped="" ref="0x7fb7704e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7704e31d0" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7704e31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7704e3550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7704e36e0"/>
        <function-ref name="request" scoped="" ref="0x7fb7704e3870"/>
        <function-ref name="granted" scoped="" ref="0x7fb7704e3a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7704e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb7704dc490" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704dc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704dc810"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704dc9a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7704dcb30"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704dccc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704dce50"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb7704db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704db1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb7704db340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb7704db4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7704db660"/>
        <function-ref name="set" scoped="" ref="0x7fb7704db7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7704db980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7704dbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb7704dbda0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb7704dd330" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704dd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704dd6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704dd840"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704dd9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704ddb60"/>
        <function-ref name="get" scoped="" ref="0x7fb7704ddcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704dde80"/>
        <function-ref name="set" scoped="" ref="0x7fb7704dc030"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704dc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb7704d7020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704d73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704d7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7704d76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704d7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704d79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb7704d7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704d7d00"/>
        <function-ref name="get" scoped="" ref="0x7fb7704d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb7704d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7704d6340"/>
        <function-ref name="set" scoped="" ref="0x7fb7704d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7704d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7704d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb7704d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb7704d9d60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704d9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704d8180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704d8310"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704d84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704d8630"/>
        <function-ref name="get" scoped="" ref="0x7fb7704d87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704d8950"/>
        <function-ref name="set" scoped="" ref="0x7fb7704d8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704d8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb7704d3de0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb7704d3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704d2180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704d2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7704d24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704d2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704d27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb7704d2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704d2ae0"/>
        <function-ref name="get" scoped="" ref="0x7fb7704d2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb7704d2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7704d1020"/>
        <function-ref name="set" scoped="" ref="0x7fb7704d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7704d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb7704d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb7704d1760"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb7704d4b60" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb7704d4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704d3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fb7704d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704d37f0"/>
        <function-ref name="set" scoped="" ref="0x7fb7704d3980"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb7704c6630" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb7704c6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb7704c69b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb7704c6b40"/>
        <function-ref name="start" scoped="" ref="0x7fb7704c6cd0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7704c6e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fb7704be740" loc="50:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fb7704be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7704beac0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7704bec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fb7704c0cd0" loc="47:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7fb7704c0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704bf230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704bf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704bf550"/>
        <function-ref name="get" scoped="" ref="0x7fb7704bf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704bf870"/>
        <function-ref name="set" scoped="" ref="0x7fb7704bfa00"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7fb7704c26d0" loc="45:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7fb7704c26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704c2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704c2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704c2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704c1020"/>
        <function-ref name="get" scoped="" ref="0x7fb7704c11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704c1340"/>
        <function-ref name="set" scoped="" ref="0x7fb7704c14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704c1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7fb7704c19c0" loc="46:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7fb7704c19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb7704c1d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fb7704c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb7704c01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb7704c0340"/>
        <function-ref name="get" scoped="" ref="0x7fb7704c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb7704c0660"/>
        <function-ref name="set" scoped="" ref="0x7fb7704c07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb7704c0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb7704cb2c0" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7704cb2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7704c3870"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704cae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7704c5c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7704c5780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7704c21e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7704c3cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7704c5300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7704ca020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7704c3260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7704ca4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7704ca9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb7704b35a0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7704b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7704afa80"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704b1090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7704b1e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7704b1990"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7704ae4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7704ae020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7704b1510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7704b2200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7704af470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7704b26d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb7704b2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb7704a2710" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb7704a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a2a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a2c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a2db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a1020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb7704988a0" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb7704988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770498c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770498db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770497020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704971b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770497340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb77049f710" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb77049f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049fa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049fc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77049fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049e020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb77049d710" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb77049d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049da90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77049ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049c020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb7704a8710" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb7704a8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a8a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a8c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a8db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a3020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb77049a710" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb77049a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049ab90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049ad20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770499020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704991b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770499340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb7704a1710" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb7704a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a1a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a1c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a1db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a0020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb7704978a0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb7704978a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770497c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770497db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770495020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704951b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770495340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb7704a4660" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb7704a4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a49e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a4b70"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a4d00"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a9020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb77049c710" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb77049c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049ca90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049cc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77049cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049b020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb7704a3710" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb7704a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a3a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a3c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a3db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a2020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb7704998a0" loc="57:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb7704998a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770499c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770499db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770498020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704981b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770498340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb7704a0710" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb7704a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a0a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a0c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a0db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049f020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb77049e710" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb77049e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049ea90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049ec20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77049edb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049d020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb7704a9710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb7704a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7704a9a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb7704a9c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7704a9db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704a8020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704a81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb77049b710" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb77049b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77049ba90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77049bc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77049bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77049a020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77049a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77049a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb77048e710" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb77048e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048ea90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048ec20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048edb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048d020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb7704848a0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb7704848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770484c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770484db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770483020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704831b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770483340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb77048b710" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb77048b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048ba90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048bc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048a020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb770489710" loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb770489710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770489a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770489c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770489db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb770488020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704881b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770488340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb770490710" loc="41:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb770490710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770490a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770490c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770490db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048f020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb770486710" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb770486710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770486b90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770486d20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770485020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704851b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770485340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb77048d710" loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb77048d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048da90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048c020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb7704838a0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb7704838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770483c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770483db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770482020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704821b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770482340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb7704926b0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb7704926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770492a30"/>
        <function-ref name="fired" scoped="" ref="0x7fb770492bc0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770492d50"/>
        <function-ref name="edge" scoped="" ref="0x7fb770491020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704911b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770491340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb770488710" loc="51:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb770488710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770488a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770488c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770488db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb770487020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704871b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770487340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb77048f710" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb77048f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048fa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048fc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048e020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb7704858a0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb7704858a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770485c20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770485db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb770484020"/>
        <function-ref name="edge" scoped="" ref="0x7fb7704841b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb770484340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7704844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb77048c710" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb77048c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048ca90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048cc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb77048b020"/>
        <function-ref name="enable" scoped="" ref="0x7fb77048b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb77048b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb77048a710" loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb77048a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77048aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb77048ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fb77048adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb770489020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704891b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770489340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb770491710" loc="40:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb770491710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770491a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770491c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770491db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb770490020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704901b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770490340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb770487710" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb770487710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb770487a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb770487c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb770487db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb770486020"/>
        <function-ref name="enable" scoped="" ref="0x7fb7704861b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb770486340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb7703af610" loc="46:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb7703af610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb7703af990"/>
        <function-ref name="fired" scoped="" ref="0x7fb7703afb20"/>
        <function-ref name="disable" scoped="" ref="0x7fb7703afcb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb7703afe40"/>
        <function-ref name="enable" scoped="" ref="0x7fb7703a2020"/>
        <function-ref name="getValue" scoped="" ref="0x7fb7703a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb7703b0a30" loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb7703b0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb7703b0db0"/>
        <function-ref name="disable" scoped="" ref="0x7fb7703af020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb7703af1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb7703af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb77039f9e0" loc="92:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb77039f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb77039fd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb77039e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb77039d770" loc="96:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb77039d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb77039db10"/>
        <function-ref name="configure" scoped="" ref="0x7fb77039dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb77039e270" loc="93:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77039e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77039e5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb77039e780"/>
        <function-ref name="granted" scoped="" ref="0x7fb77039e910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77039eaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb77039ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7703a0b60" loc="91:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7703a0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77039f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb77039f1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb77039f340"/>
        <function-ref name="granted" scoped="" ref="0x7fb77039f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77039f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb77039ee80" loc="94:/home/ly/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77039ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb77039d220"/>
        <function-ref name="userId" scoped="" ref="0x7fb77039d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f7fc1b0" loc="44:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f7fc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f7fc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb76f7fc7c0" loc="45:/home/ly/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb76f7fc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f7fcb40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f7fccd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f7fce60"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f7fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76f7f9850" loc="55:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f7f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76f7f9bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f7f9d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76f7f7590" loc="60:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f7f7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76f7f7930"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f7f7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76f7f7d50" loc="61:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76f7f7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f7f5100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f7f5290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f7f5420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f7f55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb76f7f8020" loc="56:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f7f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f7f83a0"/>
        <function-ref name="requested" scoped="" ref="0x7fb76f7f8530"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f7f86c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f7f8850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f7f89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb76f7f5800" loc="62:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb76f7f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb76f7f5b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb76f7f5d10"/>
        <function-ref name="led1On" scoped="" ref="0x7fb76f7f4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb76f7f41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb76f7f4340"/>
        <function-ref name="get" scoped="" ref="0x7fb76f7f44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb76f7f4660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb76f7f4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fb76f7f4980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb76f7f47f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb76f7f4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f7fa970" loc="54:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f7fa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f7fad10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f7f9020"/>
        <function-ref name="request" scoped="" ref="0x7fb76f7f91b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f7f9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f7f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76f7f8c30" loc="57:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f7f8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f7f7020"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f7f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb76f7f3020" loc="75:/home/ly/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb76f7f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76f7f33a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76f7f3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fb770398280" loc="69:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb770398280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb770398600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb770398790"/>
        <function-ref name="start" scoped="" ref="0x7fb770398920"/>
        <function-ref name="stop" scoped="" ref="0x7fb770398ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb770398d00" loc="71:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb770398d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb77036d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb77036d2f0" loc="72:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb77036d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77036d670"/>
        <function-ref name="requested" scoped="" ref="0x7fb77036d800"/>
        <function-ref name="granted" scoped="" ref="0x7fb77036d990"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77036db20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb77036dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb77036c020" loc="73:/home/ly/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77036c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb77036c3a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb77036c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fb76f7c30f0" loc="61:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb76f7c30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb76f7c3470"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb76f7c3600"/>
        <function-ref name="start" scoped="" ref="0x7fb76f7c3790"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f7c3920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fb76f7c3b70" loc="63:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fb76f7c3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fb76f7c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fb76f7c0680" loc="78:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7fb76f7c0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76f7c0a00"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76f7c0b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fb76f7c1270" loc="64:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb76f7c1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f7c15f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb76f7c1780"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f7c1910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f7c1aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f7c1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7fb76f7c0e60" loc="73:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7fb76f7c0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76f7bf210"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76f7bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7fb76f7c4970" loc="60:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb76f7c4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb76f7c4cf0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f7c4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb76f7c1e80" loc="65:/home/ly/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f7c1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f7c0220"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f7c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb77035f1e0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb77035f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb77035c630"/>
        <function-ref name="fired" scoped="" ref="0x7fb77035ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb77035d9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb77035d550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb77035a020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb77035cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb77035d0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb77035fdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb77035c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb77035e2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb77035e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb770346750" loc="42:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TempTestAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb770346750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76fecc390"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76fecc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb76fecb020" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TempTestAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb76fecb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb76fec9ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb76fecbc10"/>
        <function-ref name="read" scoped="" ref="0x7fb76fec95e0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76fec85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fb770346020" loc="41:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TempTestAppC.LightSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb770346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb7703463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb76f7a9bd0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb76f7a9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb76f7a8860"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76f7a8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb76f7a74a0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f7a6110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fb77030a960" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fb77030a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77030ace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb77030ae70"/>
        <function-ref name="request" scoped="" ref="0x7fb770309030"/>
        <function-ref name="granted" scoped="" ref="0x7fb7703091c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770309350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fb770314410" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fb770314410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb770312020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb7703124a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fb770311530" loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fb770311530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb7703101b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb770310670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fb77030c2c0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fb77030c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77030c640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb77030c7d0"/>
        <function-ref name="request" scoped="" ref="0x7fb77030c960"/>
        <function-ref name="granted" scoped="" ref="0x7fb77030caf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77030cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb770307020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb770307020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb770307c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fb770305450" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb770305450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb7703057d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb770305960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb770305af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb770305c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb770305e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb770304020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb7703041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fb77030b640" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fb77030b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77030b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb77030bb50"/>
        <function-ref name="request" scoped="" ref="0x7fb77030bce0"/>
        <function-ref name="granted" scoped="" ref="0x7fb77030be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77030a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fb7702dae40" loc="136:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fb7702dae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb7702d91e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb7702d9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fb76f79a720" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb76f79a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb76f79aaa0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f79ac30"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb76f79adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fb76f79b730" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f79b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb76f79bab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb76f79bc40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb76f79bdd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb76f79a020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb76f79a1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb76f79a340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb76f79a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fb76f799060" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb76f799060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb76f7993e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb76f799570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb76f7999a0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7999a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f798600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f79caf0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f79caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f79ce70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f79b030"/>
        <function-ref name="request" scoped="" ref="0x7fb76f79b1c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f79b350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f79b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fb77029d960" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fb77029d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb77029dce0"/>
        <function-ref name="configure" scoped="" ref="0x7fb77029de70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb77029c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fb77029a760" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fb77029a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb77029aae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb77029ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fb77029c920" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb77029c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb77029cca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb77029ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fb77029e1d0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb77029e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb77029e550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb77029e6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb77029e870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb77029ea00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb77029eb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb77029ed20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb77029d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb7702a2cd0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb7702a2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb77029f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb77029f230"/>
        <function-ref name="request" scoped="" ref="0x7fb77029f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb77029f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77029f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fb7702941d0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fb7702941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb770294550"/>
        <function-ref name="configure" scoped="" ref="0x7fb7702946e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb770294870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fb7702836b0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb7702836b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb770283a30"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb770283bc0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb770283d50"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb77028f020"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb77028f1b0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb77028f340"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb77028f4d0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb77028f660"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb77028f7f0"/>
        <function-ref name="getMem" scoped="" ref="0x7fb77028f980"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb77028fb10"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb77028fca0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb77028fe30"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb77028e120"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb77028e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fb770274200" loc="58:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb770274200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770274580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770274710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7702748a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770274a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770274bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770274d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770273020"/>
        <function-ref name="get" scoped="" ref="0x7fb7702731b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770273340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7702734d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770273660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7702737f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770273980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770273c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770273da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fb77027d3a0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb77027d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb77027d720"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb77027d8b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb77027da40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb77027dbd0"/>
        <function-ref name="fired" scoped="" ref="0x7fb77027dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fb770282d30" loc="50:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb770282d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb7702810e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770281270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770281400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770281590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770281720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb7702818b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770281a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb770281bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb770281d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fb770291020" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fb770291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb7702913a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770291530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fb770278200" loc="56:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb770278200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770278580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770278710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7702788a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770278a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770278bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770278d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770277020"/>
        <function-ref name="get" scoped="" ref="0x7fb7702771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770277340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7702774d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770277660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7702777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770277980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770277c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770277da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fb7702921d0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb7702921d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb770292550"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb7702926e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fb77026e200" loc="61:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb77026e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77026e580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77026e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77026e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77026ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77026ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77026ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77026d020"/>
        <function-ref name="get" scoped="" ref="0x7fb77026d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77026d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77026d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb77026d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb77026d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb77026d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb77026dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb77026dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fb77027c140" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb77027c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77027c5c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77027c750"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77027c8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77027ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77027cc00"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77027cd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77027b020"/>
        <function-ref name="get" scoped="" ref="0x7fb77027b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77027b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77027b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb77027b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb77027b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb77027b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb77027bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb77027bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770299c60" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770299c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb770296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fb770272200" loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb770272200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770272580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770272710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7702728a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770272a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770272bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770272d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770271020"/>
        <function-ref name="get" scoped="" ref="0x7fb7702711b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770271340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7702714d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770271660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7702717f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770271980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770271c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770271da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fb77028e5f0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb77028e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb77028e970"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb77028eb00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb77028ec90"/>
        <function-ref name="get" scoped="" ref="0x7fb77028ee20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770282020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb7702821b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb770282340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb7702824d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb770282660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb7702827f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb770282980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fb770291940" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fb770291940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb770291cc0"/>
        <function-ref name="userId" scoped="" ref="0x7fb770291e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fb770280160" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb770280160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb7702804e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb770280670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb770280800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb770280990"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb770280b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb770280cb0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb770280e40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb77027f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb77027f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fb770296980" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb770296980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb770296d00"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb770295020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb7702951b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb770295340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb7702954d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb770295660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb7702957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fb770276200" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb770276200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770276580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770276710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7702768a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770276a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770276bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770276d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770275020"/>
        <function-ref name="get" scoped="" ref="0x7fb7702751b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770275340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7702754d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770275660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7702757f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770275980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770275c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770275da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fb77027f530" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb77027f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb77027f8b0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb77027fa40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb77027fbd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb77027fd60"/>
        <function-ref name="fired" scoped="" ref="0x7fb77027d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fb77027a200" loc="55:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb77027a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb77027a580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb77027a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb77027a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb77027aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb77027abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb77027ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb770279020"/>
        <function-ref name="get" scoped="" ref="0x7fb7702791b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb770279340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb7702794d0"/>
        <function-ref name="set" scoped="" ref="0x7fb770279660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb7702797f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb770279980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb770279c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb770279da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fb770270200" loc="60:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb770270200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb770270580"/>
        <function-ref name="isInput" scoped="" ref="0x7fb770270710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb7702708a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb770270a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb770270bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb770270d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb77026f020"/>
        <function-ref name="get" scoped="" ref="0x7fb77026f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb77026f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb77026f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb77026f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb77026f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb77026f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb77026fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb77026fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fb7701b0020" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb7701b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb7701b03a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb7701b0530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb7701b06c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb7701b0850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb7701b09e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb7701b0b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb7701b0d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb7701af020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb7701af1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fb7701af340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb7701af4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb7701af660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb7701af7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb7701afa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb7701afc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb77011f3a0" loc="86:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb77011f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb77011f740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb77011f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb77011d570" loc="89:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb77011d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb77011d910"/>
        <function-ref name="configure" scoped="" ref="0x7fb77011daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb770120520" loc="85:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb770120520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7701208c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770120a50"/>
        <function-ref name="request" scoped="" ref="0x7fb770120be0"/>
        <function-ref name="granted" scoped="" ref="0x7fb770120d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb77011f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb77011fb20" loc="87:/home/ly/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb77011fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb77011d020"/>
        <function-ref name="userId" scoped="" ref="0x7fb77011d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f774060" loc="44:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f774060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f7743e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fb76f774670" loc="45:/home/ly/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fb76f774670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f7749f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f774b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f774d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f773020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb76f771530" loc="52:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb76f771530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb76f7718d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb76f771a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb76f76f610" loc="56:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb76f76f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb76f76f9b0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f76fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb76f76fdd0" loc="57:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb76f76fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb76f76e180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb76f76e310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb76f76e4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb76f76e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f7726c0" loc="51:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f7726c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f772a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f772bf0"/>
        <function-ref name="request" scoped="" ref="0x7fb76f772d80"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f771020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f7711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb76f771cb0" loc="53:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb76f771cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb76f76f0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fb76f76f230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb76f76e900" loc="68:/home/ly/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb76f76e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76f76ec80"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76f76ee10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb770101740" loc="55:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb770101740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb7701003d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fb7701021d0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fb7701021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770102550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb7701026e0"/>
        <function-ref name="request" scoped="" ref="0x7fb770102870"/>
        <function-ref name="granted" scoped="" ref="0x7fb770102a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770102b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fb770107d30" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fb770107d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7701040e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770104270"/>
        <function-ref name="request" scoped="" ref="0x7fb770104400"/>
        <function-ref name="granted" scoped="" ref="0x7fb770104590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770104720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fb7700fc9c0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fb7700fc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fb7700fcd40"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fb7700fa020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fb7700fa1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fb7700fa340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fb7700fa4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fb7700fa660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fb7700fa7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fb7700fa980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fb7700fab10"/>
        <function-ref name="getMem" scoped="" ref="0x7fb7700faca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fb7700fae30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fb7700f9020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fb7700f91b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fb7700f9440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fb7700f95d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fb7700f3020" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fb7700f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7700eb630"/>
        <function-ref name="fired" scoped="" ref="0x7fb7700f2a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7700ec920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7700ec4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7700e9020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7700ebab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7700ec020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7700f3c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7700eb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7700f2110"/>
        <function-ref name="stop" scoped="" ref="0x7fb7700f25e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fb7700fde40" loc="39:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb7700fde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb7700fc1e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb7700fc370"/>
        <function-ref name="start" scoped="" ref="0x7fb7700fc500"/>
        <function-ref name="stop" scoped="" ref="0x7fb7700fc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fb7700e96c0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fb7700e96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7700e6c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb7700e71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7700e6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7700e7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7700e4590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7700e4110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7700e7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7700e8390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7700e6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7700e8860"/>
        <function-ref name="stop" scoped="" ref="0x7fb7700e8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fb7700fd280" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb7700fd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb7700fd600"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb7700fd790"/>
        <function-ref name="start" scoped="" ref="0x7fb7700fd920"/>
        <function-ref name="stop" scoped="" ref="0x7fb7700fdab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fb7700f9a90" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fb7700f9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb7700f5020"/>
        <function-ref name="fired" scoped="" ref="0x7fb7700f7510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7700f6300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb7700f7e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fb7700f5920"/>
        <function-ref name="gett0" scoped="" ref="0x7fb7700f54a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7700f7990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb7700f86b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb7700f6910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7700f8b80"/>
        <function-ref name="stop" scoped="" ref="0x7fb7700f7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fb770095020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fb770095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb770095c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fb7700979c0" loc="42:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fb7700979c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb770097d40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb770096020"/>
        <function-ref name="start" scoped="" ref="0x7fb7700961b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770096340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fb770098030" loc="40:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fb770098030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7700983b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770098540"/>
        <function-ref name="request" scoped="" ref="0x7fb7700986d0"/>
        <function-ref name="granted" scoped="" ref="0x7fb770098860"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7700989f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fb77009ccb0" loc="38:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fb77009ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb7700990a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770099230"/>
        <function-ref name="request" scoped="" ref="0x7fb7700993c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb770099550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb7700996e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fb7700927f0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fb7700927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb770092b70"/>
        <function-ref name="runTask" scoped="" ref="0x7fb770092d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fb770098d80" loc="41:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fb770098d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb770097180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb770097310"/>
        <function-ref name="start" scoped="" ref="0x7fb7700974a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770097630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb7700634e0" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb7700634e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770060a20"/>
        <function-ref name="fired" scoped="" ref="0x7fb770061020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb770061da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770061920"/>
        <function-ref name="getdt" scoped="" ref="0x7fb77005e4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb77005e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb7700614a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770062110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770060410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb7700625e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb770062ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb77005c020" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb77005c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770059630"/>
        <function-ref name="fired" scoped="" ref="0x7fb77005ba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb77005a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb77005a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb770057020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770059ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb77005a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb77005cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770059020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb77005b110"/>
        <function-ref name="stop" scoped="" ref="0x7fb77005b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb770056b40" loc="45:/home/ly/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb770056b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770051110"/>
        <function-ref name="fired" scoped="" ref="0x7fb7700545b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb7700534a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb770053020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb770051a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb770051590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770054a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb770055750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb770053ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb770055c20"/>
        <function-ref name="stop" scoped="" ref="0x7fb770054130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fb76f78a060" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fb76f78a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f78ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fb76f788300" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fb76f788300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f787020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb76f7a15c0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f7a15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f7a0240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb76f7a5840" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb76f7a5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb76f7a2340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb76f7a4480"/>
        <function-ref name="read" scoped="" ref="0x7fb76f7a4df0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76f7a2df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fb77001ac90" loc="23:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb77001ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb7700190a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb770019230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb7700193c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb770019550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb7700196e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb770019870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb770019a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb77001b5e0" loc="22:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb77001b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb77001a240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb77001f1d0" loc="20:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb77001f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb77001ec40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb77001fdc0"/>
        <function-ref name="read" scoped="" ref="0x7fb77001e770"/>
        <function-ref name="readDone" scoped="" ref="0x7fb77001d730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb770018280" loc="24:/home/ly/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb770018280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb770018600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb770018790"/>
        <function-ref name="request" scoped="" ref="0x7fb770018920"/>
        <function-ref name="granted" scoped="" ref="0x7fb770018ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb770018c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fb76ff60380" loc="156:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fb76ff60380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76ff60700"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76ff60890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fb76fff0aa0" loc="119:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fb76fff0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76fff0e20"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76ffee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fb76ffe9100" loc="135:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fb76ffe9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb76ffe9480"/>
        <function-ref name="runTask" scoped="" ref="0x7fb76ffe9610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb77000a020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb77000a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb770008870"/>
        <function-ref name="fired" scoped="" ref="0x7fb770009840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb770008220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb770009d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb770008d30"/>
        <function-ref name="start" scoped="" ref="0x7fb77000ae30"/>
        <function-ref name="stop" scoped="" ref="0x7fb770009380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb770013150" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb770013150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fb771365800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fb771365800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb7700134d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb77000db10" loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb77000db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb77000c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fb77000e1d0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fb77000e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb77000e550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb77000e6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb77000e870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb77000ea00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb77000eb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb77000ed20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb77000d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb770013e70" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb770013e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb770011910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb770012a90"/>
        <function-ref name="read" scoped="" ref="0x7fb770011440"/>
        <function-ref name="readDone" scoped="" ref="0x7fb77000f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76ff24970" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76ff24970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76ff211b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76ff221b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76ff22b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76ff22670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76ff21670"/>
        <function-ref name="start" scoped="" ref="0x7fb76ff237c0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76ff23cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76ff24120" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76ff24120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76ff244a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f726ca0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f726ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f7224e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f7244e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f724e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f7249a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f7229a0"/>
        <function-ref name="start" scoped="" ref="0x7fb76f725ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f724020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f726450" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f726450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f7267d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb76f70c440" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f70c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76f70c7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76f70c950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76f70cae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76f70cc70"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f70ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb76f710880" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f710880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76f710c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76f710d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f70f020"/>
        <function-ref name="get" scoped="" ref="0x7fb76f70f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f70f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f70f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76f70f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f70f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f70f980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76f70fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76f70fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb76f70e020" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f70e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76f70e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76f70e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f70e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76f70e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76f70e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f70eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76f70ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76f70c020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76f70c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb76f7020c0" loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb76f7020c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb76f702440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb76f7025d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb76f702760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb76f7028f0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f702a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb76f706710" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb76f706710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb76f706a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb76f706c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f706db0"/>
        <function-ref name="get" scoped="" ref="0x7fb76f705020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f7051b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f705340"/>
        <function-ref name="getMode" scoped="" ref="0x7fb76f7054d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f705660"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f7057f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb76f705980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb76f705b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f7095b0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f7095b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f707df0"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f708df0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f7077a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f7072e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f7062e0"/>
        <function-ref name="start" scoped="" ref="0x7fb76f708420"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f708930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb76f70aca0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb76f70aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb76f7090a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb76f705da0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb76f705da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb76f703180"/>
        <function-ref name="getControl" scoped="" ref="0x7fb76f703310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb76f7034a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb76f703630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb76f7037c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb76f703950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb76f703ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb76f703c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fb76f703e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb76f71f020" loc="61:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb76f71f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f71d870"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f71e840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f71d220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f71ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f71dd30"/>
        <function-ref name="start" scoped="" ref="0x7fb76f71fe30"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f71e380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb76f719780" loc="73:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb76f719780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ecf290"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb770ecf600"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb76f716020"/>
        <function-ref name="fired" scoped="" ref="0x7fb76f717020"/>
        <function-ref name="startAt" scoped="" ref="0x7fb76f7179a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb76f7174e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb76f7164e0"/>
        <function-ref name="start" scoped="" ref="0x7fb76f7185d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb76f718ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb76f71b3d0" loc="68:/home/ly/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb76f71b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770ed06b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb770ed0e20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb76f71a240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb76f71abc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb76f71a700"/>
        <function-ref name="overflow" scoped="" ref="0x7fb76f7190d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fb76fef1bf0" loc="26:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fb76fef1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb76feee710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb76fef0860"/>
        <function-ref name="read" scoped="" ref="0x7fb76feee220"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76feed220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fb76ff1ccb0" loc="24:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fb76ff1ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fb76fef2850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fb76fef4940"/>
        <function-ref name="read" scoped="" ref="0x7fb76fef2360"/>
        <function-ref name="readDone" scoped="" ref="0x7fb76fef1360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb76feed8f0" loc="27:/home/ly/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76feed8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76feedc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76feede20"/>
        <function-ref name="request" scoped="" ref="0x7fb76feeb020"/>
        <function-ref name="granted" scoped="" ref="0x7fb76feeb1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76feeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fb76f734020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fb76f734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb76f7343a0"/>
        <function-ref name="configure" scoped="" ref="0x7fb76f734530"/>
        <function-ref name="dataReady" scoped="" ref="0x7fb76f7346c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fb76f735020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fb76f735020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fb76f7353a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fb76f735530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fb76f7356c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fb76f735850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fb76f7359e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fb76f735b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fb76f735d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fb76f734910" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fb76f734910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fb76f734c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fb76f734e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fb76f732280" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76f732280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f731020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb76f736360" loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb76f736360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb76f7366e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb76f736870"/>
        <function-ref name="request" scoped="" ref="0x7fb76f736a00"/>
        <function-ref name="granted" scoped="" ref="0x7fb76f736b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb76f736d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fb76f6c2dc0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fb76f6c2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f6c1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fb76f6c0120" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TempTestAppC.LightSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fb76f6c0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76f6c0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fb76fed3300" loc="44:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fb76fed3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fb76fed2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7fb76fed68b0" loc="43:/home/ly/tinyos-main/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7fb76fed68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7fb76fed6c30"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Read" loc="49:/home/ly/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb770eae5d0" loc="49:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770eae5d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb770ea0020" loc="55:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb770ea0d50" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770eae5d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb770ea07a0" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb770ea0ac0" loc="63:/home/ly/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770eae5d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fb770ebd270" loc="60:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fb770eaa7b0" loc="61:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fb770ea9020" loc="67:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fb770ea9800" loc="72:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fb770ea87d0" loc="83:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fb770ea5020" loc="100:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb770ea5830" loc="117:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fb770ea8020" loc="77:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb770ea43f0" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb770ea4170" loc="134:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fb770eaa020" loc="56:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fb770ea6020" loc="89:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fb770ea67b0" loc="94:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb770ebc410" loc="53:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb770ebc410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb770eb51f0" loc="136:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb770ebaa60" loc="83:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fb770eb7820" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb770eb7250" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb770eb7590" loc="114:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fb770eb8a60" loc="98:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fb770eb3270" loc="151:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fb770eb5980" loc="144:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb770eb8270" loc="92:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fb770ebb020" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb770ebcd00" loc="64:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fb770eb6820" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb770eb6250" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb770eb6590" loc="129:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fb770ebbae0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb770ebb860" loc="73:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb770eba350" loc="78:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/ly/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb770e830e0" loc="62:/home/ly/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fb770e55020" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fb770e57270" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fb770e56840" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fb770e59b00" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fb770e579e0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fb770e5cd10" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fb770e59420" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fb770e56120" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fb770f43020" loc="62:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fb7712a9dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fb770e03020" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb770e04cc0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fb770e07390" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb770e4eb60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb770e4d650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb770e03890" loc="57:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fb770e027b0" loc="59:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fb770e04560" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb770e02020" loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fb770e07b30" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fb770e06350" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fb770e06da0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb770e4eb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb770e4d650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb770e06b20" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb770e4eb60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb770e4d650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb770df60e0" loc="44:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fb770df3730" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fb770df34b0" loc="84:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb770df22e0" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb770df2060" loc="91:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb770df4ca0" loc="73:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb770df43e0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fb770df6a90" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb770df6810" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb770dfd3e0" loc="40:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fb770dfdd60" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb770dfdae0" loc="41:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fb770dfb790" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb770dfb510" loc="42:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fb770dfa2a0" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb770dfa020" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb770dfa990" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb770e0da80" loc="52:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb770e0a350" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fb770e0a0d0" loc="55:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb770e0c1f0" loc="53:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb770e13cb0" loc="45:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb770e0c930" loc="54:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb770e10c10" loc="47:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb770e0d390" loc="51:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb770e104d0" loc="46:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb770e0e350" loc="48:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fb770e0ec60" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb770e0e9e0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fb770e0ad60" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fb770e0aae0" loc="56:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb770dcf9f0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fb770f07a80" loc="85:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fb770f061f0" loc="86:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fb770f072b0" loc="79:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fb771120830" loc="52:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb771362020" loc="57:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fb771361020" loc="72:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fb771362790" loc="65:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fb771356350" loc="67:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fb771356ba0" loc="75:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb770ca3e30" loc="44:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb770ca25c0" loc="45:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb770ca3020" loc="42:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb770ca0480" loc="47:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb770ca3720" loc="43:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb770ca2ce0" loc="46:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb770ca4120" loc="40:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb770ca47f0" loc="41:/home/ly/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb770c77020" loc="78:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb770c77770" loc="80:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fb770c722e0" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb770c72060" loc="110:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb770c79770" loc="58:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb770c75780" loc="87:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fb770c72bd0" loc="117:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb770c75020" loc="85:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb770c78820" loc="73:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fb770c73020" loc="99:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fb770c78020" loc="66:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb770c7c8c0" loc="48:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fb770c74020" loc="92:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fb770c737c0" loc="101:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fb770c747e0" loc="94:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb770c79020" loc="53:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb770a28c40" loc="53:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb770a28c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb770a255a0" loc="61:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb770a1f5d0" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb770a1f5d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb770a1f810" loc="56:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb770a1a390" loc="109:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb770a1d3b0" loc="78:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fb770a1c9d0" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb770a1c400" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fb770a1c740" loc="103:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb770a1db90" loc="88:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fb770a1ab80" loc="116:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb770a1e390" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb770a1e110" loc="66:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb770a1f810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb770a1ebc0" loc="73:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/ly/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb7709b3e10" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb7709b3e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb7709ae070" loc="57:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb7709ae070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb7709ae990" loc="64:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb7709ae070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb7709adad0" loc="76:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb7709ad270" loc="71:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb7709ab270" loc="82:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb77088cc70" loc="95:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb7708894e0" loc="105:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fb77087e2a0" loc="49:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fb77087e020" loc="49:/home/ly/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb770884020" loc="50:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb770887c20" loc="50:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fb770884860" loc="59:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb770883740" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb770883150" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fb7708834b0" loc="69:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fb770882590" loc="79:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/ly/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb770874e40" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb770874870" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb770874bb0" loc="48:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fb77086eac0" loc="79:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fb77086e840" loc="79:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fb77086b930" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb77086b360" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb77086b6a0" loc="90:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fb77086d740" loc="65:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fb77086a2c0" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb770869920" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb770869c60" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb77086a020" loc="99:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fb77086e070" loc="72:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb770870720" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb770871db0" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb770870130" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb770870480" loc="57:/home/ly/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fb770815af0" loc="53:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb77080f4e0" loc="61:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb77080b890" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb770833e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb7708322b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb770812350" loc="120:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fb770813350" loc="97:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fb770816980" loc="88:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb770813b40" loc="102:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb770812db0" loc="128:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/ly/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fb770803020" loc="65:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb770805750" loc="59:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fb7707fcd70" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb7707fcaf0" loc="54:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fb7707fc350" loc="49:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fb7707d57c0" loc="213:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fb7707e0420" loc="143:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fb7707ed2a0" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770862110"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb770862950"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb7707ed020" loc="50:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770862110"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb770862950"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fb7707e3550" loc="123:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fb7707ea780" loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb77085d080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb77085d8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb7707ea500" loc="70:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb77085d080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb77085d8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fb7707da9a0" loc="180:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fb7707d6020" loc="197:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fb7707ecd20" loc="65:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770860020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb7708607b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fb7707e9020" loc="75:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb77085d080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb77085d8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fb7707e7d50" loc="97:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fb7707e7ad0" loc="97:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fb7707e73b0" loc="95:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fb7707da270" loc="179:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fb7707ec530" loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770860020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb7708607b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb7707ec2b0" loc="60:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770860020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb7708607b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fb7707e81f0" loc="85:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fb7707d9120" loc="181:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fb7707e8bd0" loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fb7707e8950" loc="90:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fb7707e45f0" loc="113:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fb7707e4d70" loc="118:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fb7707db3b0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fb7707de2b0" loc="163:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fb7707e24a0" loc="133:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fb7707dbaf0" loc="178:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fb7707e0c00" loc="148:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fb7707d9840" loc="182:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb7707e5570" loc="103:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb770865080"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fb7708647a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fb7707d7020" loc="187:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fb7707d5020" loc="207:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fb7707e99c0" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fb7707e9740" loc="80:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fb7707d42a0" loc="224:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb7707d4020" loc="224:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fb7707eda80" loc="55:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770862110"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb770862950"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fb7707e3cc0" loc="128:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fb7707df390" loc="153:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fb7707dcb60" loc="174:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb770833e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb7708322b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb7707dc8e0" loc="174:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb770833e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb7708322b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fb7707ded80" loc="168:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb770846020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb770846440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb7707deb00" loc="168:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb770846020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb770846440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fb7707d4b60" loc="231:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fb7707d7810" loc="192:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fb7707e5d20" loc="108:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fb7707d6780" loc="202:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fb7707dfb00" loc="158:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fb7707e2c80" loc="138:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb77075d860" loc="95:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb77075c0e0" loc="105:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fb7706b4020" loc="90:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fb7706b4880" loc="98:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb7706a04a0" loc="39:/home/ly/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb770686900" loc="56:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fb770685a20" loc="73:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb770686070" loc="46:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb7706851f0" loc="65:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb770684390" loc="81:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/ly/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fb77067ab60" loc="79:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb770682b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb77067a8e0" loc="79:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb770682b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fb77067eb90" loc="53:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fb77067b6f0" loc="62:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb770682b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb77067b470" loc="62:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb770682b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb77067a030" loc="70:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/ly/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fb770682b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fb77060c4b0" loc="62:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7fb7705be6b0" loc="41:/home/ly/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7fb7705aa6a0" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb7705aa0d0" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb7705aa410" loc="84:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7fb7705a8020" loc="92:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7fb7705ab8b0" loc="76:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7fb7705ac270" loc="61:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7fb7705a78e0" loc="109:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb7705a7660" loc="109:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fb7705ad020" loc="47:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7fb7705a63d0" loc="116:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb7705a6150" loc="116:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7fb7705a8e10" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb7705a8850" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb7705a8b80" loc="100:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7fb7705ad9f0" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb7705ad770" loc="54:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7fb7705ab050" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb7705aca60" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb7705acda0" loc="69:/home/ly/tinyos-main/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb770564b10" loc="68:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb770564350" loc="61:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fb770565b70" loc="54:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fb7705652b0" loc="53:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/ly/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fb7704c9cd0" loc="113:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb7704c9a50" loc="113:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fb7704c62a0" loc="138:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb7704c6020" loc="138:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb7704c9070" loc="104:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb7704c8560" loc="130:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/ly/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb7704a77b0" loc="52:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb7704a42b0" loc="72:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb7704a7020" loc="47:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fb7704a5a60" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fb7704a57e0" loc="67:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fb7704aa830" loc="42:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fb7704a5020" loc="59:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb770343c00" loc="57:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770343c00"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fb77033c020" loc="89:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770343c00"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb77033e650" loc="89:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb77033e9d0" loc="90:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770343c00"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fb77033ed30" loc="90:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fb77033fb10" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770343c00"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb77033f520" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb770343c00"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fb77033f880" loc="68:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fb77033dd90" loc="78:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fb77033db10" loc="78:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb77033b660" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb77033b020" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fb77033b3d0" loc="102:/home/ly/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb771dab920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fb77031ad30" loc="45:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fb77031ad30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fb770317730" loc="58:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/ly/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fb77031ad30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb77030f390" loc="52:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb77030f390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb77030fc90" loc="58:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb77030ea20" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb77030f390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb77030e470" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fb77030e790" loc="66:/home/ly/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb77030f390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fb7702fadf0" loc="189:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fb770303aa0" loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb770303820" loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fb770300020" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb770302990" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fb770302d00" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fb7702fca70" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb7702fd7e0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fb7702fc0d0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb7702fc450" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb7702fc7c0" loc="177:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fb7702f7770" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fb7702f70d0" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb7702f7460" loc="227:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fb7702fe3c0" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb7702ff150" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fb7702ff9f0" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb7702ffd80" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb7702fe110" loc="138:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fb7702f9ad0" loc="206:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb7702f9850" loc="206:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fb7702a7ce0" loc="97:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb7702a7020" loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fb77135dcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770331110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fb7703315e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb7702aa970" loc="86:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fb7703324e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fb770333b70"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fb7702aad60" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770331110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fb7703315e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fb7702a9110" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fb7702a94b0" loc="87:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb7702a9860" loc="88:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fb7702a9bd0" loc="88:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fb7702a6d40" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fb7702a6720" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fb7702a6ab0" loc="107:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fb7702a4780" loc="49:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fb7702a3020" loc="54:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fb77028c190" loc="63:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770321ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb7703207a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fb7702892e0" loc="82:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770331110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fb7703315e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb770289060" loc="82:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fb770287950" loc="106:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fb770285b50" loc="118:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb771366090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fb770285390" loc="112:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fb770285110" loc="112:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fb77028c9b0" loc="68:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb77031ee20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb77031d770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fb77028a7c0" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770331110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fb7703315e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb77028a170" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fb77028a530" loc="75:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb770331110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fb7703315e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fb770284be0" loc="128:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fb770290e50" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770321ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb7703207a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fb770290bd0" loc="51:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb770321ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fb7703207a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fb770289db0" loc="89:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fb770289b30" loc="89:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb771dab160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fb7702888d0" loc="95:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fb770288650" loc="95:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fb770287190" loc="101:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb771dab520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fb770284350" loc="123:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fb7702833b0" loc="133:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fb77028d8f0" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb77031ee20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb77031d770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fb77028d670" loc="57:/home/ly/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb77031ee20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fb77031d770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
